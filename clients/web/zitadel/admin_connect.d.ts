// @generated by protoc-gen-connect-es v0.7.0
// @generated from file zitadel/admin.proto (package zitadel.admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ActivateLabelPolicyRequest, ActivateLabelPolicyResponse, ActivateSMSProviderRequest, ActivateSMSProviderResponse, AddCustomDomainPolicyRequest, AddCustomDomainPolicyResponse, AddCustomOrgIAMPolicyRequest, AddCustomOrgIAMPolicyResponse, AddIAMMemberRequest, AddIAMMemberResponse, AddIDPToLoginPolicyRequest, AddIDPToLoginPolicyResponse, AddJWTIDPRequest, AddJWTIDPResponse, AddLDAPProviderRequest, AddLDAPProviderResponse, AddMultiFactorToLoginPolicyRequest, AddMultiFactorToLoginPolicyResponse, AddNotificationPolicyRequest, AddNotificationPolicyResponse, AddOIDCIDPRequest, AddOIDCIDPResponse, AddOIDCSettingsRequest, AddOIDCSettingsResponse, AddSecondFactorToLoginPolicyRequest, AddSecondFactorToLoginPolicyResponse, AddSMSProviderTwilioRequest, AddSMSProviderTwilioResponse, AddSMTPConfigRequest, AddSMTPConfigResponse, DeactivateIDPRequest, DeactivateIDPResponse, DeactivateSMSProviderRequest, DeactivateSMSProviderResponse, DeleteProviderRequest, DeleteProviderResponse, ExportDataRequest, ExportDataResponse, GetCustomDomainClaimedMessageTextRequest, GetCustomDomainClaimedMessageTextResponse, GetCustomDomainPolicyRequest, GetCustomDomainPolicyResponse, GetCustomInitMessageTextRequest, GetCustomInitMessageTextResponse, GetCustomLoginTextsRequest, GetCustomLoginTextsResponse, GetCustomOrgIAMPolicyRequest, GetCustomOrgIAMPolicyResponse, GetCustomPasswordChangeMessageTextRequest, GetCustomPasswordChangeMessageTextResponse, GetCustomPasswordlessRegistrationMessageTextRequest, GetCustomPasswordlessRegistrationMessageTextResponse, GetCustomPasswordResetMessageTextRequest, GetCustomPasswordResetMessageTextResponse, GetCustomVerifyEmailMessageTextRequest, GetCustomVerifyEmailMessageTextResponse, GetCustomVerifyPhoneMessageTextRequest, GetCustomVerifyPhoneMessageTextResponse, GetDefaultDomainClaimedMessageTextRequest, GetDefaultDomainClaimedMessageTextResponse, GetDefaultInitMessageTextRequest, GetDefaultInitMessageTextResponse, GetDefaultLanguageRequest, GetDefaultLanguageResponse, GetDefaultLoginTextsRequest, GetDefaultLoginTextsResponse, GetDefaultOrgRequest, GetDefaultOrgResponse, GetDefaultPasswordChangeMessageTextRequest, GetDefaultPasswordChangeMessageTextResponse, GetDefaultPasswordlessRegistrationMessageTextRequest, GetDefaultPasswordlessRegistrationMessageTextResponse, GetDefaultPasswordResetMessageTextRequest, GetDefaultPasswordResetMessageTextResponse, GetDefaultVerifyEmailMessageTextRequest, GetDefaultVerifyEmailMessageTextResponse, GetDefaultVerifyPhoneMessageTextRequest, GetDefaultVerifyPhoneMessageTextResponse, GetDomainPolicyRequest, GetDomainPolicyResponse, GetFileSystemNotificationProviderRequest, GetFileSystemNotificationProviderResponse, GetIDPByIDRequest, GetIDPByIDResponse, GetLabelPolicyRequest, GetLabelPolicyResponse, GetLockoutPolicyRequest, GetLockoutPolicyResponse, GetLoginPolicyRequest, GetLoginPolicyResponse, GetLogNotificationProviderRequest, GetLogNotificationProviderResponse, GetMyInstanceRequest, GetMyInstanceResponse, GetNotificationPolicyRequest, GetNotificationPolicyResponse, GetOIDCSettingsRequest, GetOIDCSettingsResponse, GetOrgByIDRequest, GetOrgByIDResponse, GetOrgIAMPolicyRequest, GetOrgIAMPolicyResponse, GetPasswordAgePolicyRequest, GetPasswordAgePolicyResponse, GetPasswordComplexityPolicyRequest, GetPasswordComplexityPolicyResponse, GetPreviewLabelPolicyRequest, GetPreviewLabelPolicyResponse, GetPrivacyPolicyRequest, GetPrivacyPolicyResponse, GetProviderByIDRequest, GetProviderByIDResponse, GetSecretGeneratorRequest, GetSecretGeneratorResponse, GetSecurityPolicyRequest, GetSecurityPolicyResponse, GetSMSProviderRequest, GetSMSProviderResponse, GetSMTPConfigRequest, GetSMTPConfigResponse, GetSupportedLanguagesRequest, GetSupportedLanguagesResponse, HealthzRequest, HealthzResponse, ImportDataRequest, ImportDataResponse, IsOrgUniqueRequest, IsOrgUniqueResponse, ListAggregateTypesRequest, ListAggregateTypesResponse, ListEventsRequest, ListEventsResponse, ListEventTypesRequest, ListEventTypesResponse, ListFailedEventsRequest, ListFailedEventsResponse, ListIAMMemberRolesRequest, ListIAMMemberRolesResponse, ListIAMMembersRequest, ListIAMMembersResponse, ListIDPsRequest, ListIDPsResponse, ListInstanceDomainsRequest, ListInstanceDomainsResponse, ListLoginPolicyIDPsRequest, ListLoginPolicyIDPsResponse, ListLoginPolicyMultiFactorsRequest, ListLoginPolicyMultiFactorsResponse, ListLoginPolicySecondFactorsRequest, ListLoginPolicySecondFactorsResponse, ListOrgsRequest, ListOrgsResponse, ListProvidersRequest, ListProvidersResponse, ListSecretGeneratorsRequest, ListSecretGeneratorsResponse, ListSMSProvidersRequest, ListSMSProvidersResponse, ListViewsRequest, ListViewsResponse, ReactivateIDPRequest, ReactivateIDPResponse, RemoveFailedEventRequest, RemoveFailedEventResponse, RemoveIAMMemberRequest, RemoveIAMMemberResponse, RemoveIDPFromLoginPolicyRequest, RemoveIDPFromLoginPolicyResponse, RemoveIDPRequest, RemoveIDPResponse, RemoveLabelPolicyFontRequest, RemoveLabelPolicyFontResponse, RemoveLabelPolicyIconDarkRequest, RemoveLabelPolicyIconDarkResponse, RemoveLabelPolicyIconRequest, RemoveLabelPolicyIconResponse, RemoveLabelPolicyLogoDarkRequest, RemoveLabelPolicyLogoDarkResponse, RemoveLabelPolicyLogoRequest, RemoveLabelPolicyLogoResponse, RemoveMultiFactorFromLoginPolicyRequest, RemoveMultiFactorFromLoginPolicyResponse, RemoveOrgRequest, RemoveOrgResponse, RemoveSecondFactorFromLoginPolicyRequest, RemoveSecondFactorFromLoginPolicyResponse, RemoveSMSProviderRequest, RemoveSMSProviderResponse, RemoveSMTPConfigRequest, RemoveSMTPConfigResponse, ResetCustomDomainClaimedMessageTextToDefaultRequest, ResetCustomDomainClaimedMessageTextToDefaultResponse, ResetCustomDomainPolicyToDefaultRequest, ResetCustomDomainPolicyToDefaultResponse, ResetCustomInitMessageTextToDefaultRequest, ResetCustomInitMessageTextToDefaultResponse, ResetCustomLoginTextsToDefaultRequest, ResetCustomLoginTextsToDefaultResponse, ResetCustomOrgIAMPolicyToDefaultRequest, ResetCustomOrgIAMPolicyToDefaultResponse, ResetCustomPasswordChangeMessageTextToDefaultRequest, ResetCustomPasswordChangeMessageTextToDefaultResponse, ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse, ResetCustomPasswordResetMessageTextToDefaultRequest, ResetCustomPasswordResetMessageTextToDefaultResponse, ResetCustomVerifyEmailMessageTextToDefaultRequest, ResetCustomVerifyEmailMessageTextToDefaultResponse, ResetCustomVerifyPhoneMessageTextToDefaultRequest, ResetCustomVerifyPhoneMessageTextToDefaultResponse, SetCustomLoginTextsRequest, SetCustomLoginTextsResponse, SetDefaultDomainClaimedMessageTextRequest, SetDefaultDomainClaimedMessageTextResponse, SetDefaultInitMessageTextRequest, SetDefaultInitMessageTextResponse, SetDefaultLanguageRequest, SetDefaultLanguageResponse, SetDefaultOrgRequest, SetDefaultOrgResponse, SetDefaultPasswordChangeMessageTextRequest, SetDefaultPasswordChangeMessageTextResponse, SetDefaultPasswordlessRegistrationMessageTextRequest, SetDefaultPasswordlessRegistrationMessageTextResponse, SetDefaultPasswordResetMessageTextRequest, SetDefaultPasswordResetMessageTextResponse, SetDefaultVerifyEmailMessageTextRequest, SetDefaultVerifyEmailMessageTextResponse, SetDefaultVerifyPhoneMessageTextRequest, SetDefaultVerifyPhoneMessageTextResponse, SetSecurityPolicyRequest, SetSecurityPolicyResponse, SetUpOrgRequest, SetUpOrgResponse, UpdateCustomDomainPolicyRequest, UpdateCustomDomainPolicyResponse, UpdateCustomOrgIAMPolicyRequest, UpdateCustomOrgIAMPolicyResponse, UpdateDomainPolicyRequest, UpdateDomainPolicyResponse, UpdateIAMMemberRequest, UpdateIAMMemberResponse, UpdateIDPJWTConfigRequest, UpdateIDPJWTConfigResponse, UpdateIDPOIDCConfigRequest, UpdateIDPOIDCConfigResponse, UpdateIDPRequest, UpdateIDPResponse, UpdateLabelPolicyRequest, UpdateLabelPolicyResponse, UpdateLDAPProviderRequest, UpdateLDAPProviderResponse, UpdateLockoutPolicyRequest, UpdateLockoutPolicyResponse, UpdateLoginPolicyRequest, UpdateLoginPolicyResponse, UpdateNotificationPolicyRequest, UpdateNotificationPolicyResponse, UpdateOIDCSettingsRequest, UpdateOIDCSettingsResponse, UpdateOrgIAMPolicyRequest, UpdateOrgIAMPolicyResponse, UpdatePasswordAgePolicyRequest, UpdatePasswordAgePolicyResponse, UpdatePasswordComplexityPolicyRequest, UpdatePasswordComplexityPolicyResponse, UpdatePrivacyPolicyRequest, UpdatePrivacyPolicyResponse, UpdateSecretGeneratorRequest, UpdateSecretGeneratorResponse, UpdateSMSProviderTwilioRequest, UpdateSMSProviderTwilioResponse, UpdateSMSProviderTwilioTokenRequest, UpdateSMSProviderTwilioTokenResponse, UpdateSMTPConfigPasswordRequest, UpdateSMTPConfigPasswordResponse, UpdateSMTPConfigRequest, UpdateSMTPConfigResponse } from "./admin_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service zitadel.admin.v1.AdminService
 */
export declare const AdminService: {
  readonly typeName: "zitadel.admin.v1.AdminService",
  readonly methods: {
    /**
     * Indicates if ZITADEL is running.
     * It respondes as soon as ZITADEL started
     *
     * @generated from rpc zitadel.admin.v1.AdminService.Healthz
     */
    readonly healthz: {
      readonly name: "Healthz",
      readonly I: typeof HealthzRequest,
      readonly O: typeof HealthzResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default languages
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSupportedLanguages
     */
    readonly getSupportedLanguages: {
      readonly name: "GetSupportedLanguages",
      readonly I: typeof GetSupportedLanguagesRequest,
      readonly O: typeof GetSupportedLanguagesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultLanguage
     */
    readonly setDefaultLanguage: {
      readonly name: "SetDefaultLanguage",
      readonly I: typeof SetDefaultLanguageRequest,
      readonly O: typeof SetDefaultLanguageResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultLanguage
     */
    readonly getDefaultLanguage: {
      readonly name: "GetDefaultLanguage",
      readonly I: typeof GetDefaultLanguageRequest,
      readonly O: typeof GetDefaultLanguageResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the details of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetMyInstance
     */
    readonly getMyInstance: {
      readonly name: "GetMyInstance",
      readonly I: typeof GetMyInstanceRequest,
      readonly O: typeof GetMyInstanceResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the domains of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListInstanceDomains
     */
    readonly listInstanceDomains: {
      readonly name: "ListInstanceDomains",
      readonly I: typeof ListInstanceDomainsRequest,
      readonly O: typeof ListInstanceDomainsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListSecretGenerators
     */
    readonly listSecretGenerators: {
      readonly name: "ListSecretGenerators",
      readonly I: typeof ListSecretGeneratorsRequest,
      readonly O: typeof ListSecretGeneratorsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get Secret Generator by type (e.g PasswordResetCode)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSecretGenerator
     */
    readonly getSecretGenerator: {
      readonly name: "GetSecretGenerator",
      readonly I: typeof GetSecretGeneratorRequest,
      readonly O: typeof GetSecretGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update secret generator configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSecretGenerator
     */
    readonly updateSecretGenerator: {
      readonly name: "UpdateSecretGenerator",
      readonly I: typeof UpdateSecretGeneratorRequest,
      readonly O: typeof UpdateSecretGeneratorResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSMTPConfig
     */
    readonly getSMTPConfig: {
      readonly name: "GetSMTPConfig",
      readonly I: typeof GetSMTPConfigRequest,
      readonly O: typeof GetSMTPConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Add system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSMTPConfig
     */
    readonly addSMTPConfig: {
      readonly name: "AddSMTPConfig",
      readonly I: typeof AddSMTPConfigRequest,
      readonly O: typeof AddSMTPConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMTPConfig
     */
    readonly updateSMTPConfig: {
      readonly name: "UpdateSMTPConfig",
      readonly I: typeof UpdateSMTPConfigRequest,
      readonly O: typeof UpdateSMTPConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update system smtp configuration password for host
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMTPConfigPassword
     */
    readonly updateSMTPConfigPassword: {
      readonly name: "UpdateSMTPConfigPassword",
      readonly I: typeof UpdateSMTPConfigPasswordRequest,
      readonly O: typeof UpdateSMTPConfigPasswordResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Remove system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSMTPConfig
     */
    readonly removeSMTPConfig: {
      readonly name: "RemoveSMTPConfig",
      readonly I: typeof RemoveSMTPConfigRequest,
      readonly O: typeof RemoveSMTPConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * list sms provider configurations
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListSMSProviders
     */
    readonly listSMSProviders: {
      readonly name: "ListSMSProviders",
      readonly I: typeof ListSMSProvidersRequest,
      readonly O: typeof ListSMSProvidersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSMSProvider
     */
    readonly getSMSProvider: {
      readonly name: "GetSMSProvider",
      readonly I: typeof GetSMSProviderRequest,
      readonly O: typeof GetSMSProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Add twilio sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSMSProviderTwilio
     */
    readonly addSMSProviderTwilio: {
      readonly name: "AddSMSProviderTwilio",
      readonly I: typeof AddSMSProviderTwilioRequest,
      readonly O: typeof AddSMSProviderTwilioResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update twilio sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMSProviderTwilio
     */
    readonly updateSMSProviderTwilio: {
      readonly name: "UpdateSMSProviderTwilio",
      readonly I: typeof UpdateSMSProviderTwilioRequest,
      readonly O: typeof UpdateSMSProviderTwilioResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update twilio sms provider token
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMSProviderTwilioToken
     */
    readonly updateSMSProviderTwilioToken: {
      readonly name: "UpdateSMSProviderTwilioToken",
      readonly I: typeof UpdateSMSProviderTwilioTokenRequest,
      readonly O: typeof UpdateSMSProviderTwilioTokenResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Activate sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ActivateSMSProvider
     */
    readonly activateSMSProvider: {
      readonly name: "ActivateSMSProvider",
      readonly I: typeof ActivateSMSProviderRequest,
      readonly O: typeof ActivateSMSProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deactivate sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeactivateSMSProvider
     */
    readonly deactivateSMSProvider: {
      readonly name: "DeactivateSMSProvider",
      readonly I: typeof DeactivateSMSProviderRequest,
      readonly O: typeof DeactivateSMSProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Remove sms provider token
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSMSProvider
     */
    readonly removeSMSProvider: {
      readonly name: "RemoveSMSProvider",
      readonly I: typeof RemoveSMSProviderRequest,
      readonly O: typeof RemoveSMSProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get OIDC settings (e.g token lifetimes, etc.)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOIDCSettings
     */
    readonly getOIDCSettings: {
      readonly name: "GetOIDCSettings",
      readonly I: typeof GetOIDCSettingsRequest,
      readonly O: typeof GetOIDCSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Add oidc settings (e.g token lifetimes, etc)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddOIDCSettings
     */
    readonly addOIDCSettings: {
      readonly name: "AddOIDCSettings",
      readonly I: typeof AddOIDCSettingsRequest,
      readonly O: typeof AddOIDCSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Update oidc settings (e.g token lifetimes, etc)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateOIDCSettings
     */
    readonly updateOIDCSettings: {
      readonly name: "UpdateOIDCSettings",
      readonly I: typeof UpdateOIDCSettingsRequest,
      readonly O: typeof UpdateOIDCSettingsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get file system notification provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetFileSystemNotificationProvider
     */
    readonly getFileSystemNotificationProvider: {
      readonly name: "GetFileSystemNotificationProvider",
      readonly I: typeof GetFileSystemNotificationProviderRequest,
      readonly O: typeof GetFileSystemNotificationProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get log notification provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLogNotificationProvider
     */
    readonly getLogNotificationProvider: {
      readonly name: "GetLogNotificationProvider",
      readonly I: typeof GetLogNotificationProviderRequest,
      readonly O: typeof GetLogNotificationProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Get the security policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSecurityPolicy
     */
    readonly getSecurityPolicy: {
      readonly name: "GetSecurityPolicy",
      readonly I: typeof GetSecurityPolicyRequest,
      readonly O: typeof GetSecurityPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * set the security policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetSecurityPolicy
     */
    readonly setSecurityPolicy: {
      readonly name: "SetSecurityPolicy",
      readonly I: typeof SetSecurityPolicyRequest,
      readonly O: typeof SetSecurityPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns an organisation by id
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOrgByID
     */
    readonly getOrgByID: {
      readonly name: "GetOrgByID",
      readonly I: typeof GetOrgByIDRequest,
      readonly O: typeof GetOrgByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Checks whether an organisation exists by the given parameters
     *
     * @generated from rpc zitadel.admin.v1.AdminService.IsOrgUnique
     */
    readonly isOrgUnique: {
      readonly name: "IsOrgUnique",
      readonly I: typeof IsOrgUniqueRequest,
      readonly O: typeof IsOrgUniqueResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Set the default org
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultOrg
     */
    readonly setDefaultOrg: {
      readonly name: "SetDefaultOrg",
      readonly I: typeof SetDefaultOrgRequest,
      readonly O: typeof SetDefaultOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Set the default org
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultOrg
     */
    readonly getDefaultOrg: {
      readonly name: "GetDefaultOrg",
      readonly I: typeof GetDefaultOrgRequest,
      readonly O: typeof GetDefaultOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all organisations matching the request
     * all queries need to match (AND)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListOrgs
     */
    readonly listOrgs: {
      readonly name: "ListOrgs",
      readonly I: typeof ListOrgsRequest,
      readonly O: typeof ListOrgsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Creates a new org and user
     * and adds the user to the orgs members as ORG_OWNER
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetUpOrg
     */
    readonly setUpOrg: {
      readonly name: "SetUpOrg",
      readonly I: typeof SetUpOrgRequest,
      readonly O: typeof SetUpOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the organisation and all its resource (Users, Projects, Grants to and from the org) to removed
     * Users of this organisation will not be able login
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveOrg
     */
    readonly removeOrg: {
      readonly name: "RemoveOrg",
      readonly I: typeof RemoveOrgRequest,
      readonly O: typeof RemoveOrgResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns a identity provider configuration of the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetIDPByID
     */
    readonly getIDPByID: {
      readonly name: "GetIDPByID",
      readonly I: typeof GetIDPByIDRequest,
      readonly O: typeof GetIDPByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all identity provider configurations of the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIDPs
     */
    readonly listIDPs: {
      readonly name: "ListIDPs",
      readonly I: typeof ListIDPsRequest,
      readonly O: typeof ListIDPsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a new oidc identity provider configuration the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddOIDCIDP
     */
    readonly addOIDCIDP: {
      readonly name: "AddOIDCIDP",
      readonly I: typeof AddOIDCIDPRequest,
      readonly O: typeof AddOIDCIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a new jwt identity provider configuration the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddJWTIDP
     */
    readonly addJWTIDP: {
      readonly name: "AddJWTIDP",
      readonly I: typeof AddJWTIDPRequest,
      readonly O: typeof AddJWTIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDP
     */
    readonly updateIDP: {
      readonly name: "UpdateIDP",
      readonly I: typeof UpdateIDPRequest,
      readonly O: typeof UpdateIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the idp to IDP_STATE_INACTIVE
     * the state MUST be IDP_STATE_ACTIVE for this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeactivateIDP
     */
    readonly deactivateIDP: {
      readonly name: "DeactivateIDP",
      readonly I: typeof DeactivateIDPRequest,
      readonly O: typeof DeactivateIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the idp to IDP_STATE_ACTIVE
     * the state MUST be IDP_STATE_INACTIVE for this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ReactivateIDP
     */
    readonly reactivateIDP: {
      readonly name: "ReactivateIDP",
      readonly I: typeof ReactivateIDPRequest,
      readonly O: typeof ReactivateIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * RemoveIDP deletes the IDP permanetly
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIDP
     */
    readonly removeIDP: {
      readonly name: "RemoveIDP",
      readonly I: typeof RemoveIDPRequest,
      readonly O: typeof RemoveIDPResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the oidc configuration of the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDPOIDCConfig
     */
    readonly updateIDPOIDCConfig: {
      readonly name: "UpdateIDPOIDCConfig",
      readonly I: typeof UpdateIDPOIDCConfigRequest,
      readonly O: typeof UpdateIDPOIDCConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the jwt configuration of the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDPJWTConfig
     */
    readonly updateIDPJWTConfig: {
      readonly name: "UpdateIDPJWTConfig",
      readonly I: typeof UpdateIDPJWTConfigRequest,
      readonly O: typeof UpdateIDPJWTConfigResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all identity providers, which match the query
     * Limit should always be set, there is a default limit set by the service
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListProviders
     */
    readonly listProviders: {
      readonly name: "ListProviders",
      readonly I: typeof ListProvidersRequest,
      readonly O: typeof ListProvidersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns an identity provider of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetProviderByID
     */
    readonly getProviderByID: {
      readonly name: "GetProviderByID",
      readonly I: typeof GetProviderByIDRequest,
      readonly O: typeof GetProviderByIDResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Add a new ldap identity provider on the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddLDAPProvider
     */
    readonly addLDAPProvider: {
      readonly name: "AddLDAPProvider",
      readonly I: typeof AddLDAPProviderRequest,
      readonly O: typeof AddLDAPProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Change an existing ldap identity provider on the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLDAPProvider
     */
    readonly updateLDAPProvider: {
      readonly name: "UpdateLDAPProvider",
      readonly I: typeof UpdateLDAPProviderRequest,
      readonly O: typeof UpdateLDAPProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Remove an identity provider
     * Will remove all linked providers of this configuration on the users
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeleteProvider
     */
    readonly deleteProvider: {
      readonly name: "DeleteProvider",
      readonly I: typeof DeleteProviderRequest,
      readonly O: typeof DeleteProviderResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Returns the Org IAM policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOrgIAMPolicy
     */
    readonly getOrgIAMPolicy: {
      readonly name: "GetOrgIAMPolicy",
      readonly I: typeof GetOrgIAMPolicyRequest,
      readonly O: typeof GetOrgIAMPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Updates the default OrgIAM policy.
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateOrgIAMPolicy
     */
    readonly updateOrgIAMPolicy: {
      readonly name: "UpdateOrgIAMPolicy",
      readonly I: typeof UpdateOrgIAMPolicyRequest,
      readonly O: typeof UpdateOrgIAMPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Returns the customised policy or the default if not customised
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomOrgIAMPolicy
     */
    readonly getCustomOrgIAMPolicy: {
      readonly name: "GetCustomOrgIAMPolicy",
      readonly I: typeof GetCustomOrgIAMPolicyRequest,
      readonly O: typeof GetCustomOrgIAMPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Defines a custom OrgIAM policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddCustomOrgIAMPolicy
     */
    readonly addCustomOrgIAMPolicy: {
      readonly name: "AddCustomOrgIAMPolicy",
      readonly I: typeof AddCustomOrgIAMPolicyRequest,
      readonly O: typeof AddCustomOrgIAMPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Updates a custom OrgIAM policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateCustomOrgIAMPolicy
     */
    readonly updateCustomOrgIAMPolicy: {
      readonly name: "UpdateCustomOrgIAMPolicy",
      readonly I: typeof UpdateCustomOrgIAMPolicyRequest,
      readonly O: typeof UpdateCustomOrgIAMPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Resets the org iam policy of the organisation to default
     * ZITADEL will fallback to the default policy defined by the ZITADEL administrators
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomOrgIAMPolicyToDefault
     */
    readonly resetCustomOrgIAMPolicyToDefault: {
      readonly name: "ResetCustomOrgIAMPolicyToDefault",
      readonly I: typeof ResetCustomOrgIAMPolicyToDefaultRequest,
      readonly O: typeof ResetCustomOrgIAMPolicyToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the Domain policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDomainPolicy
     */
    readonly getDomainPolicy: {
      readonly name: "GetDomainPolicy",
      readonly I: typeof GetDomainPolicyRequest,
      readonly O: typeof GetDomainPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default Domain policy.
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateDomainPolicy
     */
    readonly updateDomainPolicy: {
      readonly name: "UpdateDomainPolicy",
      readonly I: typeof UpdateDomainPolicyRequest,
      readonly O: typeof UpdateDomainPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the customised policy or the default if not customised
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomDomainPolicy
     */
    readonly getCustomDomainPolicy: {
      readonly name: "GetCustomDomainPolicy",
      readonly I: typeof GetCustomDomainPolicyRequest,
      readonly O: typeof GetCustomDomainPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Defines a custom Domain policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddCustomDomainPolicy
     */
    readonly addCustomDomainPolicy: {
      readonly name: "AddCustomDomainPolicy",
      readonly I: typeof AddCustomDomainPolicyRequest,
      readonly O: typeof AddCustomDomainPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates a custom Domain policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateCustomDomainPolicy
     */
    readonly updateCustomDomainPolicy: {
      readonly name: "UpdateCustomDomainPolicy",
      readonly I: typeof UpdateCustomDomainPolicyRequest,
      readonly O: typeof UpdateCustomDomainPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Resets the org iam policy of the organisation to default
     * ZITADEL will fallback to the default policy defined by the ZITADEL administrators
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomDomainPolicyToDefault
     */
    readonly resetCustomDomainPolicyToDefault: {
      readonly name: "ResetCustomDomainPolicyToDefault",
      readonly I: typeof ResetCustomDomainPolicyToDefaultRequest,
      readonly O: typeof ResetCustomDomainPolicyToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the label policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLabelPolicy
     */
    readonly getLabelPolicy: {
      readonly name: "GetLabelPolicy",
      readonly I: typeof GetLabelPolicyRequest,
      readonly O: typeof GetLabelPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the preview label policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPreviewLabelPolicy
     */
    readonly getPreviewLabelPolicy: {
      readonly name: "GetPreviewLabelPolicy",
      readonly I: typeof GetPreviewLabelPolicyRequest,
      readonly O: typeof GetPreviewLabelPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default label policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLabelPolicy
     */
    readonly updateLabelPolicy: {
      readonly name: "UpdateLabelPolicy",
      readonly I: typeof UpdateLabelPolicyRequest,
      readonly O: typeof UpdateLabelPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Activates all changes of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ActivateLabelPolicy
     */
    readonly activateLabelPolicy: {
      readonly name: "ActivateLabelPolicy",
      readonly I: typeof ActivateLabelPolicyRequest,
      readonly O: typeof ActivateLabelPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the logo of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyLogo
     */
    readonly removeLabelPolicyLogo: {
      readonly name: "RemoveLabelPolicyLogo",
      readonly I: typeof RemoveLabelPolicyLogoRequest,
      readonly O: typeof RemoveLabelPolicyLogoResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the logo dark of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyLogoDark
     */
    readonly removeLabelPolicyLogoDark: {
      readonly name: "RemoveLabelPolicyLogoDark",
      readonly I: typeof RemoveLabelPolicyLogoDarkRequest,
      readonly O: typeof RemoveLabelPolicyLogoDarkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the icon of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyIcon
     */
    readonly removeLabelPolicyIcon: {
      readonly name: "RemoveLabelPolicyIcon",
      readonly I: typeof RemoveLabelPolicyIconRequest,
      readonly O: typeof RemoveLabelPolicyIconResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the logo dark of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyIconDark
     */
    readonly removeLabelPolicyIconDark: {
      readonly name: "RemoveLabelPolicyIconDark",
      readonly I: typeof RemoveLabelPolicyIconDarkRequest,
      readonly O: typeof RemoveLabelPolicyIconDarkResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the font of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyFont
     */
    readonly removeLabelPolicyFont: {
      readonly name: "RemoveLabelPolicyFont",
      readonly I: typeof RemoveLabelPolicyFontRequest,
      readonly O: typeof RemoveLabelPolicyFontResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the login policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLoginPolicy
     */
    readonly getLoginPolicy: {
      readonly name: "GetLoginPolicy",
      readonly I: typeof GetLoginPolicyRequest,
      readonly O: typeof GetLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default login policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLoginPolicy
     */
    readonly updateLoginPolicy: {
      readonly name: "UpdateLoginPolicy",
      readonly I: typeof UpdateLoginPolicyRequest,
      readonly O: typeof UpdateLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the idps linked to the default login policy,
     * defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicyIDPs
     */
    readonly listLoginPolicyIDPs: {
      readonly name: "ListLoginPolicyIDPs",
      readonly I: typeof ListLoginPolicyIDPsRequest,
      readonly O: typeof ListLoginPolicyIDPsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds the povided idp to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddIDPToLoginPolicy
     */
    readonly addIDPToLoginPolicy: {
      readonly name: "AddIDPToLoginPolicy",
      readonly I: typeof AddIDPToLoginPolicyRequest,
      readonly O: typeof AddIDPToLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the povided idp from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIDPFromLoginPolicy
     */
    readonly removeIDPFromLoginPolicy: {
      readonly name: "RemoveIDPFromLoginPolicy",
      readonly I: typeof RemoveIDPFromLoginPolicyRequest,
      readonly O: typeof RemoveIDPFromLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the available second factors defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicySecondFactors
     */
    readonly listLoginPolicySecondFactors: {
      readonly name: "ListLoginPolicySecondFactors",
      readonly I: typeof ListLoginPolicySecondFactorsRequest,
      readonly O: typeof ListLoginPolicySecondFactorsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a second factor to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSecondFactorToLoginPolicy
     */
    readonly addSecondFactorToLoginPolicy: {
      readonly name: "AddSecondFactorToLoginPolicy",
      readonly I: typeof AddSecondFactorToLoginPolicyRequest,
      readonly O: typeof AddSecondFactorToLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a second factor from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSecondFactorFromLoginPolicy
     */
    readonly removeSecondFactorFromLoginPolicy: {
      readonly name: "RemoveSecondFactorFromLoginPolicy",
      readonly I: typeof RemoveSecondFactorFromLoginPolicyRequest,
      readonly O: typeof RemoveSecondFactorFromLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the available multi factors defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicyMultiFactors
     */
    readonly listLoginPolicyMultiFactors: {
      readonly name: "ListLoginPolicyMultiFactors",
      readonly I: typeof ListLoginPolicyMultiFactorsRequest,
      readonly O: typeof ListLoginPolicyMultiFactorsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a multi factor to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddMultiFactorToLoginPolicy
     */
    readonly addMultiFactorToLoginPolicy: {
      readonly name: "AddMultiFactorToLoginPolicy",
      readonly I: typeof AddMultiFactorToLoginPolicyRequest,
      readonly O: typeof AddMultiFactorToLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes a multi factor from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveMultiFactorFromLoginPolicy
     */
    readonly removeMultiFactorFromLoginPolicy: {
      readonly name: "RemoveMultiFactorFromLoginPolicy",
      readonly I: typeof RemoveMultiFactorFromLoginPolicyRequest,
      readonly O: typeof RemoveMultiFactorFromLoginPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the password complexity policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPasswordComplexityPolicy
     */
    readonly getPasswordComplexityPolicy: {
      readonly name: "GetPasswordComplexityPolicy",
      readonly I: typeof GetPasswordComplexityPolicyRequest,
      readonly O: typeof GetPasswordComplexityPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default password complexity policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePasswordComplexityPolicy
     */
    readonly updatePasswordComplexityPolicy: {
      readonly name: "UpdatePasswordComplexityPolicy",
      readonly I: typeof UpdatePasswordComplexityPolicyRequest,
      readonly O: typeof UpdatePasswordComplexityPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the password age policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPasswordAgePolicy
     */
    readonly getPasswordAgePolicy: {
      readonly name: "GetPasswordAgePolicy",
      readonly I: typeof GetPasswordAgePolicyRequest,
      readonly O: typeof GetPasswordAgePolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default password age policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePasswordAgePolicy
     */
    readonly updatePasswordAgePolicy: {
      readonly name: "UpdatePasswordAgePolicy",
      readonly I: typeof UpdatePasswordAgePolicyRequest,
      readonly O: typeof UpdatePasswordAgePolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the lockout policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLockoutPolicy
     */
    readonly getLockoutPolicy: {
      readonly name: "GetLockoutPolicy",
      readonly I: typeof GetLockoutPolicyRequest,
      readonly O: typeof GetLockoutPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default lockout policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLockoutPolicy
     */
    readonly updateLockoutPolicy: {
      readonly name: "UpdateLockoutPolicy",
      readonly I: typeof UpdateLockoutPolicyRequest,
      readonly O: typeof UpdateLockoutPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the privacy policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPrivacyPolicy
     */
    readonly getPrivacyPolicy: {
      readonly name: "GetPrivacyPolicy",
      readonly I: typeof GetPrivacyPolicyRequest,
      readonly O: typeof GetPrivacyPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default privacy policy of ZITADEL
     * it impacts all organisations without a customised policy
     * Variable {{.Lang}} can be set to have different links based on the language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePrivacyPolicy
     */
    readonly updatePrivacyPolicy: {
      readonly name: "UpdatePrivacyPolicy",
      readonly I: typeof UpdatePrivacyPolicyRequest,
      readonly O: typeof UpdatePrivacyPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Add a default notification policy for ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddNotificationPolicy
     */
    readonly addNotificationPolicy: {
      readonly name: "AddNotificationPolicy",
      readonly I: typeof AddNotificationPolicyRequest,
      readonly O: typeof AddNotificationPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the notification policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetNotificationPolicy
     */
    readonly getNotificationPolicy: {
      readonly name: "GetNotificationPolicy",
      readonly I: typeof GetNotificationPolicyRequest,
      readonly O: typeof GetNotificationPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Updates the default notification policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateNotificationPolicy
     */
    readonly updateNotificationPolicy: {
      readonly name: "UpdateNotificationPolicy",
      readonly I: typeof UpdateNotificationPolicyRequest,
      readonly O: typeof UpdateNotificationPolicyResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for initial message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultInitMessageText
     */
    readonly getDefaultInitMessageText: {
      readonly name: "GetDefaultInitMessageText",
      readonly I: typeof GetDefaultInitMessageTextRequest,
      readonly O: typeof GetDefaultInitMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for initial message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomInitMessageText
     */
    readonly getCustomInitMessageText: {
      readonly name: "GetCustomInitMessageText",
      readonly I: typeof GetCustomInitMessageTextRequest,
      readonly O: typeof GetCustomInitMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for initial message
     * it impacts all organisations without customized initial message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultInitMessageText
     */
    readonly setDefaultInitMessageText: {
      readonly name: "SetDefaultInitMessageText",
      readonly I: typeof SetDefaultInitMessageTextRequest,
      readonly O: typeof SetDefaultInitMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom init message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomInitMessageTextToDefault
     */
    readonly resetCustomInitMessageTextToDefault: {
      readonly name: "ResetCustomInitMessageTextToDefault",
      readonly I: typeof ResetCustomInitMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomInitMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for password reset message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordResetMessageText
     */
    readonly getDefaultPasswordResetMessageText: {
      readonly name: "GetDefaultPasswordResetMessageText",
      readonly I: typeof GetDefaultPasswordResetMessageTextRequest,
      readonly O: typeof GetDefaultPasswordResetMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for password reset message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordResetMessageText
     */
    readonly getCustomPasswordResetMessageText: {
      readonly name: "GetCustomPasswordResetMessageText",
      readonly I: typeof GetCustomPasswordResetMessageTextRequest,
      readonly O: typeof GetCustomPasswordResetMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for password reset message
     * it impacts all organisations without customized password reset message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordResetMessageText
     */
    readonly setDefaultPasswordResetMessageText: {
      readonly name: "SetDefaultPasswordResetMessageText",
      readonly I: typeof SetDefaultPasswordResetMessageTextRequest,
      readonly O: typeof SetDefaultPasswordResetMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom password reset message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordResetMessageTextToDefault
     */
    readonly resetCustomPasswordResetMessageTextToDefault: {
      readonly name: "ResetCustomPasswordResetMessageTextToDefault",
      readonly I: typeof ResetCustomPasswordResetMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomPasswordResetMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for verify email message (translation files)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultVerifyEmailMessageText
     */
    readonly getDefaultVerifyEmailMessageText: {
      readonly name: "GetDefaultVerifyEmailMessageText",
      readonly I: typeof GetDefaultVerifyEmailMessageTextRequest,
      readonly O: typeof GetDefaultVerifyEmailMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for verify email message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomVerifyEmailMessageText
     */
    readonly getCustomVerifyEmailMessageText: {
      readonly name: "GetCustomVerifyEmailMessageText",
      readonly I: typeof GetCustomVerifyEmailMessageTextRequest,
      readonly O: typeof GetCustomVerifyEmailMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for verify email message
     * it impacts all organisations without customized verify email message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultVerifyEmailMessageText
     */
    readonly setDefaultVerifyEmailMessageText: {
      readonly name: "SetDefaultVerifyEmailMessageText",
      readonly I: typeof SetDefaultVerifyEmailMessageTextRequest,
      readonly O: typeof SetDefaultVerifyEmailMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom verify email message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomVerifyEmailMessageTextToDefault
     */
    readonly resetCustomVerifyEmailMessageTextToDefault: {
      readonly name: "ResetCustomVerifyEmailMessageTextToDefault",
      readonly I: typeof ResetCustomVerifyEmailMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomVerifyEmailMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for verify phone message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultVerifyPhoneMessageText
     */
    readonly getDefaultVerifyPhoneMessageText: {
      readonly name: "GetDefaultVerifyPhoneMessageText",
      readonly I: typeof GetDefaultVerifyPhoneMessageTextRequest,
      readonly O: typeof GetDefaultVerifyPhoneMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for verify phone message
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomVerifyPhoneMessageText
     */
    readonly getCustomVerifyPhoneMessageText: {
      readonly name: "GetCustomVerifyPhoneMessageText",
      readonly I: typeof GetCustomVerifyPhoneMessageTextRequest,
      readonly O: typeof GetCustomVerifyPhoneMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for verify phone message
     * it impacts all organisations without customized verify phone message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultVerifyPhoneMessageText
     */
    readonly setDefaultVerifyPhoneMessageText: {
      readonly name: "SetDefaultVerifyPhoneMessageText",
      readonly I: typeof SetDefaultVerifyPhoneMessageTextRequest,
      readonly O: typeof SetDefaultVerifyPhoneMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom verify phone text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomVerifyPhoneMessageTextToDefault
     */
    readonly resetCustomVerifyPhoneMessageTextToDefault: {
      readonly name: "ResetCustomVerifyPhoneMessageTextToDefault",
      readonly I: typeof ResetCustomVerifyPhoneMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomVerifyPhoneMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for domain claimed message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultDomainClaimedMessageText
     */
    readonly getDefaultDomainClaimedMessageText: {
      readonly name: "GetDefaultDomainClaimedMessageText",
      readonly I: typeof GetDefaultDomainClaimedMessageTextRequest,
      readonly O: typeof GetDefaultDomainClaimedMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for domain claimed message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomDomainClaimedMessageText
     */
    readonly getCustomDomainClaimedMessageText: {
      readonly name: "GetCustomDomainClaimedMessageText",
      readonly I: typeof GetCustomDomainClaimedMessageTextRequest,
      readonly O: typeof GetCustomDomainClaimedMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for domain claimed message
     * it impacts all organisations without customized domain claimed message text
     * The Following Variables can be used:
     * {{.Domain}} {{.TempUsername}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultDomainClaimedMessageText
     */
    readonly setDefaultDomainClaimedMessageText: {
      readonly name: "SetDefaultDomainClaimedMessageText",
      readonly I: typeof SetDefaultDomainClaimedMessageTextRequest,
      readonly O: typeof SetDefaultDomainClaimedMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom domain claimed message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomDomainClaimedMessageTextToDefault
     */
    readonly resetCustomDomainClaimedMessageTextToDefault: {
      readonly name: "ResetCustomDomainClaimedMessageTextToDefault",
      readonly I: typeof ResetCustomDomainClaimedMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomDomainClaimedMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for passwordless registration message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordlessRegistrationMessageText
     */
    readonly getDefaultPasswordlessRegistrationMessageText: {
      readonly name: "GetDefaultPasswordlessRegistrationMessageText",
      readonly I: typeof GetDefaultPasswordlessRegistrationMessageTextRequest,
      readonly O: typeof GetDefaultPasswordlessRegistrationMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for passwordless registration message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordlessRegistrationMessageText
     */
    readonly getCustomPasswordlessRegistrationMessageText: {
      readonly name: "GetCustomPasswordlessRegistrationMessageText",
      readonly I: typeof GetCustomPasswordlessRegistrationMessageTextRequest,
      readonly O: typeof GetCustomPasswordlessRegistrationMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for passwordless registration message
     * it impacts all organisations without customized passwordless registration message text
     * The Following Variables can be used:
     * {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordlessRegistrationMessageText
     */
    readonly setDefaultPasswordlessRegistrationMessageText: {
      readonly name: "SetDefaultPasswordlessRegistrationMessageText",
      readonly I: typeof SetDefaultPasswordlessRegistrationMessageTextRequest,
      readonly O: typeof SetDefaultPasswordlessRegistrationMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom passwordless link message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordlessRegistrationMessageTextToDefault
     */
    readonly resetCustomPasswordlessRegistrationMessageTextToDefault: {
      readonly name: "ResetCustomPasswordlessRegistrationMessageTextToDefault",
      readonly I: typeof ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for password change message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordChangeMessageText
     */
    readonly getDefaultPasswordChangeMessageText: {
      readonly name: "GetDefaultPasswordChangeMessageText",
      readonly I: typeof GetDefaultPasswordChangeMessageTextRequest,
      readonly O: typeof GetDefaultPasswordChangeMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for password change message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordChangeMessageText
     */
    readonly getCustomPasswordChangeMessageText: {
      readonly name: "GetCustomPasswordChangeMessageText",
      readonly I: typeof GetCustomPasswordChangeMessageTextRequest,
      readonly O: typeof GetCustomPasswordChangeMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for password change message
     * it impacts all organisations without customized password change message text
     * The Following Variables can be used:
     * {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordChangeMessageText
     */
    readonly setDefaultPasswordChangeMessageText: {
      readonly name: "SetDefaultPasswordChangeMessageText",
      readonly I: typeof SetDefaultPasswordChangeMessageTextRequest,
      readonly O: typeof SetDefaultPasswordChangeMessageTextResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom password change message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordChangeMessageTextToDefault
     */
    readonly resetCustomPasswordChangeMessageTextToDefault: {
      readonly name: "ResetCustomPasswordChangeMessageTextToDefault",
      readonly I: typeof ResetCustomPasswordChangeMessageTextToDefaultRequest,
      readonly O: typeof ResetCustomPasswordChangeMessageTextToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the default custom texts for login ui (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultLoginTexts
     */
    readonly getDefaultLoginTexts: {
      readonly name: "GetDefaultLoginTexts",
      readonly I: typeof GetDefaultLoginTextsRequest,
      readonly O: typeof GetDefaultLoginTextsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the custom texts for login ui
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomLoginTexts
     */
    readonly getCustomLoginTexts: {
      readonly name: "GetCustomLoginTexts",
      readonly I: typeof GetCustomLoginTextsRequest,
      readonly O: typeof GetCustomLoginTextsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the custom text for login ui
     * it impacts all organisations without customized login ui texts
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetCustomLoginText
     */
    readonly setCustomLoginText: {
      readonly name: "SetCustomLoginText",
      readonly I: typeof SetCustomLoginTextsRequest,
      readonly O: typeof SetCustomLoginTextsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the custom texts for login ui
     * it impacts all organisations without customized login ui texts
     * The default text form translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomLoginTextToDefault
     */
    readonly resetCustomLoginTextToDefault: {
      readonly name: "ResetCustomLoginTextToDefault",
      readonly I: typeof ResetCustomLoginTextsToDefaultRequest,
      readonly O: typeof ResetCustomLoginTextsToDefaultResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns the IAM roles visible for the requested user
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIAMMemberRoles
     */
    readonly listIAMMemberRoles: {
      readonly name: "ListIAMMemberRoles",
      readonly I: typeof ListIAMMemberRolesRequest,
      readonly O: typeof ListIAMMemberRolesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all members matching the request
     * all queries need to match (ANDed)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIAMMembers
     */
    readonly listIAMMembers: {
      readonly name: "ListIAMMembers",
      readonly I: typeof ListIAMMembersRequest,
      readonly O: typeof ListIAMMembersResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Adds a user to the membership list of ZITADEL with the given roles
     * undefined roles will be dropped
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddIAMMember
     */
    readonly addIAMMember: {
      readonly name: "AddIAMMember",
      readonly I: typeof AddIAMMemberRequest,
      readonly O: typeof AddIAMMemberResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Sets the given roles on a member.
     * The member has only roles provided by this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIAMMember
     */
    readonly updateIAMMember: {
      readonly name: "UpdateIAMMember",
      readonly I: typeof UpdateIAMMemberRequest,
      readonly O: typeof UpdateIAMMemberResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Removes the user from the membership list of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIAMMember
     */
    readonly removeIAMMember: {
      readonly name: "RemoveIAMMember",
      readonly I: typeof RemoveIAMMemberRequest,
      readonly O: typeof RemoveIAMMemberResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns all stored read models of ZITADEL
     * views are used for search optimisation and optimise request latencies
     * they represent the delta of the event happend on the objects
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListViews
     */
    readonly listViews: {
      readonly name: "ListViews",
      readonly I: typeof ListViewsRequest,
      readonly O: typeof ListViewsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Returns event descriptions which cannot be processed.
     * It's possible that some events need some retries.
     * For example if the SMTP-API wasn't able to send an email at the first time
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListFailedEvents
     */
    readonly listFailedEvents: {
      readonly name: "ListFailedEvents",
      readonly I: typeof ListFailedEventsRequest,
      readonly O: typeof ListFailedEventsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Deletes the event from failed events view.
     * the event is not removed from the change stream
     * This call is usefull if the system was able to process the event later.
     * e.g. if the second try of sending an email was successful. the first try produced a
     * failed event. You can find out if it worked on the `failure_count`
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveFailedEvent
     */
    readonly removeFailedEvent: {
      readonly name: "RemoveFailedEvent",
      readonly I: typeof RemoveFailedEventRequest,
      readonly O: typeof RemoveFailedEventResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Imports data into instance and creates different objects
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ImportData
     */
    readonly importData: {
      readonly name: "ImportData",
      readonly I: typeof ImportDataRequest,
      readonly O: typeof ImportDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * Exports data from instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ExportData
     */
    readonly exportData: {
      readonly name: "ExportData",
      readonly I: typeof ExportDataRequest,
      readonly O: typeof ExportDataResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListEventTypes
     */
    readonly listEventTypes: {
      readonly name: "ListEventTypes",
      readonly I: typeof ListEventTypesRequest,
      readonly O: typeof ListEventTypesResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListEvents
     */
    readonly listEvents: {
      readonly name: "ListEvents",
      readonly I: typeof ListEventsRequest,
      readonly O: typeof ListEventsResponse,
      readonly kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListAggregateTypes
     */
    readonly listAggregateTypes: {
      readonly name: "ListAggregateTypes",
      readonly I: typeof ListAggregateTypesRequest,
      readonly O: typeof ListAggregateTypesResponse,
      readonly kind: MethodKind.Unary,
    },
  }
};

