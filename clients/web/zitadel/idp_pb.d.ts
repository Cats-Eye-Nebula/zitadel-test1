// @generated by protoc-gen-es v1.0.0
// @generated from file zitadel/idp.proto (package zitadel.idp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { ObjectDetails, TextQueryMethod } from "./object_pb.js";

/**
 * @generated from enum zitadel.idp.v1.IDPState
 */
export declare enum IDPState {
  /**
   * @generated from enum value: IDP_STATE_UNSPECIFIED = 0;
   */
  IDP_STATE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_STATE_ACTIVE = 1;
   */
  IDP_STATE_ACTIVE = 1,

  /**
   * @generated from enum value: IDP_STATE_INACTIVE = 2;
   */
  IDP_STATE_INACTIVE = 2,
}

/**
 * @generated from enum zitadel.idp.v1.IDPStylingType
 */
export declare enum IDPStylingType {
  /**
   * @generated from enum value: STYLING_TYPE_UNSPECIFIED = 0;
   */
  STYLING_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: STYLING_TYPE_GOOGLE = 1;
   */
  STYLING_TYPE_GOOGLE = 1,
}

/**
 * authorization framework of the identity provider
 *
 * @generated from enum zitadel.idp.v1.IDPType
 */
export declare enum IDPType {
  /**
   * @generated from enum value: IDP_TYPE_UNSPECIFIED = 0;
   */
  IDP_TYPE_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_TYPE_OIDC = 1;
   */
  IDP_TYPE_OIDC = 1,

  /**
   * PLANNED: IDP_TYPE_SAML
   *
   * @generated from enum value: IDP_TYPE_JWT = 3;
   */
  IDP_TYPE_JWT = 3,
}

/**
 * the owner of the identity provider.
 *
 * @generated from enum zitadel.idp.v1.IDPOwnerType
 */
export declare enum IDPOwnerType {
  /**
   * @generated from enum value: IDP_OWNER_TYPE_UNSPECIFIED = 0;
   */
  IDP_OWNER_TYPE_UNSPECIFIED = 0,

  /**
   * system is managed by the ZITADEL administrators
   *
   * @generated from enum value: IDP_OWNER_TYPE_SYSTEM = 1;
   */
  IDP_OWNER_TYPE_SYSTEM = 1,

  /**
   * org is managed by de organisation administrators
   *
   * @generated from enum value: IDP_OWNER_TYPE_ORG = 2;
   */
  IDP_OWNER_TYPE_ORG = 2,
}

/**
 * @generated from enum zitadel.idp.v1.OIDCMappingField
 */
export declare enum OIDCMappingField {
  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_UNSPECIFIED = 0;
   */
  OIDC_MAPPING_FIELD_UNSPECIFIED = 0,

  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_PREFERRED_USERNAME = 1;
   */
  OIDC_MAPPING_FIELD_PREFERRED_USERNAME = 1,

  /**
   * @generated from enum value: OIDC_MAPPING_FIELD_EMAIL = 2;
   */
  OIDC_MAPPING_FIELD_EMAIL = 2,
}

/**
 * @generated from enum zitadel.idp.v1.IDPFieldName
 */
export declare enum IDPFieldName {
  /**
   * @generated from enum value: IDP_FIELD_NAME_UNSPECIFIED = 0;
   */
  IDP_FIELD_NAME_UNSPECIFIED = 0,

  /**
   * @generated from enum value: IDP_FIELD_NAME_NAME = 1;
   */
  IDP_FIELD_NAME_NAME = 1,
}

/**
 * @generated from enum zitadel.idp.v1.ProviderType
 */
export declare enum ProviderType {
  /**
   * @generated from enum value: PROVIDER_TYPE_UNSPECIFIED = 0;
   */
  UNSPECIFIED = 0,

  /**
   * @generated from enum value: PROVIDER_TYPE_OIDC = 1;
   */
  OIDC = 1,

  /**
   * @generated from enum value: PROVIDER_TYPE_JWT = 2;
   */
  JWT = 2,

  /**
   * @generated from enum value: PROVIDER_TYPE_LDAP = 3;
   */
  LDAP = 3,

  /**
   * @generated from enum value: PROVIDER_TYPE_OAUTH = 4;
   */
  OAUTH = 4,

  /**
   * @generated from enum value: PROVIDER_TYPE_AZURE_AD = 5;
   */
  AZURE_AD = 5,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITHUB = 6;
   */
  GITHUB = 6,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITHUB_EE = 7;
   */
  GITHUB_EE = 7,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITLAB = 8;
   */
  GITLAB = 8,

  /**
   * @generated from enum value: PROVIDER_TYPE_GITLAB_SELF_HOSTED = 9;
   */
  GITLAB_SELF_HOSTED = 9,

  /**
   * @generated from enum value: PROVIDER_TYPE_GOOGLE = 10;
   */
  GOOGLE = 10,
}

/**
 * @generated from message zitadel.idp.v1.IDP
 */
export declare class IDP extends Message<IDP> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPState state = 3;
   */
  state: IDPState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPStylingType styling_type = 5;
   */
  stylingType: IDPStylingType;

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner = 6;
   */
  owner: IDPOwnerType;

  /**
   * @generated from oneof zitadel.idp.v1.IDP.config
   */
  config: {
    /**
     * @generated from field: zitadel.idp.v1.OIDCConfig oidc_config = 7;
     */
    value: OIDCConfig;
    case: "oidcConfig";
  } | {
    /**
     * @generated from field: zitadel.idp.v1.JWTConfig jwt_config = 9;
     */
    value: JWTConfig;
    case: "jwtConfig";
  } | { case: undefined; value?: undefined };

  /**
   * @generated from field: bool auto_register = 8;
   */
  autoRegister: boolean;

  constructor(data?: PartialMessage<IDP>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDP";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDP;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDP;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDP;

  static equals(a: IDP | PlainMessage<IDP> | undefined, b: IDP | PlainMessage<IDP> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.IDPUserLink
 */
export declare class IDPUserLink extends Message<IDPUserLink> {
  /**
   * @generated from field: string user_id = 1;
   */
  userId: string;

  /**
   * @generated from field: string idp_id = 2;
   */
  idpId: string;

  /**
   * @generated from field: string idp_name = 3;
   */
  idpName: string;

  /**
   * @generated from field: string provided_user_id = 4;
   */
  providedUserId: string;

  /**
   * @generated from field: string provided_user_name = 5;
   */
  providedUserName: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPType idp_type = 6;
   */
  idpType: IDPType;

  constructor(data?: PartialMessage<IDPUserLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDPUserLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPUserLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPUserLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPUserLink;

  static equals(a: IDPUserLink | PlainMessage<IDPUserLink> | undefined, b: IDPUserLink | PlainMessage<IDPUserLink> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.IDPLoginPolicyLink
 */
export declare class IDPLoginPolicyLink extends Message<IDPLoginPolicyLink> {
  /**
   * @generated from field: string idp_id = 1;
   */
  idpId: string;

  /**
   * @generated from field: string idp_name = 2;
   */
  idpName: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPType idp_type = 3;
   */
  idpType: IDPType;

  constructor(data?: PartialMessage<IDPLoginPolicyLink>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDPLoginPolicyLink";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPLoginPolicyLink;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPLoginPolicyLink;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPLoginPolicyLink;

  static equals(a: IDPLoginPolicyLink | PlainMessage<IDPLoginPolicyLink> | undefined, b: IDPLoginPolicyLink | PlainMessage<IDPLoginPolicyLink> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.OIDCConfig
 */
export declare class OIDCConfig extends Message<OIDCConfig> {
  /**
   * @generated from field: string client_id = 1;
   */
  clientId: string;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   * @generated from field: repeated string scopes = 3;
   */
  scopes: string[];

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField display_name_mapping = 4;
   */
  displayNameMapping: OIDCMappingField;

  /**
   * @generated from field: zitadel.idp.v1.OIDCMappingField username_mapping = 5;
   */
  usernameMapping: OIDCMappingField;

  constructor(data?: PartialMessage<OIDCConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.OIDCConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): OIDCConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): OIDCConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): OIDCConfig;

  static equals(a: OIDCConfig | PlainMessage<OIDCConfig> | undefined, b: OIDCConfig | PlainMessage<OIDCConfig> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.JWTConfig
 */
export declare class JWTConfig extends Message<JWTConfig> {
  /**
   * @generated from field: string jwt_endpoint = 1;
   */
  jwtEndpoint: string;

  /**
   * @generated from field: string issuer = 2;
   */
  issuer: string;

  /**
   * @generated from field: string keys_endpoint = 3;
   */
  keysEndpoint: string;

  /**
   * @generated from field: string header_name = 4;
   */
  headerName: string;

  constructor(data?: PartialMessage<JWTConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.JWTConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): JWTConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): JWTConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): JWTConfig;

  static equals(a: JWTConfig | PlainMessage<JWTConfig> | undefined, b: JWTConfig | PlainMessage<JWTConfig> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.IDPIDQuery
 */
export declare class IDPIDQuery extends Message<IDPIDQuery> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  constructor(data?: PartialMessage<IDPIDQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDPIDQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPIDQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPIDQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPIDQuery;

  static equals(a: IDPIDQuery | PlainMessage<IDPIDQuery> | undefined, b: IDPIDQuery | PlainMessage<IDPIDQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.IDPNameQuery
 */
export declare class IDPNameQuery extends Message<IDPNameQuery> {
  /**
   * @generated from field: string name = 1;
   */
  name: string;

  /**
   * @generated from field: zitadel.v1.TextQueryMethod method = 2;
   */
  method: TextQueryMethod;

  constructor(data?: PartialMessage<IDPNameQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDPNameQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPNameQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPNameQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPNameQuery;

  static equals(a: IDPNameQuery | PlainMessage<IDPNameQuery> | undefined, b: IDPNameQuery | PlainMessage<IDPNameQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.IDPOwnerTypeQuery
 */
export declare class IDPOwnerTypeQuery extends Message<IDPOwnerTypeQuery> {
  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner_type = 1;
   */
  ownerType: IDPOwnerType;

  constructor(data?: PartialMessage<IDPOwnerTypeQuery>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.IDPOwnerTypeQuery";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): IDPOwnerTypeQuery;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): IDPOwnerTypeQuery;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): IDPOwnerTypeQuery;

  static equals(a: IDPOwnerTypeQuery | PlainMessage<IDPOwnerTypeQuery> | undefined, b: IDPOwnerTypeQuery | PlainMessage<IDPOwnerTypeQuery> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.Provider
 */
export declare class Provider extends Message<Provider> {
  /**
   * @generated from field: string id = 1;
   */
  id: string;

  /**
   * @generated from field: zitadel.v1.ObjectDetails details = 2;
   */
  details?: ObjectDetails;

  /**
   * @generated from field: zitadel.idp.v1.IDPState state = 3;
   */
  state: IDPState;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  /**
   * @generated from field: zitadel.idp.v1.IDPOwnerType owner = 5;
   */
  owner: IDPOwnerType;

  /**
   * @generated from field: zitadel.idp.v1.ProviderType type = 6;
   */
  type: ProviderType;

  /**
   * @generated from field: zitadel.idp.v1.ProviderConfig config = 7;
   */
  config?: ProviderConfig;

  constructor(data?: PartialMessage<Provider>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.Provider";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Provider;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Provider;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Provider;

  static equals(a: Provider | PlainMessage<Provider> | undefined, b: Provider | PlainMessage<Provider> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.ProviderConfig
 */
export declare class ProviderConfig extends Message<ProviderConfig> {
  /**
   * @generated from field: zitadel.idp.v1.Options options = 1;
   */
  options?: Options;

  /**
   * @generated from oneof zitadel.idp.v1.ProviderConfig.config
   */
  config: {
    /**
     * @generated from field: zitadel.idp.v1.LDAPConfig ldap = 2;
     */
    value: LDAPConfig;
    case: "ldap";
  } | { case: undefined; value?: undefined };

  constructor(data?: PartialMessage<ProviderConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.ProviderConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): ProviderConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): ProviderConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): ProviderConfig;

  static equals(a: ProviderConfig | PlainMessage<ProviderConfig> | undefined, b: ProviderConfig | PlainMessage<ProviderConfig> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.LDAPConfig
 */
export declare class LDAPConfig extends Message<LDAPConfig> {
  /**
   * @generated from field: string host = 1;
   */
  host: string;

  /**
   * @generated from field: string port = 2;
   */
  port: string;

  /**
   * @generated from field: bool tls = 3;
   */
  tls: boolean;

  /**
   * @generated from field: string base_dn = 4;
   */
  baseDn: string;

  /**
   * @generated from field: string user_object_class = 5;
   */
  userObjectClass: string;

  /**
   * @generated from field: string user_unique_attribute = 6;
   */
  userUniqueAttribute: string;

  /**
   * @generated from field: string admin = 7;
   */
  admin: string;

  /**
   * @generated from field: zitadel.idp.v1.LDAPAttributes attributes = 8;
   */
  attributes?: LDAPAttributes;

  /**
   * @generated from field: zitadel.idp.v1.Options provider_options = 9;
   */
  providerOptions?: Options;

  constructor(data?: PartialMessage<LDAPConfig>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.LDAPConfig";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LDAPConfig;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LDAPConfig;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LDAPConfig;

  static equals(a: LDAPConfig | PlainMessage<LDAPConfig> | undefined, b: LDAPConfig | PlainMessage<LDAPConfig> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.Options
 */
export declare class Options extends Message<Options> {
  /**
   * @generated from field: bool is_linking_allowed = 1;
   */
  isLinkingAllowed: boolean;

  /**
   * @generated from field: bool is_creation_allowed = 2;
   */
  isCreationAllowed: boolean;

  /**
   * @generated from field: bool is_auto_creation = 3;
   */
  isAutoCreation: boolean;

  /**
   * @generated from field: bool is_auto_update = 4;
   */
  isAutoUpdate: boolean;

  constructor(data?: PartialMessage<Options>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.Options";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Options;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Options;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Options;

  static equals(a: Options | PlainMessage<Options> | undefined, b: Options | PlainMessage<Options> | undefined): boolean;
}

/**
 * @generated from message zitadel.idp.v1.LDAPAttributes
 */
export declare class LDAPAttributes extends Message<LDAPAttributes> {
  /**
   * @generated from field: string id_attribute = 1;
   */
  idAttribute: string;

  /**
   * @generated from field: string first_name_attribute = 2;
   */
  firstNameAttribute: string;

  /**
   * @generated from field: string last_name_attribute = 3;
   */
  lastNameAttribute: string;

  /**
   * @generated from field: string display_name_attribute = 4;
   */
  displayNameAttribute: string;

  /**
   * @generated from field: string nick_name_attribute = 5;
   */
  nickNameAttribute: string;

  /**
   * @generated from field: string preferred_username_attribute = 6;
   */
  preferredUsernameAttribute: string;

  /**
   * @generated from field: string email_attribute = 7;
   */
  emailAttribute: string;

  /**
   * @generated from field: string email_verified_attribute = 8;
   */
  emailVerifiedAttribute: string;

  /**
   * @generated from field: string phone_attribute = 9;
   */
  phoneAttribute: string;

  /**
   * @generated from field: string phone_verified_attribute = 10;
   */
  phoneVerifiedAttribute: string;

  /**
   * @generated from field: string preferred_language_attribute = 11;
   */
  preferredLanguageAttribute: string;

  /**
   * @generated from field: string avatar_url_attribute = 12;
   */
  avatarUrlAttribute: string;

  /**
   * @generated from field: string profile_attribute = 13;
   */
  profileAttribute: string;

  constructor(data?: PartialMessage<LDAPAttributes>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "zitadel.idp.v1.LDAPAttributes";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): LDAPAttributes;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): LDAPAttributes;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): LDAPAttributes;

  static equals(a: LDAPAttributes | PlainMessage<LDAPAttributes> | undefined, b: LDAPAttributes | PlainMessage<LDAPAttributes> | undefined): boolean;
}

