// @generated by protoc-gen-es v1.0.0
// @generated from file zitadel/idp.proto (package zitadel.idp.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { proto3 } from "@bufbuild/protobuf";
import { ObjectDetails, TextQueryMethod } from "./object_pb.js";

/**
 * @generated from enum zitadel.idp.v1.IDPState
 */
export const IDPState = proto3.makeEnum(
  "zitadel.idp.v1.IDPState",
  [
    {no: 0, name: "IDP_STATE_UNSPECIFIED"},
    {no: 1, name: "IDP_STATE_ACTIVE"},
    {no: 2, name: "IDP_STATE_INACTIVE"},
  ],
);

/**
 * @generated from enum zitadel.idp.v1.IDPStylingType
 */
export const IDPStylingType = proto3.makeEnum(
  "zitadel.idp.v1.IDPStylingType",
  [
    {no: 0, name: "STYLING_TYPE_UNSPECIFIED"},
    {no: 1, name: "STYLING_TYPE_GOOGLE"},
  ],
);

/**
 * authorization framework of the identity provider
 *
 * @generated from enum zitadel.idp.v1.IDPType
 */
export const IDPType = proto3.makeEnum(
  "zitadel.idp.v1.IDPType",
  [
    {no: 0, name: "IDP_TYPE_UNSPECIFIED"},
    {no: 1, name: "IDP_TYPE_OIDC"},
    {no: 3, name: "IDP_TYPE_JWT"},
  ],
);

/**
 * the owner of the identity provider.
 *
 * @generated from enum zitadel.idp.v1.IDPOwnerType
 */
export const IDPOwnerType = proto3.makeEnum(
  "zitadel.idp.v1.IDPOwnerType",
  [
    {no: 0, name: "IDP_OWNER_TYPE_UNSPECIFIED"},
    {no: 1, name: "IDP_OWNER_TYPE_SYSTEM"},
    {no: 2, name: "IDP_OWNER_TYPE_ORG"},
  ],
);

/**
 * @generated from enum zitadel.idp.v1.OIDCMappingField
 */
export const OIDCMappingField = proto3.makeEnum(
  "zitadel.idp.v1.OIDCMappingField",
  [
    {no: 0, name: "OIDC_MAPPING_FIELD_UNSPECIFIED"},
    {no: 1, name: "OIDC_MAPPING_FIELD_PREFERRED_USERNAME"},
    {no: 2, name: "OIDC_MAPPING_FIELD_EMAIL"},
  ],
);

/**
 * @generated from enum zitadel.idp.v1.IDPFieldName
 */
export const IDPFieldName = proto3.makeEnum(
  "zitadel.idp.v1.IDPFieldName",
  [
    {no: 0, name: "IDP_FIELD_NAME_UNSPECIFIED"},
    {no: 1, name: "IDP_FIELD_NAME_NAME"},
  ],
);

/**
 * @generated from enum zitadel.idp.v1.ProviderType
 */
export const ProviderType = proto3.makeEnum(
  "zitadel.idp.v1.ProviderType",
  [
    {no: 0, name: "PROVIDER_TYPE_UNSPECIFIED", localName: "UNSPECIFIED"},
    {no: 1, name: "PROVIDER_TYPE_OIDC", localName: "OIDC"},
    {no: 2, name: "PROVIDER_TYPE_JWT", localName: "JWT"},
    {no: 3, name: "PROVIDER_TYPE_LDAP", localName: "LDAP"},
    {no: 4, name: "PROVIDER_TYPE_OAUTH", localName: "OAUTH"},
    {no: 5, name: "PROVIDER_TYPE_AZURE_AD", localName: "AZURE_AD"},
    {no: 6, name: "PROVIDER_TYPE_GITHUB", localName: "GITHUB"},
    {no: 7, name: "PROVIDER_TYPE_GITHUB_EE", localName: "GITHUB_EE"},
    {no: 8, name: "PROVIDER_TYPE_GITLAB", localName: "GITLAB"},
    {no: 9, name: "PROVIDER_TYPE_GITLAB_SELF_HOSTED", localName: "GITLAB_SELF_HOSTED"},
    {no: 10, name: "PROVIDER_TYPE_GOOGLE", localName: "GOOGLE"},
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDP
 */
export const IDP = proto3.makeMessageType(
  "zitadel.idp.v1.IDP",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "state", kind: "enum", T: proto3.getEnumType(IDPState) },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "styling_type", kind: "enum", T: proto3.getEnumType(IDPStylingType) },
    { no: 6, name: "owner", kind: "enum", T: proto3.getEnumType(IDPOwnerType) },
    { no: 7, name: "oidc_config", kind: "message", T: OIDCConfig, oneof: "config" },
    { no: 9, name: "jwt_config", kind: "message", T: JWTConfig, oneof: "config" },
    { no: 8, name: "auto_register", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDPUserLink
 */
export const IDPUserLink = proto3.makeMessageType(
  "zitadel.idp.v1.IDPUserLink",
  () => [
    { no: 1, name: "user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "idp_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "provided_user_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "provided_user_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "idp_type", kind: "enum", T: proto3.getEnumType(IDPType) },
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDPLoginPolicyLink
 */
export const IDPLoginPolicyLink = proto3.makeMessageType(
  "zitadel.idp.v1.IDPLoginPolicyLink",
  () => [
    { no: 1, name: "idp_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "idp_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "idp_type", kind: "enum", T: proto3.getEnumType(IDPType) },
  ],
);

/**
 * @generated from message zitadel.idp.v1.OIDCConfig
 */
export const OIDCConfig = proto3.makeMessageType(
  "zitadel.idp.v1.OIDCConfig",
  () => [
    { no: 1, name: "client_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "scopes", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 4, name: "display_name_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
    { no: 5, name: "username_mapping", kind: "enum", T: proto3.getEnumType(OIDCMappingField) },
  ],
);

/**
 * @generated from message zitadel.idp.v1.JWTConfig
 */
export const JWTConfig = proto3.makeMessageType(
  "zitadel.idp.v1.JWTConfig",
  () => [
    { no: 1, name: "jwt_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "issuer", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "keys_endpoint", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "header_name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDPIDQuery
 */
export const IDPIDQuery = proto3.makeMessageType(
  "zitadel.idp.v1.IDPIDQuery",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDPNameQuery
 */
export const IDPNameQuery = proto3.makeMessageType(
  "zitadel.idp.v1.IDPNameQuery",
  () => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "method", kind: "enum", T: proto3.getEnumType(TextQueryMethod) },
  ],
);

/**
 * @generated from message zitadel.idp.v1.IDPOwnerTypeQuery
 */
export const IDPOwnerTypeQuery = proto3.makeMessageType(
  "zitadel.idp.v1.IDPOwnerTypeQuery",
  () => [
    { no: 1, name: "owner_type", kind: "enum", T: proto3.getEnumType(IDPOwnerType) },
  ],
);

/**
 * @generated from message zitadel.idp.v1.Provider
 */
export const Provider = proto3.makeMessageType(
  "zitadel.idp.v1.Provider",
  () => [
    { no: 1, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "details", kind: "message", T: ObjectDetails },
    { no: 3, name: "state", kind: "enum", T: proto3.getEnumType(IDPState) },
    { no: 4, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "owner", kind: "enum", T: proto3.getEnumType(IDPOwnerType) },
    { no: 6, name: "type", kind: "enum", T: proto3.getEnumType(ProviderType) },
    { no: 7, name: "config", kind: "message", T: ProviderConfig },
  ],
);

/**
 * @generated from message zitadel.idp.v1.ProviderConfig
 */
export const ProviderConfig = proto3.makeMessageType(
  "zitadel.idp.v1.ProviderConfig",
  () => [
    { no: 1, name: "options", kind: "message", T: Options },
    { no: 2, name: "ldap", kind: "message", T: LDAPConfig, oneof: "config" },
  ],
);

/**
 * @generated from message zitadel.idp.v1.LDAPConfig
 */
export const LDAPConfig = proto3.makeMessageType(
  "zitadel.idp.v1.LDAPConfig",
  () => [
    { no: 1, name: "host", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "port", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "tls", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "base_dn", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "user_object_class", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "user_unique_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "admin", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "attributes", kind: "message", T: LDAPAttributes },
    { no: 9, name: "provider_options", kind: "message", T: Options },
  ],
);

/**
 * @generated from message zitadel.idp.v1.Options
 */
export const Options = proto3.makeMessageType(
  "zitadel.idp.v1.Options",
  () => [
    { no: 1, name: "is_linking_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 2, name: "is_creation_allowed", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 3, name: "is_auto_creation", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
    { no: 4, name: "is_auto_update", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ],
);

/**
 * @generated from message zitadel.idp.v1.LDAPAttributes
 */
export const LDAPAttributes = proto3.makeMessageType(
  "zitadel.idp.v1.LDAPAttributes",
  () => [
    { no: 1, name: "id_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "first_name_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "last_name_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "display_name_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "nick_name_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 6, name: "preferred_username_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 7, name: "email_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 8, name: "email_verified_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 9, name: "phone_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 10, name: "phone_verified_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 11, name: "preferred_language_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 12, name: "avatar_url_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 13, name: "profile_attribute", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ],
);

