// @generated by protoc-gen-connect-es v0.7.0
// @generated from file zitadel/admin.proto (package zitadel.admin.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { ActivateLabelPolicyRequest, ActivateLabelPolicyResponse, ActivateSMSProviderRequest, ActivateSMSProviderResponse, AddCustomDomainPolicyRequest, AddCustomDomainPolicyResponse, AddCustomOrgIAMPolicyRequest, AddCustomOrgIAMPolicyResponse, AddIAMMemberRequest, AddIAMMemberResponse, AddIDPToLoginPolicyRequest, AddIDPToLoginPolicyResponse, AddJWTIDPRequest, AddJWTIDPResponse, AddLDAPProviderRequest, AddLDAPProviderResponse, AddMultiFactorToLoginPolicyRequest, AddMultiFactorToLoginPolicyResponse, AddNotificationPolicyRequest, AddNotificationPolicyResponse, AddOIDCIDPRequest, AddOIDCIDPResponse, AddOIDCSettingsRequest, AddOIDCSettingsResponse, AddSecondFactorToLoginPolicyRequest, AddSecondFactorToLoginPolicyResponse, AddSMSProviderTwilioRequest, AddSMSProviderTwilioResponse, AddSMTPConfigRequest, AddSMTPConfigResponse, DeactivateIDPRequest, DeactivateIDPResponse, DeactivateSMSProviderRequest, DeactivateSMSProviderResponse, DeleteProviderRequest, DeleteProviderResponse, ExportDataRequest, ExportDataResponse, GetCustomDomainClaimedMessageTextRequest, GetCustomDomainClaimedMessageTextResponse, GetCustomDomainPolicyRequest, GetCustomDomainPolicyResponse, GetCustomInitMessageTextRequest, GetCustomInitMessageTextResponse, GetCustomLoginTextsRequest, GetCustomLoginTextsResponse, GetCustomOrgIAMPolicyRequest, GetCustomOrgIAMPolicyResponse, GetCustomPasswordChangeMessageTextRequest, GetCustomPasswordChangeMessageTextResponse, GetCustomPasswordlessRegistrationMessageTextRequest, GetCustomPasswordlessRegistrationMessageTextResponse, GetCustomPasswordResetMessageTextRequest, GetCustomPasswordResetMessageTextResponse, GetCustomVerifyEmailMessageTextRequest, GetCustomVerifyEmailMessageTextResponse, GetCustomVerifyPhoneMessageTextRequest, GetCustomVerifyPhoneMessageTextResponse, GetDefaultDomainClaimedMessageTextRequest, GetDefaultDomainClaimedMessageTextResponse, GetDefaultInitMessageTextRequest, GetDefaultInitMessageTextResponse, GetDefaultLanguageRequest, GetDefaultLanguageResponse, GetDefaultLoginTextsRequest, GetDefaultLoginTextsResponse, GetDefaultOrgRequest, GetDefaultOrgResponse, GetDefaultPasswordChangeMessageTextRequest, GetDefaultPasswordChangeMessageTextResponse, GetDefaultPasswordlessRegistrationMessageTextRequest, GetDefaultPasswordlessRegistrationMessageTextResponse, GetDefaultPasswordResetMessageTextRequest, GetDefaultPasswordResetMessageTextResponse, GetDefaultVerifyEmailMessageTextRequest, GetDefaultVerifyEmailMessageTextResponse, GetDefaultVerifyPhoneMessageTextRequest, GetDefaultVerifyPhoneMessageTextResponse, GetDomainPolicyRequest, GetDomainPolicyResponse, GetFileSystemNotificationProviderRequest, GetFileSystemNotificationProviderResponse, GetIDPByIDRequest, GetIDPByIDResponse, GetLabelPolicyRequest, GetLabelPolicyResponse, GetLockoutPolicyRequest, GetLockoutPolicyResponse, GetLoginPolicyRequest, GetLoginPolicyResponse, GetLogNotificationProviderRequest, GetLogNotificationProviderResponse, GetMyInstanceRequest, GetMyInstanceResponse, GetNotificationPolicyRequest, GetNotificationPolicyResponse, GetOIDCSettingsRequest, GetOIDCSettingsResponse, GetOrgByIDRequest, GetOrgByIDResponse, GetOrgIAMPolicyRequest, GetOrgIAMPolicyResponse, GetPasswordAgePolicyRequest, GetPasswordAgePolicyResponse, GetPasswordComplexityPolicyRequest, GetPasswordComplexityPolicyResponse, GetPreviewLabelPolicyRequest, GetPreviewLabelPolicyResponse, GetPrivacyPolicyRequest, GetPrivacyPolicyResponse, GetProviderByIDRequest, GetProviderByIDResponse, GetSecretGeneratorRequest, GetSecretGeneratorResponse, GetSecurityPolicyRequest, GetSecurityPolicyResponse, GetSMSProviderRequest, GetSMSProviderResponse, GetSMTPConfigRequest, GetSMTPConfigResponse, GetSupportedLanguagesRequest, GetSupportedLanguagesResponse, HealthzRequest, HealthzResponse, ImportDataRequest, ImportDataResponse, IsOrgUniqueRequest, IsOrgUniqueResponse, ListAggregateTypesRequest, ListAggregateTypesResponse, ListEventsRequest, ListEventsResponse, ListEventTypesRequest, ListEventTypesResponse, ListFailedEventsRequest, ListFailedEventsResponse, ListIAMMemberRolesRequest, ListIAMMemberRolesResponse, ListIAMMembersRequest, ListIAMMembersResponse, ListIDPsRequest, ListIDPsResponse, ListInstanceDomainsRequest, ListInstanceDomainsResponse, ListLoginPolicyIDPsRequest, ListLoginPolicyIDPsResponse, ListLoginPolicyMultiFactorsRequest, ListLoginPolicyMultiFactorsResponse, ListLoginPolicySecondFactorsRequest, ListLoginPolicySecondFactorsResponse, ListOrgsRequest, ListOrgsResponse, ListProvidersRequest, ListProvidersResponse, ListSecretGeneratorsRequest, ListSecretGeneratorsResponse, ListSMSProvidersRequest, ListSMSProvidersResponse, ListViewsRequest, ListViewsResponse, ReactivateIDPRequest, ReactivateIDPResponse, RemoveFailedEventRequest, RemoveFailedEventResponse, RemoveIAMMemberRequest, RemoveIAMMemberResponse, RemoveIDPFromLoginPolicyRequest, RemoveIDPFromLoginPolicyResponse, RemoveIDPRequest, RemoveIDPResponse, RemoveLabelPolicyFontRequest, RemoveLabelPolicyFontResponse, RemoveLabelPolicyIconDarkRequest, RemoveLabelPolicyIconDarkResponse, RemoveLabelPolicyIconRequest, RemoveLabelPolicyIconResponse, RemoveLabelPolicyLogoDarkRequest, RemoveLabelPolicyLogoDarkResponse, RemoveLabelPolicyLogoRequest, RemoveLabelPolicyLogoResponse, RemoveMultiFactorFromLoginPolicyRequest, RemoveMultiFactorFromLoginPolicyResponse, RemoveOrgRequest, RemoveOrgResponse, RemoveSecondFactorFromLoginPolicyRequest, RemoveSecondFactorFromLoginPolicyResponse, RemoveSMSProviderRequest, RemoveSMSProviderResponse, RemoveSMTPConfigRequest, RemoveSMTPConfigResponse, ResetCustomDomainClaimedMessageTextToDefaultRequest, ResetCustomDomainClaimedMessageTextToDefaultResponse, ResetCustomDomainPolicyToDefaultRequest, ResetCustomDomainPolicyToDefaultResponse, ResetCustomInitMessageTextToDefaultRequest, ResetCustomInitMessageTextToDefaultResponse, ResetCustomLoginTextsToDefaultRequest, ResetCustomLoginTextsToDefaultResponse, ResetCustomOrgIAMPolicyToDefaultRequest, ResetCustomOrgIAMPolicyToDefaultResponse, ResetCustomPasswordChangeMessageTextToDefaultRequest, ResetCustomPasswordChangeMessageTextToDefaultResponse, ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest, ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse, ResetCustomPasswordResetMessageTextToDefaultRequest, ResetCustomPasswordResetMessageTextToDefaultResponse, ResetCustomVerifyEmailMessageTextToDefaultRequest, ResetCustomVerifyEmailMessageTextToDefaultResponse, ResetCustomVerifyPhoneMessageTextToDefaultRequest, ResetCustomVerifyPhoneMessageTextToDefaultResponse, SetCustomLoginTextsRequest, SetCustomLoginTextsResponse, SetDefaultDomainClaimedMessageTextRequest, SetDefaultDomainClaimedMessageTextResponse, SetDefaultInitMessageTextRequest, SetDefaultInitMessageTextResponse, SetDefaultLanguageRequest, SetDefaultLanguageResponse, SetDefaultOrgRequest, SetDefaultOrgResponse, SetDefaultPasswordChangeMessageTextRequest, SetDefaultPasswordChangeMessageTextResponse, SetDefaultPasswordlessRegistrationMessageTextRequest, SetDefaultPasswordlessRegistrationMessageTextResponse, SetDefaultPasswordResetMessageTextRequest, SetDefaultPasswordResetMessageTextResponse, SetDefaultVerifyEmailMessageTextRequest, SetDefaultVerifyEmailMessageTextResponse, SetDefaultVerifyPhoneMessageTextRequest, SetDefaultVerifyPhoneMessageTextResponse, SetSecurityPolicyRequest, SetSecurityPolicyResponse, SetUpOrgRequest, SetUpOrgResponse, UpdateCustomDomainPolicyRequest, UpdateCustomDomainPolicyResponse, UpdateCustomOrgIAMPolicyRequest, UpdateCustomOrgIAMPolicyResponse, UpdateDomainPolicyRequest, UpdateDomainPolicyResponse, UpdateIAMMemberRequest, UpdateIAMMemberResponse, UpdateIDPJWTConfigRequest, UpdateIDPJWTConfigResponse, UpdateIDPOIDCConfigRequest, UpdateIDPOIDCConfigResponse, UpdateIDPRequest, UpdateIDPResponse, UpdateLabelPolicyRequest, UpdateLabelPolicyResponse, UpdateLDAPProviderRequest, UpdateLDAPProviderResponse, UpdateLockoutPolicyRequest, UpdateLockoutPolicyResponse, UpdateLoginPolicyRequest, UpdateLoginPolicyResponse, UpdateNotificationPolicyRequest, UpdateNotificationPolicyResponse, UpdateOIDCSettingsRequest, UpdateOIDCSettingsResponse, UpdateOrgIAMPolicyRequest, UpdateOrgIAMPolicyResponse, UpdatePasswordAgePolicyRequest, UpdatePasswordAgePolicyResponse, UpdatePasswordComplexityPolicyRequest, UpdatePasswordComplexityPolicyResponse, UpdatePrivacyPolicyRequest, UpdatePrivacyPolicyResponse, UpdateSecretGeneratorRequest, UpdateSecretGeneratorResponse, UpdateSMSProviderTwilioRequest, UpdateSMSProviderTwilioResponse, UpdateSMSProviderTwilioTokenRequest, UpdateSMSProviderTwilioTokenResponse, UpdateSMTPConfigPasswordRequest, UpdateSMTPConfigPasswordResponse, UpdateSMTPConfigRequest, UpdateSMTPConfigResponse } from "./admin_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * @generated from service zitadel.admin.v1.AdminService
 */
export const AdminService = {
  typeName: "zitadel.admin.v1.AdminService",
  methods: {
    /**
     * Indicates if ZITADEL is running.
     * It respondes as soon as ZITADEL started
     *
     * @generated from rpc zitadel.admin.v1.AdminService.Healthz
     */
    healthz: {
      name: "Healthz",
      I: HealthzRequest,
      O: HealthzResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default languages
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSupportedLanguages
     */
    getSupportedLanguages: {
      name: "GetSupportedLanguages",
      I: GetSupportedLanguagesRequest,
      O: GetSupportedLanguagesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultLanguage
     */
    setDefaultLanguage: {
      name: "SetDefaultLanguage",
      I: SetDefaultLanguageRequest,
      O: SetDefaultLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultLanguage
     */
    getDefaultLanguage: {
      name: "GetDefaultLanguage",
      I: GetDefaultLanguageRequest,
      O: GetDefaultLanguageResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the details of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetMyInstance
     */
    getMyInstance: {
      name: "GetMyInstance",
      I: GetMyInstanceRequest,
      O: GetMyInstanceResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the domains of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListInstanceDomains
     */
    listInstanceDomains: {
      name: "ListInstanceDomains",
      I: ListInstanceDomainsRequest,
      O: ListInstanceDomainsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set the default language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListSecretGenerators
     */
    listSecretGenerators: {
      name: "ListSecretGenerators",
      I: ListSecretGeneratorsRequest,
      O: ListSecretGeneratorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get Secret Generator by type (e.g PasswordResetCode)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSecretGenerator
     */
    getSecretGenerator: {
      name: "GetSecretGenerator",
      I: GetSecretGeneratorRequest,
      O: GetSecretGeneratorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update secret generator configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSecretGenerator
     */
    updateSecretGenerator: {
      name: "UpdateSecretGenerator",
      I: UpdateSecretGeneratorRequest,
      O: UpdateSecretGeneratorResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSMTPConfig
     */
    getSMTPConfig: {
      name: "GetSMTPConfig",
      I: GetSMTPConfigRequest,
      O: GetSMTPConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSMTPConfig
     */
    addSMTPConfig: {
      name: "AddSMTPConfig",
      I: AddSMTPConfigRequest,
      O: AddSMTPConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMTPConfig
     */
    updateSMTPConfig: {
      name: "UpdateSMTPConfig",
      I: UpdateSMTPConfigRequest,
      O: UpdateSMTPConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update system smtp configuration password for host
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMTPConfigPassword
     */
    updateSMTPConfigPassword: {
      name: "UpdateSMTPConfigPassword",
      I: UpdateSMTPConfigPasswordRequest,
      O: UpdateSMTPConfigPasswordResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove system smtp configuration
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSMTPConfig
     */
    removeSMTPConfig: {
      name: "RemoveSMTPConfig",
      I: RemoveSMTPConfigRequest,
      O: RemoveSMTPConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * list sms provider configurations
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListSMSProviders
     */
    listSMSProviders: {
      name: "ListSMSProviders",
      I: ListSMSProvidersRequest,
      O: ListSMSProvidersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSMSProvider
     */
    getSMSProvider: {
      name: "GetSMSProvider",
      I: GetSMSProviderRequest,
      O: GetSMSProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add twilio sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSMSProviderTwilio
     */
    addSMSProviderTwilio: {
      name: "AddSMSProviderTwilio",
      I: AddSMSProviderTwilioRequest,
      O: AddSMSProviderTwilioResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update twilio sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMSProviderTwilio
     */
    updateSMSProviderTwilio: {
      name: "UpdateSMSProviderTwilio",
      I: UpdateSMSProviderTwilioRequest,
      O: UpdateSMSProviderTwilioResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update twilio sms provider token
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateSMSProviderTwilioToken
     */
    updateSMSProviderTwilioToken: {
      name: "UpdateSMSProviderTwilioToken",
      I: UpdateSMSProviderTwilioTokenRequest,
      O: UpdateSMSProviderTwilioTokenResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Activate sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ActivateSMSProvider
     */
    activateSMSProvider: {
      name: "ActivateSMSProvider",
      I: ActivateSMSProviderRequest,
      O: ActivateSMSProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deactivate sms provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeactivateSMSProvider
     */
    deactivateSMSProvider: {
      name: "DeactivateSMSProvider",
      I: DeactivateSMSProviderRequest,
      O: DeactivateSMSProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove sms provider token
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSMSProvider
     */
    removeSMSProvider: {
      name: "RemoveSMSProvider",
      I: RemoveSMSProviderRequest,
      O: RemoveSMSProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get OIDC settings (e.g token lifetimes, etc.)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOIDCSettings
     */
    getOIDCSettings: {
      name: "GetOIDCSettings",
      I: GetOIDCSettingsRequest,
      O: GetOIDCSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add oidc settings (e.g token lifetimes, etc)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddOIDCSettings
     */
    addOIDCSettings: {
      name: "AddOIDCSettings",
      I: AddOIDCSettingsRequest,
      O: AddOIDCSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Update oidc settings (e.g token lifetimes, etc)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateOIDCSettings
     */
    updateOIDCSettings: {
      name: "UpdateOIDCSettings",
      I: UpdateOIDCSettingsRequest,
      O: UpdateOIDCSettingsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get file system notification provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetFileSystemNotificationProvider
     */
    getFileSystemNotificationProvider: {
      name: "GetFileSystemNotificationProvider",
      I: GetFileSystemNotificationProviderRequest,
      O: GetFileSystemNotificationProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get log notification provider
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLogNotificationProvider
     */
    getLogNotificationProvider: {
      name: "GetLogNotificationProvider",
      I: GetLogNotificationProviderRequest,
      O: GetLogNotificationProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Get the security policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetSecurityPolicy
     */
    getSecurityPolicy: {
      name: "GetSecurityPolicy",
      I: GetSecurityPolicyRequest,
      O: GetSecurityPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * set the security policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetSecurityPolicy
     */
    setSecurityPolicy: {
      name: "SetSecurityPolicy",
      I: SetSecurityPolicyRequest,
      O: SetSecurityPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns an organisation by id
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOrgByID
     */
    getOrgByID: {
      name: "GetOrgByID",
      I: GetOrgByIDRequest,
      O: GetOrgByIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Checks whether an organisation exists by the given parameters
     *
     * @generated from rpc zitadel.admin.v1.AdminService.IsOrgUnique
     */
    isOrgUnique: {
      name: "IsOrgUnique",
      I: IsOrgUniqueRequest,
      O: IsOrgUniqueResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set the default org
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultOrg
     */
    setDefaultOrg: {
      name: "SetDefaultOrg",
      I: SetDefaultOrgRequest,
      O: SetDefaultOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Set the default org
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultOrg
     */
    getDefaultOrg: {
      name: "GetDefaultOrg",
      I: GetDefaultOrgRequest,
      O: GetDefaultOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all organisations matching the request
     * all queries need to match (AND)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListOrgs
     */
    listOrgs: {
      name: "ListOrgs",
      I: ListOrgsRequest,
      O: ListOrgsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Creates a new org and user
     * and adds the user to the orgs members as ORG_OWNER
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetUpOrg
     */
    setUpOrg: {
      name: "SetUpOrg",
      I: SetUpOrgRequest,
      O: SetUpOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the organisation and all its resource (Users, Projects, Grants to and from the org) to removed
     * Users of this organisation will not be able login
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveOrg
     */
    removeOrg: {
      name: "RemoveOrg",
      I: RemoveOrgRequest,
      O: RemoveOrgResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns a identity provider configuration of the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetIDPByID
     */
    getIDPByID: {
      name: "GetIDPByID",
      I: GetIDPByIDRequest,
      O: GetIDPByIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all identity provider configurations of the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIDPs
     */
    listIDPs: {
      name: "ListIDPs",
      I: ListIDPsRequest,
      O: ListIDPsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a new oidc identity provider configuration the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddOIDCIDP
     */
    addOIDCIDP: {
      name: "AddOIDCIDP",
      I: AddOIDCIDPRequest,
      O: AddOIDCIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a new jwt identity provider configuration the IAM instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddJWTIDP
     */
    addJWTIDP: {
      name: "AddJWTIDP",
      I: AddJWTIDPRequest,
      O: AddJWTIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDP
     */
    updateIDP: {
      name: "UpdateIDP",
      I: UpdateIDPRequest,
      O: UpdateIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the idp to IDP_STATE_INACTIVE
     * the state MUST be IDP_STATE_ACTIVE for this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeactivateIDP
     */
    deactivateIDP: {
      name: "DeactivateIDP",
      I: DeactivateIDPRequest,
      O: DeactivateIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the state of the idp to IDP_STATE_ACTIVE
     * the state MUST be IDP_STATE_INACTIVE for this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ReactivateIDP
     */
    reactivateIDP: {
      name: "ReactivateIDP",
      I: ReactivateIDPRequest,
      O: ReactivateIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * RemoveIDP deletes the IDP permanetly
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIDP
     */
    removeIDP: {
      name: "RemoveIDP",
      I: RemoveIDPRequest,
      O: RemoveIDPResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the oidc configuration of the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDPOIDCConfig
     */
    updateIDPOIDCConfig: {
      name: "UpdateIDPOIDCConfig",
      I: UpdateIDPOIDCConfigRequest,
      O: UpdateIDPOIDCConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the jwt configuration of the specified idp
     * all fields are updated. If no value is provided the field will be empty afterwards.
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIDPJWTConfig
     */
    updateIDPJWTConfig: {
      name: "UpdateIDPJWTConfig",
      I: UpdateIDPJWTConfigRequest,
      O: UpdateIDPJWTConfigResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all identity providers, which match the query
     * Limit should always be set, there is a default limit set by the service
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListProviders
     */
    listProviders: {
      name: "ListProviders",
      I: ListProvidersRequest,
      O: ListProvidersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns an identity provider of the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetProviderByID
     */
    getProviderByID: {
      name: "GetProviderByID",
      I: GetProviderByIDRequest,
      O: GetProviderByIDResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a new ldap identity provider on the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddLDAPProvider
     */
    addLDAPProvider: {
      name: "AddLDAPProvider",
      I: AddLDAPProviderRequest,
      O: AddLDAPProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Change an existing ldap identity provider on the instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLDAPProvider
     */
    updateLDAPProvider: {
      name: "UpdateLDAPProvider",
      I: UpdateLDAPProviderRequest,
      O: UpdateLDAPProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Remove an identity provider
     * Will remove all linked providers of this configuration on the users
     *
     * @generated from rpc zitadel.admin.v1.AdminService.DeleteProvider
     */
    deleteProvider: {
      name: "DeleteProvider",
      I: DeleteProviderRequest,
      O: DeleteProviderResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Returns the Org IAM policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetOrgIAMPolicy
     */
    getOrgIAMPolicy: {
      name: "GetOrgIAMPolicy",
      I: GetOrgIAMPolicyRequest,
      O: GetOrgIAMPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Updates the default OrgIAM policy.
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateOrgIAMPolicy
     */
    updateOrgIAMPolicy: {
      name: "UpdateOrgIAMPolicy",
      I: UpdateOrgIAMPolicyRequest,
      O: UpdateOrgIAMPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Returns the customised policy or the default if not customised
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomOrgIAMPolicy
     */
    getCustomOrgIAMPolicy: {
      name: "GetCustomOrgIAMPolicy",
      I: GetCustomOrgIAMPolicyRequest,
      O: GetCustomOrgIAMPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Defines a custom OrgIAM policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddCustomOrgIAMPolicy
     */
    addCustomOrgIAMPolicy: {
      name: "AddCustomOrgIAMPolicy",
      I: AddCustomOrgIAMPolicyRequest,
      O: AddCustomOrgIAMPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Updates a custom OrgIAM policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateCustomOrgIAMPolicy
     */
    updateCustomOrgIAMPolicy: {
      name: "UpdateCustomOrgIAMPolicy",
      I: UpdateCustomOrgIAMPolicyRequest,
      O: UpdateCustomOrgIAMPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * deprecated: please use DomainPolicy instead
     * Resets the org iam policy of the organisation to default
     * ZITADEL will fallback to the default policy defined by the ZITADEL administrators
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomOrgIAMPolicyToDefault
     */
    resetCustomOrgIAMPolicyToDefault: {
      name: "ResetCustomOrgIAMPolicyToDefault",
      I: ResetCustomOrgIAMPolicyToDefaultRequest,
      O: ResetCustomOrgIAMPolicyToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the Domain policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDomainPolicy
     */
    getDomainPolicy: {
      name: "GetDomainPolicy",
      I: GetDomainPolicyRequest,
      O: GetDomainPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default Domain policy.
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateDomainPolicy
     */
    updateDomainPolicy: {
      name: "UpdateDomainPolicy",
      I: UpdateDomainPolicyRequest,
      O: UpdateDomainPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the customised policy or the default if not customised
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomDomainPolicy
     */
    getCustomDomainPolicy: {
      name: "GetCustomDomainPolicy",
      I: GetCustomDomainPolicyRequest,
      O: GetCustomDomainPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Defines a custom Domain policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddCustomDomainPolicy
     */
    addCustomDomainPolicy: {
      name: "AddCustomDomainPolicy",
      I: AddCustomDomainPolicyRequest,
      O: AddCustomDomainPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates a custom Domain policy as specified
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateCustomDomainPolicy
     */
    updateCustomDomainPolicy: {
      name: "UpdateCustomDomainPolicy",
      I: UpdateCustomDomainPolicyRequest,
      O: UpdateCustomDomainPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Resets the org iam policy of the organisation to default
     * ZITADEL will fallback to the default policy defined by the ZITADEL administrators
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomDomainPolicyToDefault
     */
    resetCustomDomainPolicyToDefault: {
      name: "ResetCustomDomainPolicyToDefault",
      I: ResetCustomDomainPolicyToDefaultRequest,
      O: ResetCustomDomainPolicyToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the label policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLabelPolicy
     */
    getLabelPolicy: {
      name: "GetLabelPolicy",
      I: GetLabelPolicyRequest,
      O: GetLabelPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the preview label policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPreviewLabelPolicy
     */
    getPreviewLabelPolicy: {
      name: "GetPreviewLabelPolicy",
      I: GetPreviewLabelPolicyRequest,
      O: GetPreviewLabelPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default label policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLabelPolicy
     */
    updateLabelPolicy: {
      name: "UpdateLabelPolicy",
      I: UpdateLabelPolicyRequest,
      O: UpdateLabelPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Activates all changes of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ActivateLabelPolicy
     */
    activateLabelPolicy: {
      name: "ActivateLabelPolicy",
      I: ActivateLabelPolicyRequest,
      O: ActivateLabelPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the logo of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyLogo
     */
    removeLabelPolicyLogo: {
      name: "RemoveLabelPolicyLogo",
      I: RemoveLabelPolicyLogoRequest,
      O: RemoveLabelPolicyLogoResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the logo dark of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyLogoDark
     */
    removeLabelPolicyLogoDark: {
      name: "RemoveLabelPolicyLogoDark",
      I: RemoveLabelPolicyLogoDarkRequest,
      O: RemoveLabelPolicyLogoDarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the icon of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyIcon
     */
    removeLabelPolicyIcon: {
      name: "RemoveLabelPolicyIcon",
      I: RemoveLabelPolicyIconRequest,
      O: RemoveLabelPolicyIconResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the logo dark of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyIconDark
     */
    removeLabelPolicyIconDark: {
      name: "RemoveLabelPolicyIconDark",
      I: RemoveLabelPolicyIconDarkRequest,
      O: RemoveLabelPolicyIconDarkResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the font of the label policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveLabelPolicyFont
     */
    removeLabelPolicyFont: {
      name: "RemoveLabelPolicyFont",
      I: RemoveLabelPolicyFontRequest,
      O: RemoveLabelPolicyFontResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the login policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLoginPolicy
     */
    getLoginPolicy: {
      name: "GetLoginPolicy",
      I: GetLoginPolicyRequest,
      O: GetLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default login policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLoginPolicy
     */
    updateLoginPolicy: {
      name: "UpdateLoginPolicy",
      I: UpdateLoginPolicyRequest,
      O: UpdateLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the idps linked to the default login policy,
     * defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicyIDPs
     */
    listLoginPolicyIDPs: {
      name: "ListLoginPolicyIDPs",
      I: ListLoginPolicyIDPsRequest,
      O: ListLoginPolicyIDPsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds the povided idp to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddIDPToLoginPolicy
     */
    addIDPToLoginPolicy: {
      name: "AddIDPToLoginPolicy",
      I: AddIDPToLoginPolicyRequest,
      O: AddIDPToLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the povided idp from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIDPFromLoginPolicy
     */
    removeIDPFromLoginPolicy: {
      name: "RemoveIDPFromLoginPolicy",
      I: RemoveIDPFromLoginPolicyRequest,
      O: RemoveIDPFromLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the available second factors defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicySecondFactors
     */
    listLoginPolicySecondFactors: {
      name: "ListLoginPolicySecondFactors",
      I: ListLoginPolicySecondFactorsRequest,
      O: ListLoginPolicySecondFactorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a second factor to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddSecondFactorToLoginPolicy
     */
    addSecondFactorToLoginPolicy: {
      name: "AddSecondFactorToLoginPolicy",
      I: AddSecondFactorToLoginPolicyRequest,
      O: AddSecondFactorToLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes a second factor from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveSecondFactorFromLoginPolicy
     */
    removeSecondFactorFromLoginPolicy: {
      name: "RemoveSecondFactorFromLoginPolicy",
      I: RemoveSecondFactorFromLoginPolicyRequest,
      O: RemoveSecondFactorFromLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the available multi factors defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListLoginPolicyMultiFactors
     */
    listLoginPolicyMultiFactors: {
      name: "ListLoginPolicyMultiFactors",
      I: ListLoginPolicyMultiFactorsRequest,
      O: ListLoginPolicyMultiFactorsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a multi factor to the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddMultiFactorToLoginPolicy
     */
    addMultiFactorToLoginPolicy: {
      name: "AddMultiFactorToLoginPolicy",
      I: AddMultiFactorToLoginPolicyRequest,
      O: AddMultiFactorToLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes a multi factor from the default login policy.
     * It impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveMultiFactorFromLoginPolicy
     */
    removeMultiFactorFromLoginPolicy: {
      name: "RemoveMultiFactorFromLoginPolicy",
      I: RemoveMultiFactorFromLoginPolicyRequest,
      O: RemoveMultiFactorFromLoginPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the password complexity policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPasswordComplexityPolicy
     */
    getPasswordComplexityPolicy: {
      name: "GetPasswordComplexityPolicy",
      I: GetPasswordComplexityPolicyRequest,
      O: GetPasswordComplexityPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default password complexity policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePasswordComplexityPolicy
     */
    updatePasswordComplexityPolicy: {
      name: "UpdatePasswordComplexityPolicy",
      I: UpdatePasswordComplexityPolicyRequest,
      O: UpdatePasswordComplexityPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the password age policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPasswordAgePolicy
     */
    getPasswordAgePolicy: {
      name: "GetPasswordAgePolicy",
      I: GetPasswordAgePolicyRequest,
      O: GetPasswordAgePolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default password age policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePasswordAgePolicy
     */
    updatePasswordAgePolicy: {
      name: "UpdatePasswordAgePolicy",
      I: UpdatePasswordAgePolicyRequest,
      O: UpdatePasswordAgePolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the lockout policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetLockoutPolicy
     */
    getLockoutPolicy: {
      name: "GetLockoutPolicy",
      I: GetLockoutPolicyRequest,
      O: GetLockoutPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default lockout policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateLockoutPolicy
     */
    updateLockoutPolicy: {
      name: "UpdateLockoutPolicy",
      I: UpdateLockoutPolicyRequest,
      O: UpdateLockoutPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the privacy policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetPrivacyPolicy
     */
    getPrivacyPolicy: {
      name: "GetPrivacyPolicy",
      I: GetPrivacyPolicyRequest,
      O: GetPrivacyPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default privacy policy of ZITADEL
     * it impacts all organisations without a customised policy
     * Variable {{.Lang}} can be set to have different links based on the language
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdatePrivacyPolicy
     */
    updatePrivacyPolicy: {
      name: "UpdatePrivacyPolicy",
      I: UpdatePrivacyPolicyRequest,
      O: UpdatePrivacyPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Add a default notification policy for ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddNotificationPolicy
     */
    addNotificationPolicy: {
      name: "AddNotificationPolicy",
      I: AddNotificationPolicyRequest,
      O: AddNotificationPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the notification policy defined by the administrators of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetNotificationPolicy
     */
    getNotificationPolicy: {
      name: "GetNotificationPolicy",
      I: GetNotificationPolicyRequest,
      O: GetNotificationPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Updates the default notification policy of ZITADEL
     * it impacts all organisations without a customised policy
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateNotificationPolicy
     */
    updateNotificationPolicy: {
      name: "UpdateNotificationPolicy",
      I: UpdateNotificationPolicyRequest,
      O: UpdateNotificationPolicyResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for initial message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultInitMessageText
     */
    getDefaultInitMessageText: {
      name: "GetDefaultInitMessageText",
      I: GetDefaultInitMessageTextRequest,
      O: GetDefaultInitMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for initial message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomInitMessageText
     */
    getCustomInitMessageText: {
      name: "GetCustomInitMessageText",
      I: GetCustomInitMessageTextRequest,
      O: GetCustomInitMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for initial message
     * it impacts all organisations without customized initial message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultInitMessageText
     */
    setDefaultInitMessageText: {
      name: "SetDefaultInitMessageText",
      I: SetDefaultInitMessageTextRequest,
      O: SetDefaultInitMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom init message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomInitMessageTextToDefault
     */
    resetCustomInitMessageTextToDefault: {
      name: "ResetCustomInitMessageTextToDefault",
      I: ResetCustomInitMessageTextToDefaultRequest,
      O: ResetCustomInitMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for password reset message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordResetMessageText
     */
    getDefaultPasswordResetMessageText: {
      name: "GetDefaultPasswordResetMessageText",
      I: GetDefaultPasswordResetMessageTextRequest,
      O: GetDefaultPasswordResetMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for password reset message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordResetMessageText
     */
    getCustomPasswordResetMessageText: {
      name: "GetCustomPasswordResetMessageText",
      I: GetCustomPasswordResetMessageTextRequest,
      O: GetCustomPasswordResetMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for password reset message
     * it impacts all organisations without customized password reset message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordResetMessageText
     */
    setDefaultPasswordResetMessageText: {
      name: "SetDefaultPasswordResetMessageText",
      I: SetDefaultPasswordResetMessageTextRequest,
      O: SetDefaultPasswordResetMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom password reset message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordResetMessageTextToDefault
     */
    resetCustomPasswordResetMessageTextToDefault: {
      name: "ResetCustomPasswordResetMessageTextToDefault",
      I: ResetCustomPasswordResetMessageTextToDefaultRequest,
      O: ResetCustomPasswordResetMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for verify email message (translation files)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultVerifyEmailMessageText
     */
    getDefaultVerifyEmailMessageText: {
      name: "GetDefaultVerifyEmailMessageText",
      I: GetDefaultVerifyEmailMessageTextRequest,
      O: GetDefaultVerifyEmailMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for verify email message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomVerifyEmailMessageText
     */
    getCustomVerifyEmailMessageText: {
      name: "GetCustomVerifyEmailMessageText",
      I: GetCustomVerifyEmailMessageTextRequest,
      O: GetCustomVerifyEmailMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for verify email message
     * it impacts all organisations without customized verify email message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultVerifyEmailMessageText
     */
    setDefaultVerifyEmailMessageText: {
      name: "SetDefaultVerifyEmailMessageText",
      I: SetDefaultVerifyEmailMessageTextRequest,
      O: SetDefaultVerifyEmailMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom verify email message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomVerifyEmailMessageTextToDefault
     */
    resetCustomVerifyEmailMessageTextToDefault: {
      name: "ResetCustomVerifyEmailMessageTextToDefault",
      I: ResetCustomVerifyEmailMessageTextToDefaultRequest,
      O: ResetCustomVerifyEmailMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for verify phone message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultVerifyPhoneMessageText
     */
    getDefaultVerifyPhoneMessageText: {
      name: "GetDefaultVerifyPhoneMessageText",
      I: GetDefaultVerifyPhoneMessageTextRequest,
      O: GetDefaultVerifyPhoneMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for verify phone message
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomVerifyPhoneMessageText
     */
    getCustomVerifyPhoneMessageText: {
      name: "GetCustomVerifyPhoneMessageText",
      I: GetCustomVerifyPhoneMessageTextRequest,
      O: GetCustomVerifyPhoneMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for verify phone message
     * it impacts all organisations without customized verify phone message text
     * The Following Variables can be used:
     * {{.Code}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultVerifyPhoneMessageText
     */
    setDefaultVerifyPhoneMessageText: {
      name: "SetDefaultVerifyPhoneMessageText",
      I: SetDefaultVerifyPhoneMessageTextRequest,
      O: SetDefaultVerifyPhoneMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom verify phone text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomVerifyPhoneMessageTextToDefault
     */
    resetCustomVerifyPhoneMessageTextToDefault: {
      name: "ResetCustomVerifyPhoneMessageTextToDefault",
      I: ResetCustomVerifyPhoneMessageTextToDefaultRequest,
      O: ResetCustomVerifyPhoneMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for domain claimed message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultDomainClaimedMessageText
     */
    getDefaultDomainClaimedMessageText: {
      name: "GetDefaultDomainClaimedMessageText",
      I: GetDefaultDomainClaimedMessageTextRequest,
      O: GetDefaultDomainClaimedMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for domain claimed message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomDomainClaimedMessageText
     */
    getCustomDomainClaimedMessageText: {
      name: "GetCustomDomainClaimedMessageText",
      I: GetCustomDomainClaimedMessageTextRequest,
      O: GetCustomDomainClaimedMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for domain claimed message
     * it impacts all organisations without customized domain claimed message text
     * The Following Variables can be used:
     * {{.Domain}} {{.TempUsername}} {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultDomainClaimedMessageText
     */
    setDefaultDomainClaimedMessageText: {
      name: "SetDefaultDomainClaimedMessageText",
      I: SetDefaultDomainClaimedMessageTextRequest,
      O: SetDefaultDomainClaimedMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom domain claimed message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomDomainClaimedMessageTextToDefault
     */
    resetCustomDomainClaimedMessageTextToDefault: {
      name: "ResetCustomDomainClaimedMessageTextToDefault",
      I: ResetCustomDomainClaimedMessageTextToDefaultRequest,
      O: ResetCustomDomainClaimedMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for passwordless registration message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordlessRegistrationMessageText
     */
    getDefaultPasswordlessRegistrationMessageText: {
      name: "GetDefaultPasswordlessRegistrationMessageText",
      I: GetDefaultPasswordlessRegistrationMessageTextRequest,
      O: GetDefaultPasswordlessRegistrationMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for passwordless registration message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordlessRegistrationMessageText
     */
    getCustomPasswordlessRegistrationMessageText: {
      name: "GetCustomPasswordlessRegistrationMessageText",
      I: GetCustomPasswordlessRegistrationMessageTextRequest,
      O: GetCustomPasswordlessRegistrationMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for passwordless registration message
     * it impacts all organisations without customized passwordless registration message text
     * The Following Variables can be used:
     * {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordlessRegistrationMessageText
     */
    setDefaultPasswordlessRegistrationMessageText: {
      name: "SetDefaultPasswordlessRegistrationMessageText",
      I: SetDefaultPasswordlessRegistrationMessageTextRequest,
      O: SetDefaultPasswordlessRegistrationMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom passwordless link message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordlessRegistrationMessageTextToDefault
     */
    resetCustomPasswordlessRegistrationMessageTextToDefault: {
      name: "ResetCustomPasswordlessRegistrationMessageTextToDefault",
      I: ResetCustomPasswordlessRegistrationMessageTextToDefaultRequest,
      O: ResetCustomPasswordlessRegistrationMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default text for password change message (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultPasswordChangeMessageText
     */
    getDefaultPasswordChangeMessageText: {
      name: "GetDefaultPasswordChangeMessageText",
      I: GetDefaultPasswordChangeMessageTextRequest,
      O: GetDefaultPasswordChangeMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom text for password change message (overwritten in eventstore)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomPasswordChangeMessageText
     */
    getCustomPasswordChangeMessageText: {
      name: "GetCustomPasswordChangeMessageText",
      I: GetCustomPasswordChangeMessageTextRequest,
      O: GetCustomPasswordChangeMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the default custom text for password change message
     * it impacts all organisations without customized password change message text
     * The Following Variables can be used:
     * {{.UserName}} {{.FirstName}} {{.LastName}} {{.NickName}} {{.DisplayName}} {{.LastEmail}} {{.VerifiedEmail}} {{.LastPhone}} {{.VerifiedPhone}} {{.PreferredLoginName}} {{.LoginNames}} {{.ChangeDate}} {{.CreationDate}}
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetDefaultPasswordChangeMessageText
     */
    setDefaultPasswordChangeMessageText: {
      name: "SetDefaultPasswordChangeMessageText",
      I: SetDefaultPasswordChangeMessageTextRequest,
      O: SetDefaultPasswordChangeMessageTextResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom password change message text of the system
     * The default text from the translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomPasswordChangeMessageTextToDefault
     */
    resetCustomPasswordChangeMessageTextToDefault: {
      name: "ResetCustomPasswordChangeMessageTextToDefault",
      I: ResetCustomPasswordChangeMessageTextToDefaultRequest,
      O: ResetCustomPasswordChangeMessageTextToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the default custom texts for login ui (translation file)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetDefaultLoginTexts
     */
    getDefaultLoginTexts: {
      name: "GetDefaultLoginTexts",
      I: GetDefaultLoginTextsRequest,
      O: GetDefaultLoginTextsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the custom texts for login ui
     *
     * @generated from rpc zitadel.admin.v1.AdminService.GetCustomLoginTexts
     */
    getCustomLoginTexts: {
      name: "GetCustomLoginTexts",
      I: GetCustomLoginTextsRequest,
      O: GetCustomLoginTextsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the custom text for login ui
     * it impacts all organisations without customized login ui texts
     *
     * @generated from rpc zitadel.admin.v1.AdminService.SetCustomLoginText
     */
    setCustomLoginText: {
      name: "SetCustomLoginText",
      I: SetCustomLoginTextsRequest,
      O: SetCustomLoginTextsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the custom texts for login ui
     * it impacts all organisations without customized login ui texts
     * The default text form translation file will trigger after
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ResetCustomLoginTextToDefault
     */
    resetCustomLoginTextToDefault: {
      name: "ResetCustomLoginTextToDefault",
      I: ResetCustomLoginTextsToDefaultRequest,
      O: ResetCustomLoginTextsToDefaultResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns the IAM roles visible for the requested user
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIAMMemberRoles
     */
    listIAMMemberRoles: {
      name: "ListIAMMemberRoles",
      I: ListIAMMemberRolesRequest,
      O: ListIAMMemberRolesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all members matching the request
     * all queries need to match (ANDed)
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListIAMMembers
     */
    listIAMMembers: {
      name: "ListIAMMembers",
      I: ListIAMMembersRequest,
      O: ListIAMMembersResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Adds a user to the membership list of ZITADEL with the given roles
     * undefined roles will be dropped
     *
     * @generated from rpc zitadel.admin.v1.AdminService.AddIAMMember
     */
    addIAMMember: {
      name: "AddIAMMember",
      I: AddIAMMemberRequest,
      O: AddIAMMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Sets the given roles on a member.
     * The member has only roles provided by this call
     *
     * @generated from rpc zitadel.admin.v1.AdminService.UpdateIAMMember
     */
    updateIAMMember: {
      name: "UpdateIAMMember",
      I: UpdateIAMMemberRequest,
      O: UpdateIAMMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Removes the user from the membership list of ZITADEL
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveIAMMember
     */
    removeIAMMember: {
      name: "RemoveIAMMember",
      I: RemoveIAMMemberRequest,
      O: RemoveIAMMemberResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns all stored read models of ZITADEL
     * views are used for search optimisation and optimise request latencies
     * they represent the delta of the event happend on the objects
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListViews
     */
    listViews: {
      name: "ListViews",
      I: ListViewsRequest,
      O: ListViewsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Returns event descriptions which cannot be processed.
     * It's possible that some events need some retries.
     * For example if the SMTP-API wasn't able to send an email at the first time
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ListFailedEvents
     */
    listFailedEvents: {
      name: "ListFailedEvents",
      I: ListFailedEventsRequest,
      O: ListFailedEventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Deletes the event from failed events view.
     * the event is not removed from the change stream
     * This call is usefull if the system was able to process the event later.
     * e.g. if the second try of sending an email was successful. the first try produced a
     * failed event. You can find out if it worked on the `failure_count`
     *
     * @generated from rpc zitadel.admin.v1.AdminService.RemoveFailedEvent
     */
    removeFailedEvent: {
      name: "RemoveFailedEvent",
      I: RemoveFailedEventRequest,
      O: RemoveFailedEventResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Imports data into instance and creates different objects
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ImportData
     */
    importData: {
      name: "ImportData",
      I: ImportDataRequest,
      O: ImportDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Exports data from instance
     *
     * @generated from rpc zitadel.admin.v1.AdminService.ExportData
     */
    exportData: {
      name: "ExportData",
      I: ExportDataRequest,
      O: ExportDataResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListEventTypes
     */
    listEventTypes: {
      name: "ListEventTypes",
      I: ListEventTypesRequest,
      O: ListEventTypesResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListEvents
     */
    listEvents: {
      name: "ListEvents",
      I: ListEventsRequest,
      O: ListEventsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc zitadel.admin.v1.AdminService.ListAggregateTypes
     */
    listAggregateTypes: {
      name: "ListAggregateTypes",
      I: ListAggregateTypesRequest,
      O: ListAggregateTypesResponse,
      kind: MethodKind.Unary,
    },
  }
};

