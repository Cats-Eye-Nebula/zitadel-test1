/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
var authoption_options_pb = require('./authoption/options_pb.js');
goog.object.extend(proto, authoption_options_pb);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.AddIamMemberRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.CreateOrgRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.CreateUserRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.FailedEvent', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.FailedEventID', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.FailedEvents', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.Gender', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMember', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberRoles', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberSearchKey', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.IamMemberView', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.Org', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgID', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgIamPolicy', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgIamPolicyID', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSearchKey', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSearchMethod', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSearchQuery', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSearchRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSearchResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSetUpRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgSetUpResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.OrgState', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.SearchMethod', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.UniqueOrgRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.UniqueOrgResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.User', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.UserState', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.View', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.ViewID', null, global);
goog.exportSymbol('proto.caos.zitadel.admin.api.v1.Views', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgID.displayName = 'proto.caos.zitadel.admin.api.v1.OrgID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.UniqueOrgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.displayName = 'proto.caos.zitadel.admin.api.v1.UniqueOrgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.UniqueOrgResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.displayName = 'proto.caos.zitadel.admin.api.v1.UniqueOrgResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.Org = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.Org, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.Org.displayName = 'proto.caos.zitadel.admin.api.v1.Org';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.OrgSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgSearchRequest.displayName = 'proto.caos.zitadel.admin.api.v1.OrgSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgSearchQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgSearchQuery.displayName = 'proto.caos.zitadel.admin.api.v1.OrgSearchQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.OrgSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgSearchResponse.displayName = 'proto.caos.zitadel.admin.api.v1.OrgSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgSetUpRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.displayName = 'proto.caos.zitadel.admin.api.v1.OrgSetUpRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgSetUpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.displayName = 'proto.caos.zitadel.admin.api.v1.OrgSetUpResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.CreateUserRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.CreateUserRequest.displayName = 'proto.caos.zitadel.admin.api.v1.CreateUserRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.User.displayName = 'proto.caos.zitadel.admin.api.v1.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.CreateOrgRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.CreateOrgRequest.displayName = 'proto.caos.zitadel.admin.api.v1.CreateOrgRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgIamPolicy, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgIamPolicy.displayName = 'proto.caos.zitadel.admin.api.v1.OrgIamPolicy';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.displayName = 'proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.OrgIamPolicyID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.displayName = 'proto.caos.zitadel.admin.api.v1.OrgIamPolicyID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.IamMemberRoles.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMemberRoles, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMemberRoles.displayName = 'proto.caos.zitadel.admin.api.v1.IamMemberRoles';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMember = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.IamMember.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMember, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMember.displayName = 'proto.caos.zitadel.admin.api.v1.IamMember';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.AddIamMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.displayName = 'proto.caos.zitadel.admin.api.v1.AddIamMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.displayName = 'proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.displayName = 'proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.displayName = 'proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMemberView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.IamMemberView.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMemberView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMemberView.displayName = 'proto.caos.zitadel.admin.api.v1.IamMemberView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.displayName = 'proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.displayName = 'proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.FailedEventID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.FailedEventID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.FailedEventID.displayName = 'proto.caos.zitadel.admin.api.v1.FailedEventID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.FailedEvents = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.FailedEvents.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.FailedEvents, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.FailedEvents.displayName = 'proto.caos.zitadel.admin.api.v1.FailedEvents';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.FailedEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.FailedEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.FailedEvent.displayName = 'proto.caos.zitadel.admin.api.v1.FailedEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.ViewID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.ViewID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.ViewID.displayName = 'proto.caos.zitadel.admin.api.v1.ViewID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.Views = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.admin.api.v1.Views.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.Views, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.Views.displayName = 'proto.caos.zitadel.admin.api.v1.Views';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.admin.api.v1.View = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.admin.api.v1.View, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.admin.api.v1.View.displayName = 'proto.caos.zitadel.admin.api.v1.View';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgID.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgID}
 */
proto.caos.zitadel.admin.api.v1.OrgID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgID;
  return proto.caos.zitadel.admin.api.v1.OrgID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgID}
 */
proto.caos.zitadel.admin.api.v1.OrgID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgID.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.UniqueOrgRequest}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.UniqueOrgRequest;
  return proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.UniqueOrgRequest}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.UniqueOrgRequest.prototype.setDomain = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    isUnique: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.UniqueOrgResponse}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.UniqueOrgResponse;
  return proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.UniqueOrgResponse}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsUnique(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.UniqueOrgResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIsUnique();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool is_unique = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.prototype.getIsUnique = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.UniqueOrgResponse.prototype.setIsUnique = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.Org.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.Org} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.Org.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.Org}
 */
proto.caos.zitadel.admin.api.v1.Org.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.Org;
  return proto.caos.zitadel.admin.api.v1.Org.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.Org} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.Org}
 */
proto.caos.zitadel.admin.api.v1.Org.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.OrgState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.Org.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.Org} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.Org.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional OrgState state = 2;
 * @return {!proto.caos.zitadel.admin.api.v1.OrgState}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getState = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.OrgState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.OrgState} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string domain = 6;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.Org.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.Org.prototype.setDomain = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortingColumn: jspb.Message.getFieldWithDefault(msg, 3, 0),
    asc: jspb.Message.getFieldWithDefault(msg, 4, false),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.caos.zitadel.admin.api.v1.OrgSearchQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgSearchRequest;
  return proto.caos.zitadel.admin.api.v1.OrgSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} */ (reader.readEnum());
      msg.setSortingColumn(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsc(value);
      break;
    case 5:
      var value = new proto.caos.zitadel.admin.api.v1.OrgSearchQuery;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.OrgSearchQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSortingColumn();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAsc();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.caos.zitadel.admin.api.v1.OrgSearchQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional OrgSearchKey sorting_column = 3;
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchKey}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.getSortingColumn = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} value */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.setSortingColumn = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool asc = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.getAsc = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.setAsc = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated OrgSearchQuery queries = 5;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.OrgSearchQuery>}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.OrgSearchQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.OrgSearchQuery, 5));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.OrgSearchQuery>} value */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.setQueriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.caos.zitadel.admin.api.v1.OrgSearchQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.OrgSearchRequest.prototype.clearQueriesList = function() {
  this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgSearchQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgSearchQuery;
  return proto.caos.zitadel.admin.api.v1.OrgSearchQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} */ (reader.readEnum());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgSearchQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional OrgSearchKey key = 1;
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchKey}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.getKey = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.OrgSearchKey} value */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.setKey = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional OrgSearchMethod method = 2;
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchMethod}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.getMethod = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.OrgSearchMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.OrgSearchMethod} value */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.setMethod = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgSearchQuery.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalResult: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.caos.zitadel.admin.api.v1.Org.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchResponse}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgSearchResponse;
  return proto.caos.zitadel.admin.api.v1.OrgSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSearchResponse}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResult(value);
      break;
    case 4:
      var value = new proto.caos.zitadel.admin.api.v1.Org;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.Org.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalResult();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.caos.zitadel.admin.api.v1.Org.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_result = 3;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.getTotalResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.setTotalResult = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Org result = 4;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.Org>}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.Org>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.Org, 4));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.Org>} value */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.Org=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.Org}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.caos.zitadel.admin.api.v1.Org, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.OrgSearchResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    org: (f = msg.getOrg()) && proto.caos.zitadel.admin.api.v1.CreateOrgRequest.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.caos.zitadel.admin.api.v1.CreateUserRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSetUpRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgSetUpRequest;
  return proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSetUpRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.admin.api.v1.CreateOrgRequest;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.CreateOrgRequest.deserializeBinaryFromReader);
      msg.setOrg(value);
      break;
    case 2:
      var value = new proto.caos.zitadel.admin.api.v1.CreateUserRequest;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.CreateUserRequest.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.caos.zitadel.admin.api.v1.CreateOrgRequest.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.caos.zitadel.admin.api.v1.CreateUserRequest.serializeBinaryToWriter
    );
  }
};


/**
 * optional CreateOrgRequest org = 1;
 * @return {?proto.caos.zitadel.admin.api.v1.CreateOrgRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.getOrg = function() {
  return /** @type{?proto.caos.zitadel.admin.api.v1.CreateOrgRequest} */ (
    jspb.Message.getWrapperField(this, proto.caos.zitadel.admin.api.v1.CreateOrgRequest, 1));
};


/** @param {?proto.caos.zitadel.admin.api.v1.CreateOrgRequest|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.setOrg = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.clearOrg = function() {
  this.setOrg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.hasOrg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional CreateUserRequest user = 2;
 * @return {?proto.caos.zitadel.admin.api.v1.CreateUserRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.getUser = function() {
  return /** @type{?proto.caos.zitadel.admin.api.v1.CreateUserRequest} */ (
    jspb.Message.getWrapperField(this, proto.caos.zitadel.admin.api.v1.CreateUserRequest, 2));
};


/** @param {?proto.caos.zitadel.admin.api.v1.CreateUserRequest|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpRequest.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    org: (f = msg.getOrg()) && proto.caos.zitadel.admin.api.v1.Org.toObject(includeInstance, f),
    user: (f = msg.getUser()) && proto.caos.zitadel.admin.api.v1.User.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSetUpResponse}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgSetUpResponse;
  return proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgSetUpResponse}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.admin.api.v1.Org;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.Org.deserializeBinaryFromReader);
      msg.setOrg(value);
      break;
    case 2:
      var value = new proto.caos.zitadel.admin.api.v1.User;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgSetUpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrg();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.caos.zitadel.admin.api.v1.Org.serializeBinaryToWriter
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.caos.zitadel.admin.api.v1.User.serializeBinaryToWriter
    );
  }
};


/**
 * optional Org org = 1;
 * @return {?proto.caos.zitadel.admin.api.v1.Org}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.getOrg = function() {
  return /** @type{?proto.caos.zitadel.admin.api.v1.Org} */ (
    jspb.Message.getWrapperField(this, proto.caos.zitadel.admin.api.v1.Org, 1));
};


/** @param {?proto.caos.zitadel.admin.api.v1.Org|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.setOrg = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.clearOrg = function() {
  this.setOrg(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.hasOrg = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional User user = 2;
 * @return {?proto.caos.zitadel.admin.api.v1.User}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.getUser = function() {
  return /** @type{?proto.caos.zitadel.admin.api.v1.User} */ (
    jspb.Message.getWrapperField(this, proto.caos.zitadel.admin.api.v1.User, 2));
};


/** @param {?proto.caos.zitadel.admin.api.v1.User|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.setUser = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.clearUser = function() {
  this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgSetUpResponse.prototype.hasUser = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.CreateUserRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.CreateUserRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 6, 0),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    isEmailVerified: jspb.Message.getFieldWithDefault(msg, 8, false),
    phone: jspb.Message.getFieldWithDefault(msg, 9, ""),
    isPhoneVerified: jspb.Message.getFieldWithDefault(msg, 10, false),
    country: jspb.Message.getFieldWithDefault(msg, 11, ""),
    locality: jspb.Message.getFieldWithDefault(msg, 12, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 13, ""),
    region: jspb.Message.getFieldWithDefault(msg, 14, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 15, ""),
    password: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.CreateUserRequest}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.CreateUserRequest;
  return proto.caos.zitadel.admin.api.v1.CreateUserRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.CreateUserRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.CreateUserRequest}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguage(value);
      break;
    case 6:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEmailVerified(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPhoneVerified(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.CreateUserRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.CreateUserRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPreferredLanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getIsEmailVerified();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getIsPhoneVerified();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string user_name = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string first_name = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string last_name = 3;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string nick_name = 4;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string preferred_language = 5;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getPreferredLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setPreferredLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Gender gender = 6;
 * @return {!proto.caos.zitadel.admin.api.v1.Gender}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getGender = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.Gender} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.Gender} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool is_email_verified = 8;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getIsEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 8, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setIsEmailVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional string phone = 9;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional bool is_phone_verified = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getIsPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setIsPhoneVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};


/**
 * optional string country = 11;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string locality = 12;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string postal_code = 13;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional string region = 14;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional string street_address = 15;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setStreetAddress = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string password = 16;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateUserRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    userName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 7, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 10, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 11, 0),
    email: jspb.Message.getFieldWithDefault(msg, 12, ""),
    isemailverified: jspb.Message.getFieldWithDefault(msg, 13, false),
    phone: jspb.Message.getFieldWithDefault(msg, 14, ""),
    isphoneverified: jspb.Message.getFieldWithDefault(msg, 15, false),
    country: jspb.Message.getFieldWithDefault(msg, 16, ""),
    locality: jspb.Message.getFieldWithDefault(msg, 17, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 18, ""),
    region: jspb.Message.getFieldWithDefault(msg, 19, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 20, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 21, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.User}
 */
proto.caos.zitadel.admin.api.v1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.User;
  return proto.caos.zitadel.admin.api.v1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.User}
 */
proto.caos.zitadel.admin.api.v1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.UserState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguage(value);
      break;
    case 11:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 13:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsemailverified(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 15:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsphoneverified(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPreferredLanguage();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      11,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getIsemailverified();
  if (f) {
    writer.writeBool(
      13,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getIsphoneverified();
  if (f) {
    writer.writeBool(
      15,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      18,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      21,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UserState state = 2;
 * @return {!proto.caos.zitadel.admin.api.v1.UserState}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getState = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.UserState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.UserState} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.User.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.User.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string user_name = 5;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string first_name = 6;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string last_name = 7;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string nick_name = 8;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string display_name = 9;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string preferred_language = 10;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getPreferredLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setPreferredLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional Gender gender = 11;
 * @return {!proto.caos.zitadel.admin.api.v1.Gender}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getGender = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.Gender} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.Gender} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 11, value);
};


/**
 * optional string email = 12;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional bool isEmailVerified = 13;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getIsemailverified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 13, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setIsemailverified = function(value) {
  jspb.Message.setProto3BooleanField(this, 13, value);
};


/**
 * optional string phone = 14;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional bool isPhoneVerified = 15;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getIsphoneverified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 15, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setIsphoneverified = function(value) {
  jspb.Message.setProto3BooleanField(this, 15, value);
};


/**
 * optional string country = 16;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 16, value);
};


/**
 * optional string locality = 17;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional string postal_code = 18;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 18, value);
};


/**
 * optional string region = 19;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string street_address = 20;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setStreetAddress = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional uint64 sequence = 21;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.User.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.User.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 21, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.CreateOrgRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.CreateOrgRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    domain: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.CreateOrgRequest}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.CreateOrgRequest;
  return proto.caos.zitadel.admin.api.v1.CreateOrgRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.CreateOrgRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.CreateOrgRequest}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.CreateOrgRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.CreateOrgRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDomain();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string domain = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.getDomain = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.CreateOrgRequest.prototype.setDomain = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicy.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicy} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userLoginMustBeDomain: jspb.Message.getFieldWithDefault(msg, 3, false),
    pb_default: jspb.Message.getFieldWithDefault(msg, 4, false),
    sequence: jspb.Message.getFieldWithDefault(msg, 5, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicy}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgIamPolicy;
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicy.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicy} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicy}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserLoginMustBeDomain(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDefault(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgIamPolicy.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicy} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserLoginMustBeDomain();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getDefault();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setOrgId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool user_login_must_be_domain = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getUserLoginMustBeDomain = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setUserLoginMustBeDomain = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool default = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getDefault = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setDefault = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint64 sequence = 5;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicy.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 7) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userLoginMustBeDomain: jspb.Message.getFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest;
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUserLoginMustBeDomain(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserLoginMustBeDomain();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.setOrgId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool user_login_must_be_domain = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.getUserLoginMustBeDomain = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyRequest.prototype.setUserLoginMustBeDomain = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyID}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.OrgIamPolicyID;
  return proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyID}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.OrgIamPolicyID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string org_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.prototype.getOrgId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.OrgIamPolicyID.prototype.setOrgId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMemberRoles.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberRoles} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.toObject = function(includeInstance, msg) {
  var f, obj = {
    rolesList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberRoles}
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMemberRoles;
  return proto.caos.zitadel.admin.api.v1.IamMemberRoles.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberRoles} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberRoles}
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMemberRoles.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberRoles} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string roles = 1;
 * @return {!Array<string>}
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.IamMemberRoles.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.IamMember.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMember.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMember} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMember.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rolesList: jspb.Message.getRepeatedField(msg, 2),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sequence: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMember}
 */
proto.caos.zitadel.admin.api.v1.IamMember.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMember;
  return proto.caos.zitadel.admin.api.v1.IamMember.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMember} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMember}
 */
proto.caos.zitadel.admin.api.v1.IamMember.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMember.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMember} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMember.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string roles = 2;
 * @return {!Array<string>}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.clearRolesList = function() {
  this.setRolesList([]);
};


/**
 * optional google.protobuf.Timestamp change_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp creation_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 sequence = 5;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMember.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.AddIamMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rolesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.AddIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.AddIamMemberRequest;
  return proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.AddIamMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.AddIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.AddIamMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string roles = 2;
 * @return {!Array<string>}
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.AddIamMemberRequest.prototype.clearRolesList = function() {
  this.setRolesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rolesList: jspb.Message.getRepeatedField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest;
  return proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string roles = 2;
 * @return {!Array<string>}
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.ChangeIamMemberRequest.prototype.clearRolesList = function() {
  this.setRolesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest;
  return proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest}
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.RemoveIamMemberRequest.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalResult: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.caos.zitadel.admin.api.v1.IamMemberView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse;
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResult(value);
      break;
    case 4:
      var value = new proto.caos.zitadel.admin.api.v1.IamMemberView;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.IamMemberView.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalResult();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.caos.zitadel.admin.api.v1.IamMemberView.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_result = 3;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.getTotalResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.setTotalResult = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated IamMemberView result = 4;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.IamMemberView>}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.IamMemberView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.IamMemberView, 4));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.IamMemberView>} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberView}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.caos.zitadel.admin.api.v1.IamMemberView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMemberView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    rolesList: jspb.Message.getRepeatedField(msg, 2),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    sequence: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    email: jspb.Message.getFieldWithDefault(msg, 7, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 9, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberView}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMemberView;
  return proto.caos.zitadel.admin.api.v1.IamMemberView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberView}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMemberView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      5,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * repeated string roles = 2;
 * @return {!Array<string>}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.clearRolesList = function() {
  this.setRolesList([]);
};


/**
 * optional google.protobuf.Timestamp change_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp creation_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint64 sequence = 5;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string user_name = 6;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string email = 7;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string first_name = 8;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string last_name = 9;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberView.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest;
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = new proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated IamMemberSearchQuery queries = 3;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery>}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery, 3));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery>} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.setQueriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchRequest.prototype.clearQueriesList = function() {
  this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery;
  return proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.IamMemberSearchKey} */ (reader.readEnum());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.admin.api.v1.SearchMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional IamMemberSearchKey key = 1;
 * @return {!proto.caos.zitadel.admin.api.v1.IamMemberSearchKey}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.getKey = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.IamMemberSearchKey} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.IamMemberSearchKey} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.setKey = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SearchMethod method = 2;
 * @return {!proto.caos.zitadel.admin.api.v1.SearchMethod}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.getMethod = function() {
  return /** @type {!proto.caos.zitadel.admin.api.v1.SearchMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.admin.api.v1.SearchMethod} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.setMethod = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.IamMemberSearchQuery.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.FailedEventID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEventID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viewName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    failedSequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEventID}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.FailedEventID;
  return proto.caos.zitadel.admin.api.v1.FailedEventID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEventID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEventID}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFailedSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.FailedEventID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEventID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViewName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFailedSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.setDatabase = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string view_name = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.getViewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.setViewName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 failed_sequence = 3;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.getFailedSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.FailedEventID.prototype.setFailedSequence = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.FailedEvents.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvents} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.toObject = function(includeInstance, msg) {
  var f, obj = {
    failedEventsList: jspb.Message.toObjectList(msg.getFailedEventsList(),
    proto.caos.zitadel.admin.api.v1.FailedEvent.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEvents}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.FailedEvents;
  return proto.caos.zitadel.admin.api.v1.FailedEvents.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvents} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEvents}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.admin.api.v1.FailedEvent;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.FailedEvent.deserializeBinaryFromReader);
      msg.addFailedEvents(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.FailedEvents.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvents} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFailedEventsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.caos.zitadel.admin.api.v1.FailedEvent.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FailedEvent failed_events = 1;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.FailedEvent>}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.getFailedEventsList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.FailedEvent>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.FailedEvent, 1));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.FailedEvent>} value */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.setFailedEventsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvent=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEvent}
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.addFailedEvents = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.caos.zitadel.admin.api.v1.FailedEvent, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.FailedEvents.prototype.clearFailedEventsList = function() {
  this.setFailedEventsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.FailedEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viewName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    failedSequence: jspb.Message.getFieldWithDefault(msg, 3, 0),
    failureCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    errorMessage: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEvent}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.FailedEvent;
  return proto.caos.zitadel.admin.api.v1.FailedEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.FailedEvent}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFailedSequence(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFailureCount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.FailedEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.FailedEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViewName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFailedSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getFailureCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getErrorMessage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.setDatabase = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string view_name = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.getViewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.setViewName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 failed_sequence = 3;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.getFailedSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.setFailedSequence = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 failure_count = 4;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.getFailureCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.setFailureCount = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string error_message = 5;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.FailedEvent.prototype.setErrorMessage = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.ViewID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.ViewID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.ViewID.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viewName: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.ViewID}
 */
proto.caos.zitadel.admin.api.v1.ViewID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.ViewID;
  return proto.caos.zitadel.admin.api.v1.ViewID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.ViewID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.ViewID}
 */
proto.caos.zitadel.admin.api.v1.ViewID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.ViewID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.ViewID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.ViewID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViewName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.setDatabase = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string view_name = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.getViewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.ViewID.prototype.setViewName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.admin.api.v1.Views.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.Views.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.Views.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.Views} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.Views.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewsList: jspb.Message.toObjectList(msg.getViewsList(),
    proto.caos.zitadel.admin.api.v1.View.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.Views}
 */
proto.caos.zitadel.admin.api.v1.Views.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.Views;
  return proto.caos.zitadel.admin.api.v1.Views.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.Views} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.Views}
 */
proto.caos.zitadel.admin.api.v1.Views.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.admin.api.v1.View;
      reader.readMessage(value,proto.caos.zitadel.admin.api.v1.View.deserializeBinaryFromReader);
      msg.addViews(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.Views.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.Views.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.Views} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.Views.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.caos.zitadel.admin.api.v1.View.serializeBinaryToWriter
    );
  }
};


/**
 * repeated View views = 1;
 * @return {!Array<!proto.caos.zitadel.admin.api.v1.View>}
 */
proto.caos.zitadel.admin.api.v1.Views.prototype.getViewsList = function() {
  return /** @type{!Array<!proto.caos.zitadel.admin.api.v1.View>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.admin.api.v1.View, 1));
};


/** @param {!Array<!proto.caos.zitadel.admin.api.v1.View>} value */
proto.caos.zitadel.admin.api.v1.Views.prototype.setViewsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.caos.zitadel.admin.api.v1.View=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.admin.api.v1.View}
 */
proto.caos.zitadel.admin.api.v1.Views.prototype.addViews = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.caos.zitadel.admin.api.v1.View, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.admin.api.v1.Views.prototype.clearViewsList = function() {
  this.setViewsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.admin.api.v1.View.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.admin.api.v1.View.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.admin.api.v1.View} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.View.toObject = function(includeInstance, msg) {
  var f, obj = {
    database: jspb.Message.getFieldWithDefault(msg, 1, ""),
    viewName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.admin.api.v1.View}
 */
proto.caos.zitadel.admin.api.v1.View.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.admin.api.v1.View;
  return proto.caos.zitadel.admin.api.v1.View.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.admin.api.v1.View} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.admin.api.v1.View}
 */
proto.caos.zitadel.admin.api.v1.View.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDatabase(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.admin.api.v1.View.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.admin.api.v1.View.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.admin.api.v1.View} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.admin.api.v1.View.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDatabase();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getViewName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional string database = 1;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.View.prototype.getDatabase = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.View.prototype.setDatabase = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string view_name = 2;
 * @return {string}
 */
proto.caos.zitadel.admin.api.v1.View.prototype.getViewName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.admin.api.v1.View.prototype.setViewName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 sequence = 3;
 * @return {number}
 */
proto.caos.zitadel.admin.api.v1.View.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.admin.api.v1.View.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.OrgState = {
  ORGSTATE_UNSPECIFIED: 0,
  ORGSTATE_ACTIVE: 1,
  ORGSTATE_INACTIVE: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchKey = {
  ORGSEARCHKEY_UNSPECIFIED: 0,
  ORGSEARCHKEY_ORG_NAME: 1,
  ORGSEARCHKEY_DOMAIN: 2,
  ORGSEARCHKEY_STATE: 3
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.OrgSearchMethod = {
  ORGSEARCHMETHOD_EQUALS: 0,
  ORGSEARCHMETHOD_STARTS_WITH: 1,
  ORGSEARCHMETHOD_CONTAINS: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.UserState = {
  USERSTATE_UNSPECIFIED: 0,
  USERSTATE_ACTIVE: 1,
  USERSTATE_INACTIVE: 2,
  USERSTATE_DELETED: 3,
  USERSTATE_LOCKED: 4,
  USERSTATE_SUSPEND: 5,
  USERSTATE_INITIAL: 6
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.Gender = {
  GENDER_UNSPECIFIED: 0,
  GENDER_FEMALE: 1,
  GENDER_MALE: 2,
  GENDER_DIVERSE: 3
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.IamMemberSearchKey = {
  IAMMEMBERSEARCHKEY_UNSPECIFIED: 0,
  IAMMEMBERSEARCHKEY_FIRST_NAME: 1,
  IAMMEMBERSEARCHKEY_LAST_NAME: 2,
  IAMMEMBERSEARCHKEY_EMAIL: 3,
  IAMMEMBERSEARCHKEY_USER_ID: 4
};

/**
 * @enum {number}
 */
proto.caos.zitadel.admin.api.v1.SearchMethod = {
  SEARCHMETHOD_EQUALS: 0,
  SEARCHMETHOD_STARTS_WITH: 1,
  SEARCHMETHOD_CONTAINS: 2,
  SEARCHMETHOD_EQUALS_IGNORE_CASE: 3,
  SEARCHMETHOD_STARTS_WITH_IGNORE_CASE: 4,
  SEARCHMETHOD_CONTAINS_IGNORE_CASE: 5,
  SEARCHMETHOD_NOT_EQUALS: 6,
  SEARCHMETHOD_GREATER_THAN: 7,
  SEARCHMETHOD_LESS_THAN: 8,
  SEARCHMETHOD_IS_ONE_OF: 9,
  SEARCHMETHOD_LIST_CONTAINS: 10
};

goog.object.extend(exports, proto.caos.zitadel.admin.api.v1);
