/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('./google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var google_protobuf_struct_pb = require('google-protobuf/google/protobuf/struct_pb.js');
goog.object.extend(proto, google_protobuf_struct_pb);
var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var validate_validate_pb = require('./validate/validate_pb.js');
goog.object.extend(proto, validate_validate_pb);
var protoc$gen$swagger_options_annotations_pb = require('./protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
var authoption_options_pb = require('./authoption/options_pb.js');
goog.object.extend(proto, authoption_options_pb);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.Gender', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MFAState', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MfaOtpResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MfaType', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MultiFactor', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MultiFactors', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MyPermissions', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.OIDCClientAuth', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.OIDCResponseType', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.Org', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.PasswordChange', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.PasswordID', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.PasswordRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.SearchMethod', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.User', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserAddress', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserEmail', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserGrantSearchKey', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserGrantView', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserPhone', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserProfile', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserSessionState', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserSessionView', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserSessionViews', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.UserState', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.VerifyMfaOtp', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest', null, global);
goog.exportSymbol('proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.UserSessionViews.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserSessionViews, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserSessionViews.displayName = 'proto.caos.zitadel.auth.api.v1.UserSessionViews';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserSessionView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserSessionView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserSessionView.displayName = 'proto.caos.zitadel.auth.api.v1.UserSessionView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.User = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.User, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.User.displayName = 'proto.caos.zitadel.auth.api.v1.User';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserProfile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserProfile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserProfile.displayName = 'proto.caos.zitadel.auth.api.v1.UserProfile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.displayName = 'proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserEmail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserEmail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserEmail.displayName = 'proto.caos.zitadel.auth.api.v1.UserEmail';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.displayName = 'proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.displayName = 'proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.displayName = 'proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserPhone = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserPhone, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserPhone.displayName = 'proto.caos.zitadel.auth.api.v1.UserPhone';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.displayName = 'proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.displayName = 'proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserAddress = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserAddress, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserAddress.displayName = 'proto.caos.zitadel.auth.api.v1.UserAddress';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.displayName = 'proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.PasswordID = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.PasswordID, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.PasswordID.displayName = 'proto.caos.zitadel.auth.api.v1.PasswordID';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.PasswordRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.PasswordRequest.displayName = 'proto.caos.zitadel.auth.api.v1.PasswordRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.PasswordChange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.PasswordChange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.PasswordChange.displayName = 'proto.caos.zitadel.auth.api.v1.PasswordChange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.VerifyMfaOtp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.displayName = 'proto.caos.zitadel.auth.api.v1.VerifyMfaOtp';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MultiFactors = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.MultiFactors.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MultiFactors, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MultiFactors.displayName = 'proto.caos.zitadel.auth.api.v1.MultiFactors';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MultiFactor = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MultiFactor, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MultiFactor.displayName = 'proto.caos.zitadel.auth.api.v1.MultiFactor';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MfaOtpResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MfaOtpResponse.displayName = 'proto.caos.zitadel.auth.api.v1.MfaOtpResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.OIDCClientAuth, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.OIDCClientAuth.displayName = 'proto.caos.zitadel.auth.api.v1.OIDCClientAuth';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.displayName = 'proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.displayName = 'proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.displayName = 'proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.UserGrantView = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.UserGrantView.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.UserGrantView, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.UserGrantView.displayName = 'proto.caos.zitadel.auth.api.v1.UserGrantView';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.displayName = 'proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.displayName = 'proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.displayName = 'proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.Org = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.Org, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.Org.displayName = 'proto.caos.zitadel.auth.api.v1.Org';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.caos.zitadel.auth.api.v1.MyPermissions = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.caos.zitadel.auth.api.v1.MyPermissions.repeatedFields_, null);
};
goog.inherits(proto.caos.zitadel.auth.api.v1.MyPermissions, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.caos.zitadel.auth.api.v1.MyPermissions.displayName = 'proto.caos.zitadel.auth.api.v1.MyPermissions';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserSessionViews.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionViews} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.toObject = function(includeInstance, msg) {
  var f, obj = {
    userSessionsList: jspb.Message.toObjectList(msg.getUserSessionsList(),
    proto.caos.zitadel.auth.api.v1.UserSessionView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionViews}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserSessionViews;
  return proto.caos.zitadel.auth.api.v1.UserSessionViews.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionViews} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionViews}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.auth.api.v1.UserSessionView;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.UserSessionView.deserializeBinaryFromReader);
      msg.addUserSessions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserSessionViews.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionViews} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserSessionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.caos.zitadel.auth.api.v1.UserSessionView.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UserSessionView user_sessions = 1;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.UserSessionView>}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.getUserSessionsList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.UserSessionView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.UserSessionView, 1));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.UserSessionView>} value */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.setUserSessionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionView}
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.addUserSessions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.caos.zitadel.auth.api.v1.UserSessionView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.UserSessionViews.prototype.clearUserSessionsList = function() {
  this.setUserSessionsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserSessionView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    agentId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    authState: jspb.Message.getFieldWithDefault(msg, 3, 0),
    userId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionView}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserSessionView;
  return proto.caos.zitadel.auth.api.v1.UserSessionView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionView}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAgentId(value);
      break;
    case 3:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.UserSessionState} */ (reader.readEnum());
      msg.setAuthState(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserSessionView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserSessionView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getAgentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthState();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      6,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string agent_id = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getAgentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setAgentId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional UserSessionState auth_state = 3;
 * @return {!proto.caos.zitadel.auth.api.v1.UserSessionState}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getAuthState = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.UserSessionState} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.UserSessionState} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setAuthState = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string user_id = 4;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string user_name = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional uint64 sequence = 6;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserSessionView.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.User.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.User} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.User.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    activationDate: (f = msg.getActivationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastLogin: (f = msg.getLastLogin()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    passwordChanged: (f = msg.getPasswordChanged()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    userName: jspb.Message.getFieldWithDefault(msg, 8, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 10, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 11, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 12, ""),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 13, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 14, 0),
    email: jspb.Message.getFieldWithDefault(msg, 15, ""),
    isEmailVerified: jspb.Message.getFieldWithDefault(msg, 16, false),
    phone: jspb.Message.getFieldWithDefault(msg, 17, ""),
    isPhoneVerified: jspb.Message.getFieldWithDefault(msg, 18, false),
    country: jspb.Message.getFieldWithDefault(msg, 19, ""),
    locality: jspb.Message.getFieldWithDefault(msg, 20, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 21, ""),
    region: jspb.Message.getFieldWithDefault(msg, 22, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 23, ""),
    passwordChangeRequired: jspb.Message.getFieldWithDefault(msg, 24, false),
    sequence: jspb.Message.getFieldWithDefault(msg, 25, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.User}
 */
proto.caos.zitadel.auth.api.v1.User.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.User;
  return proto.caos.zitadel.auth.api.v1.User.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.User} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.User}
 */
proto.caos.zitadel.auth.api.v1.User.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.UserState} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setActivationDate(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastLogin(value);
      break;
    case 7:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setPasswordChanged(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguage(value);
      break;
    case 14:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 16:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsEmailVerified(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPhoneVerified(value);
      break;
    case 19:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    case 24:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPasswordChangeRequired(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.User.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.User} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.User.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getActivationDate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastLogin();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getPasswordChanged();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getPreferredLanguage();
  if (f.length > 0) {
    writer.writeString(
      13,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      14,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getIsEmailVerified();
  if (f) {
    writer.writeBool(
      16,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
  f = message.getIsPhoneVerified();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      19,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getPasswordChangeRequired();
  if (f) {
    writer.writeBool(
      24,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      25,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional UserState state = 2;
 * @return {!proto.caos.zitadel.auth.api.v1.UserState}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getState = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.UserState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.UserState} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.User.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional google.protobuf.Timestamp activation_date = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getActivationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setActivationDate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.User.prototype.clearActivationDate = function() {
  this.setActivationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.hasActivationDate = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.User.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp last_login = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getLastLogin = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setLastLogin = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.User.prototype.clearLastLogin = function() {
  this.setLastLogin(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.hasLastLogin = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional google.protobuf.Timestamp password_changed = 7;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getPasswordChanged = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 7));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setPasswordChanged = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.User.prototype.clearPasswordChanged = function() {
  this.setPasswordChanged(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.hasPasswordChanged = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string user_name = 8;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string first_name = 9;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string last_name = 10;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * optional string nick_name = 11;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional string display_name = 12;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional string preferred_language = 13;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getPreferredLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setPreferredLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 13, value);
};


/**
 * optional Gender gender = 14;
 * @return {!proto.caos.zitadel.auth.api.v1.Gender}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getGender = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.Gender} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 14, value);
};


/**
 * optional string email = 15;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional bool is_email_verified = 16;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getIsEmailVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 16, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setIsEmailVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 16, value);
};


/**
 * optional string phone = 17;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 17, value);
};


/**
 * optional bool is_phone_verified = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getIsPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setIsPhoneVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};


/**
 * optional string country = 19;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 19, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 19, value);
};


/**
 * optional string locality = 20;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional string postal_code = 21;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string region = 22;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string street_address = 23;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setStreetAddress = function(value) {
  jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * optional bool password_change_required = 24;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getPasswordChangeRequired = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 24, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setPasswordChangeRequired = function(value) {
  jspb.Message.setProto3BooleanField(this, 24, value);
};


/**
 * optional uint64 sequence = 25;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.User.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.User.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 25, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserProfile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserProfile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserProfile.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    userName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    firstName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 5, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 7, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 8, 0),
    sequence: jspb.Message.getFieldWithDefault(msg, 9, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserProfile}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserProfile;
  return proto.caos.zitadel.auth.api.v1.UserProfile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserProfile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserProfile}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguage(value);
      break;
    case 8:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 10:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 11:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserProfile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserProfile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserProfile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPreferredLanguage();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string user_name = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setUserName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string first_name = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string last_name = 4;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string nick_name = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string display_name = 6;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string preferred_language = 7;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getPreferredLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setPreferredLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional Gender gender = 8;
 * @return {!proto.caos.zitadel.auth.api.v1.Gender}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getGender = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.Gender} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional uint64 sequence = 9;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 10;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 10));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 11;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 11));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserProfile.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 11) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    nickName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    displayName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    preferredLanguage: jspb.Message.getFieldWithDefault(msg, 5, ""),
    gender: jspb.Message.getFieldWithDefault(msg, 6, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest;
  return proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDisplayName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreferredLanguage(value);
      break;
    case 6:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (reader.readEnum());
      msg.setGender(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNickName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDisplayName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPreferredLanguage();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getGender();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setFirstName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setLastName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string nick_name = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getNickName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setNickName = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string display_name = 4;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getDisplayName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setDisplayName = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string preferred_language = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getPreferredLanguage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setPreferredLanguage = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Gender gender = 6;
 * @return {!proto.caos.zitadel.auth.api.v1.Gender}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.getGender = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.Gender} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.Gender} value */
proto.caos.zitadel.auth.api.v1.UpdateUserProfileRequest.prototype.setGender = function(value) {
  jspb.Message.setProto3EnumField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserEmail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserEmail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserEmail.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isemailverified: jspb.Message.getFieldWithDefault(msg, 3, false),
    sequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserEmail}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserEmail;
  return proto.caos.zitadel.auth.api.v1.UserEmail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserEmail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserEmail}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsemailverified(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserEmail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserEmail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserEmail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsemailverified();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool isEmailVerified = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getIsemailverified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setIsemailverified = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint64 sequence = 4;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserEmail.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest;
  return proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.VerifyMyUserEmailRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    code: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest;
  return proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string code = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.VerifyUserEmailRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest;
  return proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEmail();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string email = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserEmailRequest.prototype.setEmail = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserPhone.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserPhone} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserPhone.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phone: jspb.Message.getFieldWithDefault(msg, 2, ""),
    isPhoneVerified: jspb.Message.getFieldWithDefault(msg, 3, false),
    sequence: jspb.Message.getFieldWithDefault(msg, 4, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserPhone}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserPhone;
  return proto.caos.zitadel.auth.api.v1.UserPhone.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserPhone} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserPhone}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsPhoneVerified(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 6:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserPhone.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserPhone} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserPhone.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getIsPhoneVerified();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string phone = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional bool is_phone_verified = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getIsPhoneVerified = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setIsPhoneVerified = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional uint64 sequence = 4;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 6;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 6));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserPhone.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    phone: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest;
  return proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPhone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPhone();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string phone = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.prototype.getPhone = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserPhoneRequest.prototype.setPhone = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest;
  return proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.VerifyUserPhoneRequest.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserAddress.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserAddress} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserAddress.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    country: jspb.Message.getFieldWithDefault(msg, 2, ""),
    locality: jspb.Message.getFieldWithDefault(msg, 3, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    region: jspb.Message.getFieldWithDefault(msg, 5, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 6, ""),
    sequence: jspb.Message.getFieldWithDefault(msg, 7, 0),
    creationDate: (f = msg.getCreationDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    changeDate: (f = msg.getChangeDate()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserAddress}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserAddress;
  return proto.caos.zitadel.auth.api.v1.UserAddress.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserAddress} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserAddress}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSequence(value);
      break;
    case 8:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreationDate(value);
      break;
    case 9:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setChangeDate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserAddress.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserAddress} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserAddress.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getSequence();
  if (f !== 0) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = message.getCreationDate();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getChangeDate();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string country = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string locality = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string postal_code = 4;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string region = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string street_address = 6;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setStreetAddress = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional uint64 sequence = 7;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getSequence = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setSequence = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional google.protobuf.Timestamp creation_date = 8;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getCreationDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 8));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setCreationDate = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.clearCreationDate = function() {
  this.setCreationDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.hasCreationDate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional google.protobuf.Timestamp change_date = 9;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.getChangeDate = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 9));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.setChangeDate = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.clearChangeDate = function() {
  this.setChangeDate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserAddress.prototype.hasChangeDate = function() {
  return jspb.Message.getField(this, 9) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    country: jspb.Message.getFieldWithDefault(msg, 1, ""),
    locality: jspb.Message.getFieldWithDefault(msg, 2, ""),
    postalCode: jspb.Message.getFieldWithDefault(msg, 3, ""),
    region: jspb.Message.getFieldWithDefault(msg, 4, ""),
    streetAddress: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest;
  return proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocality(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPostalCode(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStreetAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLocality();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPostalCode();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRegion();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStreetAddress();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string country = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.setCountry = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string locality = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.getLocality = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.setLocality = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string postal_code = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.getPostalCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.setPostalCode = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string region = 4;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.getRegion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.setRegion = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string street_address = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.getStreetAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UpdateUserAddressRequest.prototype.setStreetAddress = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.PasswordID.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.PasswordID.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordID} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordID.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordID}
 */
proto.caos.zitadel.auth.api.v1.PasswordID.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.PasswordID;
  return proto.caos.zitadel.auth.api.v1.PasswordID.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordID} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordID}
 */
proto.caos.zitadel.auth.api.v1.PasswordID.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.PasswordID.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.PasswordID.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordID} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordID.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.PasswordID.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.PasswordID.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.PasswordRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    password: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordRequest}
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.PasswordRequest;
  return proto.caos.zitadel.auth.api.v1.PasswordRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordRequest}
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.PasswordRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string password = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.PasswordRequest.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.PasswordRequest.prototype.setPassword = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.PasswordChange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordChange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.toObject = function(includeInstance, msg) {
  var f, obj = {
    oldPassword: jspb.Message.getFieldWithDefault(msg, 1, ""),
    newPassword: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordChange}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.PasswordChange;
  return proto.caos.zitadel.auth.api.v1.PasswordChange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordChange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.PasswordChange}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldPassword(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.PasswordChange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.PasswordChange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOldPassword();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getNewPassword();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string old_password = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.getOldPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.setOldPassword = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string new_password = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.getNewPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.PasswordChange.prototype.setNewPassword = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMfaOtp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.toObject = function(includeInstance, msg) {
  var f, obj = {
    code: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyMfaOtp}
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.VerifyMfaOtp;
  return proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMfaOtp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.VerifyMfaOtp}
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCode(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.VerifyMfaOtp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCode();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string code = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.prototype.getCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.VerifyMfaOtp.prototype.setCode = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MultiFactors.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactors} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.toObject = function(includeInstance, msg) {
  var f, obj = {
    mfasList: jspb.Message.toObjectList(msg.getMfasList(),
    proto.caos.zitadel.auth.api.v1.MultiFactor.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MultiFactors}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MultiFactors;
  return proto.caos.zitadel.auth.api.v1.MultiFactors.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactors} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MultiFactors}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.caos.zitadel.auth.api.v1.MultiFactor;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.MultiFactor.deserializeBinaryFromReader);
      msg.addMfas(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MultiFactors.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactors} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMfasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.caos.zitadel.auth.api.v1.MultiFactor.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MultiFactor mfas = 1;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.MultiFactor>}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.getMfasList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.MultiFactor>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.MultiFactor, 1));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.MultiFactor>} value */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.setMfasList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactor=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.MultiFactor}
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.addMfas = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.caos.zitadel.auth.api.v1.MultiFactor, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.MultiFactors.prototype.clearMfasList = function() {
  this.setMfasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MultiFactor.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactor} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    state: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MultiFactor}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MultiFactor;
  return proto.caos.zitadel.auth.api.v1.MultiFactor.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactor} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MultiFactor}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.MfaType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.MFAState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MultiFactor.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MultiFactor} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional MfaType type = 1;
 * @return {!proto.caos.zitadel.auth.api.v1.MfaType}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.getType = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.MfaType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.MfaType} value */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional MFAState state = 2;
 * @return {!proto.caos.zitadel.auth.api.v1.MFAState}
 */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.getState = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.MFAState} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.MFAState} value */
proto.caos.zitadel.auth.api.v1.MultiFactor.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MfaOtpResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MfaOtpResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    userId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    url: jspb.Message.getFieldWithDefault(msg, 2, ""),
    secret: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MfaOtpResponse}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MfaOtpResponse;
  return proto.caos.zitadel.auth.api.v1.MfaOtpResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MfaOtpResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MfaOtpResponse}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSecret(value);
      break;
    case 4:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.MFAState} */ (reader.readEnum());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MfaOtpResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MfaOtpResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSecret();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string user_id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.getUserId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.setUserId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string url = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.setUrl = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string secret = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.getSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.setSecret = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional MFAState state = 4;
 * @return {!proto.caos.zitadel.auth.api.v1.MFAState}
 */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.getState = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.MFAState} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.MFAState} value */
proto.caos.zitadel.auth.api.v1.MfaOtpResponse.prototype.setState = function(value) {
  jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.OIDCClientAuth.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.OIDCClientAuth} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.toObject = function(includeInstance, msg) {
  var f, obj = {
    clientId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    clientSecret: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.OIDCClientAuth}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.OIDCClientAuth;
  return proto.caos.zitadel.auth.api.v1.OIDCClientAuth.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.OIDCClientAuth} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.OIDCClientAuth}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientSecret(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.OIDCClientAuth.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.OIDCClientAuth} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getClientId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getClientSecret();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string client_id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.getClientId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.setClientId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string client_secret = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.getClientSecret = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.OIDCClientAuth.prototype.setClientSecret = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortingColumn: jspb.Message.getFieldWithDefault(msg, 3, 0),
    asc: jspb.Message.getFieldWithDefault(msg, 4, false),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest;
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} */ (reader.readEnum());
      msg.setSortingColumn(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsc(value);
      break;
    case 5:
      var value = new proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getSortingColumn();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getAsc();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional UserGrantSearchKey sorting_column = 3;
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.getSortingColumn = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.setSortingColumn = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional bool asc = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.getAsc = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.setAsc = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated UserGrantSearchQuery queries = 5;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery>}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery, 5));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery>} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.setQueriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchRequest.prototype.clearQueriesList = function() {
  this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery;
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} */ (reader.readEnum());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.SearchMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional UserGrantSearchKey key = 1;
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.getKey = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchKey} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.setKey = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SearchMethod method = 2;
 * @return {!proto.caos.zitadel.auth.api.v1.SearchMethod}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.getMethod = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.SearchMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.SearchMethod} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.setMethod = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchQuery.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalResult: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.caos.zitadel.auth.api.v1.UserGrantView.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse;
  return proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResult(value);
      break;
    case 4:
      var value = new proto.caos.zitadel.auth.api.v1.UserGrantView;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.UserGrantView.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalResult();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.caos.zitadel.auth.api.v1.UserGrantView.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_result = 3;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.getTotalResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.setTotalResult = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated UserGrantView result = 4;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.UserGrantView>}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.UserGrantView>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.UserGrantView, 4));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.UserGrantView>} value */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantView=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantView}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.caos.zitadel.auth.api.v1.UserGrantView, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.UserGrantView.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantView} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.toObject = function(includeInstance, msg) {
  var f, obj = {
    orgid: jspb.Message.getFieldWithDefault(msg, 1, ""),
    projectid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    userid: jspb.Message.getFieldWithDefault(msg, 3, ""),
    rolesList: jspb.Message.getRepeatedField(msg, 4),
    orgname: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantView}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.UserGrantView;
  return proto.caos.zitadel.auth.api.v1.UserGrantView.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantView} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.UserGrantView}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addRoles(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrgname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.UserGrantView.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.UserGrantView} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOrgid();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getProjectid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getUserid();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRolesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getOrgname();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string OrgId = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.getOrgid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.setOrgid = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ProjectId = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.getProjectid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.setProjectid = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string UserId = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.getUserid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.setUserid = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string Roles = 4;
 * @return {!Array<string>}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.getRolesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.setRolesList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.addRoles = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.clearRolesList = function() {
  this.setRolesList([]);
};


/**
 * optional string OrgName = 5;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.getOrgname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.UserGrantView.prototype.setOrgname = function(value) {
  jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    asc: jspb.Message.getFieldWithDefault(msg, 4, false),
    queriesList: jspb.Message.toObjectList(msg.getQueriesList(),
    proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest;
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setAsc(value);
      break;
    case 5:
      var value = new proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.deserializeBinaryFromReader);
      msg.addQueries(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getAsc();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
  f = message.getQueriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool asc = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.getAsc = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.setAsc = function(value) {
  jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * repeated MyProjectOrgSearchQuery queries = 5;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery>}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.getQueriesList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery, 5));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery>} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.setQueriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.addQueries = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchRequest.prototype.clearQueriesList = function() {
  this.setQueriesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, 0),
    method: jspb.Message.getFieldWithDefault(msg, 2, 0),
    value: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery;
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey} */ (reader.readEnum());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {!proto.caos.zitadel.auth.api.v1.SearchMethod} */ (reader.readEnum());
      msg.setMethod(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getMethod();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional MyProjectOrgSearchKey key = 1;
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.getKey = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.setKey = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional SearchMethod method = 2;
 * @return {!proto.caos.zitadel.auth.api.v1.SearchMethod}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.getMethod = function() {
  return /** @type {!proto.caos.zitadel.auth.api.v1.SearchMethod} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.caos.zitadel.auth.api.v1.SearchMethod} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.setMethod = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional string value = 3;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchQuery.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    offset: jspb.Message.getFieldWithDefault(msg, 1, 0),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalResult: jspb.Message.getFieldWithDefault(msg, 3, 0),
    resultList: jspb.Message.toObjectList(msg.getResultList(),
    proto.caos.zitadel.auth.api.v1.Org.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse;
  return proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setOffset(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalResult(value);
      break;
    case 4:
      var value = new proto.caos.zitadel.auth.api.v1.Org;
      reader.readMessage(value,proto.caos.zitadel.auth.api.v1.Org.deserializeBinaryFromReader);
      msg.addResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOffset();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getTotalResult();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getResultList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.caos.zitadel.auth.api.v1.Org.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 offset = 1;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 limit = 2;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.setLimit = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 total_result = 3;
 * @return {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.getTotalResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.setTotalResult = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Org result = 4;
 * @return {!Array<!proto.caos.zitadel.auth.api.v1.Org>}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.getResultList = function() {
  return /** @type{!Array<!proto.caos.zitadel.auth.api.v1.Org>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.caos.zitadel.auth.api.v1.Org, 4));
};


/** @param {!Array<!proto.caos.zitadel.auth.api.v1.Org>} value */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.setResultList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.caos.zitadel.auth.api.v1.Org=} opt_value
 * @param {number=} opt_index
 * @return {!proto.caos.zitadel.auth.api.v1.Org}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.addResult = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.caos.zitadel.auth.api.v1.Org, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchResponse.prototype.clearResultList = function() {
  this.setResultList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.Org.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.Org.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.Org} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.Org.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.Org}
 */
proto.caos.zitadel.auth.api.v1.Org.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.Org;
  return proto.caos.zitadel.auth.api.v1.Org.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.Org} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.Org}
 */
proto.caos.zitadel.auth.api.v1.Org.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.Org.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.Org.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.Org} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.Org.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.Org.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.Org.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.caos.zitadel.auth.api.v1.Org.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.caos.zitadel.auth.api.v1.Org.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.toObject = function(opt_includeInstance) {
  return proto.caos.zitadel.auth.api.v1.MyPermissions.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.caos.zitadel.auth.api.v1.MyPermissions} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.toObject = function(includeInstance, msg) {
  var f, obj = {
    permissionsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.caos.zitadel.auth.api.v1.MyPermissions}
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.caos.zitadel.auth.api.v1.MyPermissions;
  return proto.caos.zitadel.auth.api.v1.MyPermissions.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.caos.zitadel.auth.api.v1.MyPermissions} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.caos.zitadel.auth.api.v1.MyPermissions}
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addPermissions(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.caos.zitadel.auth.api.v1.MyPermissions.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.caos.zitadel.auth.api.v1.MyPermissions} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPermissionsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string permissions = 1;
 * @return {!Array<string>}
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.getPermissionsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.setPermissionsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.addPermissions = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.caos.zitadel.auth.api.v1.MyPermissions.prototype.clearPermissionsList = function() {
  this.setPermissionsList([]);
};


/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.UserSessionState = {
  USERSESSIONSTATE_UNSPECIFIED: 0,
  USERSESSIONSTATE_ACTIVE: 1,
  USERSESSIONSTATE_TERMINATED: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.OIDCResponseType = {
  OIDCRESPONSETYPE_CODE: 0,
  OIDCRESPONSETYPE_ID_TOKEN: 1,
  OIDCRESPONSETYPE_ID_TOKEN_TOKEN: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.UserState = {
  USERSTATE_UNSPECIEFIED: 0,
  USERSTATE_ACTIVE: 1,
  USERSTATE_INACTIVE: 2,
  USERSTATE_DELETED: 3,
  USERSTATE_LOCKED: 4,
  USERSTATE_SUSPEND: 5,
  USERSTATE_INITIAL: 6
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.Gender = {
  GENDER_UNSPECIFIED: 0,
  GENDER_FEMALE: 1,
  GENDER_MALE: 2,
  GENDER_DIVERSE: 3
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.MfaType = {
  MFATYPE_UNSPECIFIED: 0,
  MFATYPE_SMS: 1,
  MFATYPE_OTP: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.MFAState = {
  MFASTATE_UNSPECIFIED: 0,
  MFASTATE_NOT_READY: 1,
  MFASTATE_READY: 2,
  MFASTATE_REMOVED: 3
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.UserGrantSearchKey = {
  USERGRANTSEARCHKEY_UNKNOWN: 0,
  USERGRANTSEARCHKEY_ORG_ID: 1,
  USERGRANTSEARCHKEY_PROJECT_ID: 2
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.MyProjectOrgSearchKey = {
  MYPROJECTORGSEARCHKEY_UNSPECIFIED: 0,
  MYPROJECTORGSEARCHKEY_ORG_NAME: 1
};

/**
 * @enum {number}
 */
proto.caos.zitadel.auth.api.v1.SearchMethod = {
  SEARCHMETHOD_EQUALS: 0,
  SEARCHMETHOD_STARTS_WITH: 1,
  SEARCHMETHOD_CONTAINS: 2,
  SEARCHMETHOD_EQUALS_IGNORE_CASE: 3,
  SEARCHMETHOD_STARTS_WITH_IGNORE_CASE: 4,
  SEARCHMETHOD_CONTAINS_IGNORE_CASE: 5
};

goog.object.extend(exports, proto.caos.zitadel.auth.api.v1);
