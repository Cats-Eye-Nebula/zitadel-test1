admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9091 }

static_resources:
  listeners:
  - name: listener_0
    address:
      socket_address: { address: 0.0.0.0, port_value: 9090 }
    filter_chains:
    - filters:
      - name: envoy.http_connection_manager
        config:
          codec_type: auto
          stat_prefix: ingress_http
          route_config:
            name: local_route
            virtual_hosts:
            - name: local_service
              domains: ["*"]
              routes:
              - match: { prefix: "/auth/" }
                route:
                  prefix_rewrite: "/"
                  cluster: auth_service
                  max_grpc_timeout: 0s
              - match: { prefix: "/management/" }
                route:
                  prefix_rewrite: "/"
                  cluster: mgmt_service
                  max_grpc_timeout: 0s
              cors:
                allow_origin_string_match:
                  exact: 'http://localhost:4200'
                allow_methods: GET, PUT, DELETE, POST, OPTIONS
                allow_headers: keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-tmp-zitadel-userid,x-tmp-zitadel-login,x-tmp-zitadel-orgid,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout
                max_age: "1728000"
                expose_headers: x-tmp-zitadel-userid,x-tmp-zitadel-login,x-tmp-zitadel-orgid,grpc-status,grpc-message
          http_filters:
          - name: envoy.grpc_web
          - name: envoy.cors
          - name: envoy.router
  clusters:
  - name: auth_service
    connect_timeout: 15s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    hosts: [{ socket_address: { address: host.docker.internal, port_value: 60050 }}]
  - name: mgmt_service
    connect_timeout: 15s
    type: logical_dns
    http2_protocol_options: {}
    lb_policy: round_robin
    hosts: [{ socket_address: { address: host.docker.internal, port_value: 60020 }}]
