name: core

on:
  workflow_call:
    inputs:
      go_version:
        required: true
        type: string
      buf_version:
        required: true
        type: string

jobs:

  tidy:
    name: tidy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go_version }}
    - uses: bufbuild/buf-setup-action@v1
      with:
        version: ${{ inputs.buf_version }}
        github_token: ${{ github.token }}
    - run: make generate
    - run: make tidy

  test:
    name: test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go_version }}
    - uses: bufbuild/buf-setup-action@v1
      with:
        version: ${{ inputs.buf_version }}
        github_token: ${{ github.token }}
    - run: make generate
    - run: make test

  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: '0'
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go_version }}
    - uses: bufbuild/buf-setup-action@v1
      with:
        version: ${{ inputs.buf_version }}
        github_token: ${{ github.token }}
    - name: linting
      uses: golangci/golangci-lint-action@v3
      with:
        version: v1.50.1
        only-new-issues: true
        skip-pkg-cache: true
        args: -v

  build:
    name: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin]
        goarch: [amd64, arm64]
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ inputs.go_version }}
    - uses: bufbuild/buf-setup-action@v1
      with:
        version: ${{ inputs.buf_version }}
        github_token: ${{ github.token }}
    - run: make generate
    - uses: actions/cache/restore@v3
      with:
        path: internal/api/ui/console/static
        key: console-dist-${{ hashFiles('console/**') }}
    - run: go build -o zitadel-core-${{ matrix.goos }}-${{ matrix.goarch }} -ldflags="-s -w"
    - uses: actions/upload-artifact@v3
      with:
        name: zitadel-core-${{ matrix.goos }}-${{ matrix.goarch }}
        path: zitadel-core-${{ matrix.goos }}-${{ matrix.goarch }}
