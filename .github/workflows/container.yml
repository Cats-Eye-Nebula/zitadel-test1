name: container

on:
  push:
    branches:
      - 'quickfixci'

jobs:
  console-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          cache-from: type=registry,ref=ghcr.io/zitadel/buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/zitadel/buildcache
          target: console-lint
          tags: zitadel/test:test

  console-build:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          cache-from: type=registry,ref=ghcr.io/zitadel/buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/zitadel/buildcache
          target: console-build
          tags: zitadel/test:test

  core-test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          cache-from: type=registry,ref=ghcr.io/zitadel/buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/zitadel/buildcache
          target: core-test
          tags: zitadel/test:test

  core-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          cache-from: type=registry,ref=ghcr.io/zitadel/buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/zitadel/buildcache
          target: core-lint
          tags: zitadel/test:test

  core-build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: false
          platforms: ${{ matrix.os }}/${{ matrix.arch }}
          cache-from: type=registry,ref=ghcr.io/zitadel/buildcache
          cache-to: type=registry,mode=max,ref=ghcr.io/zitadel/buildcache
          target: core-export
          tags: zitadel/test:test
          outputs: .
      - uses: actions/upload-artifact@v3
        with:
          name: zitadel-${{ matrix.os }}-${{ matrix.arch }}
          path: zitadel