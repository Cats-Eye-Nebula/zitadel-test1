name: Build

on:
  workflow_call:
    inputs:
      node_version:
        required: true
        type: string
      go_version:
        required: true
        type: string
      buf_version:
        required: true
        type: string

jobs:

  #api:

  console:
    name: console
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
        cache: 'yarn'
        cache-dependency-path: console/yarn.lock
    - run: (cd console ; yarn install --frozen-lockfile)
    - run: (cd console ; yarn generate)
    - run: (cd console ; yarn build)
    - uses: actions/cache/save@v3
      if: always()
      with:
        path: console/dist/console/
        key: console-dist-${{ hashFiles('console/src/**', '!console/src/app/proto/**', 'console/yarn.lock') }}

  generate-core:
    runs-on: ubuntu-latest
    outputs:
      core_hash: ${{ steps.generate-hash.outputs.CORE_HASH }}
    steps:
      - uses: actions/checkout@v3
      - id: generate-hash
        run: echo "CORE_HASH=${{hashFiles('build/**', 'cmd/**', 'internal/**', 'pkg/**', 'proto/**', '!*.pb.*')}}" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ inputs.go_version }}
          cache: true
      - uses: bufbuild/buf-setup-action@v1
        with:
          version: ${{ inputs.buf_version }}
          github_token: ${{ github.token }}
      - run: make generate
      - uses: actions/cache/save@v3
        with:
          path: .
          key: core-${{ steps.generate-hash.outputs.CORE_HASH }}
