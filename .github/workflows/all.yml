name: All in one build

on:
  pull_request:

permissions:
  contents: write
  packages: write

env:
  go_version: '1.20'
  cache_from_params: |
    "type=registry"
    "ref=ghcr.io/zitadel/build-cache"
  cache_to_params: |
    "type=registry"
    "ref=ghcr.io/zitadel/build-cache"
    "mode=max"
  tag_name: ghcr.io/zitadel/test:${{ github.sha }}
  buildx_driver_opts: |
      image=moby/buildkit:v0.11.2

jobs:

  core:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: ${{env.buildx_driver_opts}}
      - 
        name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/workflow.Dockerfile
          target: core-build
          push: false
          cache-to: ${{env.cache_to_params}}
          cache-from: ${{env.cache_from_params}}
          github-token: ${{ github.token }}
  
  console:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: ${{env.buildx_driver_opts}}
      - 
        name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/workflow.Dockerfile
          target: console
          push: false
          cache-to:  ${{env.cache_to_params}}
          cache-from: ${{env.cache_from_params}}
          github-token: ${{ github.token }}
          tags: ${{env.tag_name}}
          
  
  compile:
    runs-on: ubuntu-latest
    needs: [console, core]
    strategy:
      matrix:
        goos: ['linux', 'darwin', 'windows']
        goarch: ['amd64', 'arm64']
    steps:
    -
      name: Checkout
      uses: actions/checkout@v3
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    -
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      with:
        driver-opts: ${{env.buildx_driver_opts}}
    - 
      name: Login to Docker registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    -
      name: Build
      uses: docker/build-push-action@v4
      with:
        build-args: |
          "GOOS=${{matrix.goos}}"
          "GOARCH=${{matrix.goarch}}"
        context: .
        file: ./build/workflow.Dockerfile
        target: compile
        push: false
        cache-to: ${{env.cache_to_params}}
        cache-from: ${{env.cache_from_params}}
        github-token: ${{ github.token }}
        tags: ${{env.tag_name}}

  core-unit-test:
    runs-on: ubuntu-latest
    needs: [core]
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: ${{env.buildx_driver_opts}}
      - 
        name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/workflow.Dockerfile
          target: test-core-unit
          push: false
          cache-to:  ${{env.cache_to_params}}
          cache-from: ${{env.cache_from_params}}
          github-token: ${{ github.token }}
          tags: ${{env.tag_name}}

  core-integration-test:
    runs-on: ubuntu-latest
    needs: [core]
    strategy:
      matrix:
        database: [cockroach, postgres]
    env:
      DB_FLAVOR: ${{ matrix.database }}
      ZITADEL_MASTERKEY: MasterkeyNeedsToHave32Characters
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          driver-opts: ${{env.buildx_driver_opts}}
      - 
        name: Login to Docker registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./build/workflow.Dockerfile
          target: test-core-integration
          push: false
          cache-to:  ${{env.cache_to_params}}
          cache-from: ${{env.cache_from_params}}
          github-token: ${{ github.token }}
          tags: ${{env.tag_name}}


  # e2e:
  #   uses: ./.github/workflows/e2e.yml
  #   needs: [container]
  #   with:
  #     tag_name: ghcr.io/zitadel/test:${{ github.sha }}


  #release