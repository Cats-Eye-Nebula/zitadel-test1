name: All in one build

on:
  pull_request:

permissions:
  contents: write
  packages: write

env:
  go_version: '1.20'
  node_version: '16'

jobs:

  core:
    uses: ./.github/workflows/core.yml
    with:
      node_version: '18'
      buf_version: 'latest'
      go_version: '1.20'
    
  console:
    uses: ./.github/workflows/console.yml
    with:
      node_version: '18'
      buf_version: 'latest'

  compile:
    needs: [core, console]
    uses: ./.github/workflows/compile.yml
    with:
      go_version: '1.20'
      core_cache_key: ${{ needs.core.outputs.cache_key }}
      console_cache_key: ${{ needs.console.outputs.cache_key }}
      core_cache_path: ${{ needs.core.outputs.cache_path }}
      console_cache_path: ${{ needs.console.outputs.cache_path }}

  core-unit-test:
    needs: core
    uses: ./.github/workflows/core-unit-test.yml
    with:
      go_version: '1.20'
      core_cache_key: ${{ needs.core.outputs.cache_key }}
      core_cache_path: ${{ needs.core.outputs.cache_path }}
      

  # core-unit-test:
  #   runs-on: ubuntu-latest
  #   needs: [core]
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v3
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         driver-opts: ${{env.buildx_driver_opts}}
  #     - 
  #       name: Login to Docker registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     -
  #       name: Unit tests
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./build/workflow.Dockerfile
  #         target: coverage-core-unit
  #         push: false
  #         cache-to:  ${{env.cache_to_params}}
  #         cache-from: ${{env.cache_from_params}}
  #         github-token: ${{ github.token }}
  #         tags: ${{env.tag_name}}
  #         outputs: type=local,dest=/tmp/zitadel
  #     - name: Publish coverage
  #       uses: codecov/codecov-action@v3.1.4
  #       with:
  #         file: /tmp/zitadel/coverage/profile.cov
  #         name: core-unit-tests
  #         flags: core-unit-tests

  # core-integration-test:
  #   runs-on: ubuntu-latest
  #   needs: [core]
  #   strategy:
  #     matrix:
  #       database: [cockroach, postgres]
  #   env:
  #     DB_FLAVOR: ${{ matrix.database }}
  #     ZITADEL_MASTERKEY: MasterkeyNeedsToHave32Characters
  #   steps:
  #     -
  #       name: Checkout
  #       uses: actions/checkout@v3
  #       with:
  #         fetch-depth: '0'
  #     -
  #       name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     -
  #       name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v2
  #       with:
  #         driver-opts: ${{env.buildx_driver_opts}}
  #     - 
  #       name: Login to Docker registry
  #       uses: docker/login-action@v2
  #       with:
  #         registry: ghcr.io
  #         username: ${{ github.actor }}
  #         password: ${{ secrets.GITHUB_TOKEN }}
  #     -
  #       name: Integration tests
  #       uses: docker/build-push-action@v4
  #       with:
  #         context: .
  #         file: ./build/workflow.Dockerfile
  #         target: coverage-core-integration
  #         push: false
  #         cache-to:  ${{env.cache_to_params}}
  #         cache-from: ${{env.cache_from_params}}
  #         github-token: ${{ github.token }}
  #         tags: ${{env.tag_name}}
  #         outputs: type=local,dest=/tmp/zitadel
  #     - name: Publish coverage
  #       uses: codecov/codecov-action@v3.1.4
  #       with:
  #         file: /tmp/zitadel/coverage/profile.cov
  #         name: core-integration-tests-${{ matrix.database }}
  #         flags: core-integration-tests-${{ matrix.database }}

  # lint:
  #   uses: ./.github/workflows/lint.yml
  #   with:
  #     buildx_driver_opts: |
  #       image=moby/buildkit:v0.11.6
  #     cache_from_params: |
  #       type=registry,ref=ghcr.io/zitadel/build-cache
  #       type=registry,ref=ghcr.io/zitadel/build-cache:console
  #       type=registry,ref=ghcr.io/zitadel/build-cache:core
  #       type=registry,ref=ghcr.io/zitadel/build-cache:latest
  #     cache_to_params: type=registry,ref=ghcr.io/zitadel/build-cache,mode=max,ignore-error=true
  #     tag_name: ghcr.io/zitadel/test:${{ github.sha }}

  # e2e:
  #   uses: ./.github/workflows/e2e.yml
  #   needs: [container]
  #   with:
  #     tag_name: ghcr.io/zitadel/test:${{ github.sha }}


  #release