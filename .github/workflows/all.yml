name: All in one build

on:
  pull_request:

permissions:
  contents: write
  packages: write

env:
  go_version: '1.20'

jobs:
  
  generate-core:
    runs-on: ubuntu-latest
    outputs:
      hash: ${{ steps.generate-hash.outputs.CORE_HASH }}
    steps:
      - uses: actions/checkout@v3
      - id: generate-hash
        run: echo "CORE_HASH=${{hashFiles('build/**', 'cmd/**', 'internal/**', 'pkg/**', 'proto/**', '!*.pb.*')}}" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go_version }}
          cache: true
      - uses: bufbuild/buf-setup-action@v1
        with:
          version: v1.15.1
          github_token: ${{ github.token }}
      - run: make generate
      - uses: actions/cache/save@v3
        with:
          path: .
          key: core-${{ steps.generate-hash.outputs.hash }}

  lint:
    uses: ./.github/workflows/lint.yml
    with:
      node_version: 18
      go_version: '1.20'
      buf_version: v1.15.1
      golangci_lint_version: v1.52.2

  test:
    uses: ./.github/workflows/test.yml
    needs: [generate-core]
    with:
      node_version: 18
      go_version: '1.20'
      buf_version: v1.15.1
      core_hash: core-${{ needs.generate-core.outputs.hash }}

  build:
    uses: ./.github/workflows/build.yml
    needs: [generate-core]
    with:
      node_version: 18
      go_version: '1.20'
      buf_version: v1.15.1
      core_hash: core-${{ needs.generate-core.outputs.hash }}

  container:
    uses: ./.github/workflows/container.yml
    needs: [lint, test, build]
    with:
      tag_name: ghcr.io/zitadel/test:${{ github.sha }}

  e2e:
    uses: ./.github/workflows/e2e.yml
    needs: [container]
    with:
      tag_name: ghcr.io/zitadel/test:${{ github.sha }}


  #release