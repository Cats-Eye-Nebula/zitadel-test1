name: ZITADEL Release
on:
  push:
    branches:
      - main
    tags-ignore:
      - '**'
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  ARTIFACTS_FOLDER: './artifacts'

jobs:
  refs:
    name: Prepare CI Vars
    runs-on: ubuntu-18.04
    outputs:
      sha_short: ${{ steps.refs.outputs.sha_short }}
      short_ref: ${{ steps.refs.outputs.short_ref }}
      version: ${{ steps.refs.outputs.version }}
    steps:
      - name: Source checkout
        uses: actions/checkout@v2
      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v2
        with:
          dry_run: true
          semantic_version: 17.0.4
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set outputs
        id: refs
        run: |
          export BRANCH=${GITHUB_REF#refs/*/}
          echo "branch: ${BRANCH}"

          export BRANCHTRANSLATED=$(echo ${BRANCH} | tr '/' '_')
          echo "short_ref: ${BRANCHTRANSLATED}"

          export VERSION=""
          if ${{ steps.semantic.outputs.new_release_published == 'true' }}; then
            export VERSION=${{ steps.semantic.outputs.new_release_version }}
          else
            export VERSION=${BRANCHTRANSLATED}
          fi
          echo "New semantic release: ${{ steps.semantic.outputs.new_release_published }}"
          echo "version: ${VERSION}"

          echo "::set-output name=short_ref::${BRANCHTRANSLATED}"
          echo "::set-output name=sha_short::SHA-$(git rev-parse --short=12 HEAD)"
          echo "::set-output name=version::${VERSION}"

  zitadel:
    name: Build ZITADEL
    needs: refs
    runs-on: ubuntu-18.04
    steps:
      - name: Source checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/Dockerfile
          platforms: linux/amd64,linux/arm64, darwin/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
          outputs: type=local,dest=/tmp/zitadel
          build-args: |
            VERSION=${{ needs.refs.outputs.version }}
      - uses: actions/upload-artifact@v2
        with:
          name: zitadel
          path: /tmp/zitadel/

  zitadel-codecov:
    name: Upload ZITADEL Codecov
    needs: [refs, zitadel]
    runs-on: ubuntu-18.04
    steps:
      - name: Source checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - uses: docker/build-push-action@v2
        with:
          context: .
          file: ./build/zitadel/Dockerfile
          platforms: linux/amd64
          target: go-codecov
          cache-from: type=gha,scope=${{ github.workflow }}
          outputs: type=local,dest=/tmp/zitadel
      - uses: codecov/codecov-action@v1
        with:
          name: zitadel-codecov
          files: /tmp/zitadel/profile.cov