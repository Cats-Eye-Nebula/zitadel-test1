name: Docs
env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
on:
  pull_request:
jobs:
  Deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            src:
              - 'docs/**'
              - 'proto/**'
              - '.github/workflows/docsusaurus.yml'
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'yarn'
          cache-dependency-path: docs/yarn.lock
      - name: Install Vercel CLI
        if: steps.filter.outputs.src == 'true'
        run: npm install --global vercel@latest
        working-directory: ./docs
      - name: Pull Vercel Environment Information
        if: steps.filter.outputs.src == 'true'
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./docs
      - name: Build Project Artifacts
        if: steps.filter.outputs.src == 'true'
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./docs
      - name: Deploy Preview to Vercel
        if: ${{ github.ref != 'refs/heads/main' && steps.filter.outputs.src == 'true' }} 
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./docs
      - name: Deploy Production to Vercel 
        if: ${{ github.ref != 'refs/heads/main' && steps.filter.outputs.src == 'true'}}
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        working-directory: ./docs