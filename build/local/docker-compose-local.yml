version: '3.8'

services:
  db:
    profiles: ['backend', 'storage']
    restart: always
    networks:
      - zitadel
    image: cockroachdb/cockroach:v21.2.5
    command: start-single-node --insecure --listen-addr=0.0.0.0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health?ready=1"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    ports:
      - 8080:8080
      - 26257:26257

# starts the backend (API's) of ZITADEL
# Port 50001 serves the GRPC API
# Port 50002 serves the REST API
# Port 50003 serves the login GUI
  backend-run:
    profiles: ['backend']
    restart: on-failure
    networks:
      - zitadel
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:50002/management/v1/healthz"]
      interval: 10s
      timeout: 30s
      retries: 5
      start_period: 20s
    depends_on:
      db:
        condition: service_healthy
      minio: 
        condition: service_healthy
      backend-setup:
        condition: service_completed_successfully
    build:
      context: ../..
      dockerfile: build/zitadel/Dockerfile
      target: dev-go-build
      args:
        ENV: dev
    volumes:
      - ../../.keys:/go/src/github.com/caos/zitadel/.keys
      - ../../.notifications:/go/src/github.com/caos/zitadel/.notifications
    env_file:
      - ./local.env
    environment:
      - ZITADEL_EVENTSTORE_HOST=db
    ports:
      - 50001:50001
      - 50002:50002
      - 50003:50003
    command:
      [
        '-console=false',
        '-localDevMode=true',
        '-config-files=cmd/zitadel/startup.yaml',
        '-config-files=cmd/zitadel/system-defaults.yaml',
        '-config-files=cmd/zitadel/authz.yaml',
        'start',
      ]
