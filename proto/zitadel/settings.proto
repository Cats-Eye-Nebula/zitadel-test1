syntax = "proto3";

import "zitadel/object.proto";
import "validate/validate.proto";
import "google/protobuf/duration.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

package zitadel.settings.v1;

option go_package ="github.com/caos/zitadel/pkg/grpc/settings";

message SecretGenerator {
  string generator_type = 1 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"type\"";
    }
  ];
  zitadel.v1.ObjectDetails details = 2;
  uint32 length = 3;
  google.protobuf.Duration  expiry   = 4;
  bool include_lower_letters = 5;
  bool include_upper_letters = 6;
  bool include_digits = 7;
  bool include_symbols = 8;
}


message SecretGeneratorQuery {
  oneof query {
    option (validate.required) = true;

    SecretGeneratorTypeQuery type_query = 1;
  }
}

message SecretGeneratorTypeQuery {
  string generator_type = 1 [
    (validate.rules).string = {max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"InitCode\""
    }
  ];
  zitadel.v1.TextQueryMethod method = 2 [
    (validate.rules).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "defines which text equality method is used"
    }
  ];
}

message SMTPConfig {
  zitadel.v1.ObjectDetails details = 1;
  string from_address = 2;
  string from_name = 3;
  bool tls = 4;
  string smtp_host = 5;
  string smtp_user = 6;
  string smtp_password = 7;
}
