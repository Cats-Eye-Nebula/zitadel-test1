syntax = "proto3";

package zitadel.policy.v2alpha;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/policy/v2alpha;policy";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";
import "google/protobuf/duration.proto";

message DomainSettings {
    bool loginname_includes_domain = 1 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "the username has to end with the domain of its organization"
        }
    ];
    bool verify_org_domains = 2 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "defines if organization domains should be validated org count as validated automatically"
        }
    ];
    bool smtp_sender_address_matches_instance_domain = 3 [
        (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
            description: "defines if the SMTP sender address domain should match an existing domain on the instance"
        }
    ];
}

