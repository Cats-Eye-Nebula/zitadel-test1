syntax = "proto3";

package zitadel.session.v2alpha;

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/zitadel/zitadel/pkg/grpc/session/v2alpha;session";

message Session {
  string id = 1;
  google.protobuf.Timestamp creation_date = 2;
  google.protobuf.Timestamp change_date = 3;
  uint64 sequence = 4;
  Factors factors = 5;
  map<string, bytes> metadata = 6;
}

message Factors {
  UserFactor user = 1;
  PasswordFactor password = 2;
}

message UserFactor {
  google.protobuf.Timestamp verified_at = 1;
  string id = 2;
  string login_name = 3;
  string display_name = 4;
}

message PasswordFactor {
  google.protobuf.Timestamp verified_at = 1;
}

message Metadata {
  string key = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"my-key\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bytes value = 2 [
    (validate.rules).bytes = {min_len: 1, max_len: 500000},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The value has to be base64 encoded.";
      example: "\"VGhpcyBpcyBteSB0ZXN0IHZhbHVl\"";
      min_length: 1,
      max_length: 500000;
    }
  ];
}

message SearchQuery {
  oneof query {
    option (validate.required) = true;

    IDsQuery ids_query = 1;
  }
}

message IDsQuery {
  repeated string ids = 1;
}

message TokensQuery {
  repeated string ids = 1;
}
