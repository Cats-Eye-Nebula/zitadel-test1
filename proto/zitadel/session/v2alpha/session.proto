syntax = "proto3";

package zitadel.session.v2alpha;

import "zitadel/user/v2alpha/user.proto";

import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/zitadel/zitadel/internal/api/grpc/session/v2alpha;session";

message Session {
  string id = 1;
  map<string,Factor> factors = 2;
  repeated Metadata metadata = 3;
}

message Factor {
  google.protobuf.Timestamp checked = 1;
  oneof factor {
    zitadel.user.v2alpha.User user = 2;
  }
}

message Password {}

message SetMetadataEntry {
  string key = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"my-key\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bytes value = 2 [
    (validate.rules).bytes = {min_len: 1, max_len: 500000},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The value has to be base64 encoded.";
      example: "\"VGhpcyBpcyBteSB0ZXN0IHZhbHVl\"";
      min_length: 1,
      max_length: 500000;
    }
  ];
}

message Metadata {
  string key = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"my-key\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bytes value = 2 [
    (validate.rules).bytes = {min_len: 1, max_len: 500000},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The value has to be base64 encoded.";
      example: "\"VGhpcyBpcyBteSB0ZXN0IHZhbHVl\"";
      min_length: 1,
      max_length: 500000;
    }
  ];
}
