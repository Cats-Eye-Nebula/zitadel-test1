syntax = "proto3";

package zitadel.user.v2alpha;

import "zitadel/options.proto";
import "zitadel/context/v2alpha/context.proto";
import "zitadel/user/v2alpha/user.proto";
import "zitadel/user/v2alpha/email.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/zitadel/zitadel/pkg/grpc/user/v2alpha;user";

service UserService {

  rpc AddUser (AddUserRequest) returns (AddUserResponse) {
    option (google.api.http) = {
      post: "/v2alpha/users"
      body: "*"
    };
  }

    rpc UpdateUser (UpdateUserRequest) returns (UpdateUserResponse) {
      option (google.api.http) = {
        patch: "/v2alpha/users/{user_id}"
        body: "*"
      };
    }

    rpc SetEmail (SetEmailRequest) returns (SetEmailResponse) {
      option (google.api.http) = {
        post: "/v2alpha/users/{user_id}/email"
        body: "*"
      };
    }
}

message AddUserRequest{
  // optionally set your own id unique for the user
  optional string user_id = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"d654e6ba-70a3-48ef-a95d-37c8d8a7901a\"";
    }
  ];
  // optionally set a unique username, if none is provided the email be used
  optional string username = 2 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"minnie-mouse\"";
    }
  ];
  zitadel.context.v2alpha.OrgContext organisation = 3;
  SetUserProfile profile = 4 [
    (validate.rules).message.required = true,
    (google.api.field_behavior) = REQUIRED
  ];
  SetUserEmail email = 5 [
    (validate.rules).message.required = true,
    (google.api.field_behavior) = REQUIRED
  ];
  repeated SetMetadataEntry metadata = 6;
  AddUserPassword password = 7;
}

message AddUserResponse {
  string user_id = 1;
  zitadel.context.v2alpha.ObjectDetails details = 2;
}

message AddUserPassword {
  oneof password {
      SetUserPassword password = 1;
      SetHashedPassword hashed_password = 2;
  }
  bool password_change_required = 3;
}


/*

email and password
  -> verify mail
email verified and password

email and password change
  -> verify mail and set password

email verified and password change
  -> set password

email and no password / init password
  -> init mail?

email verified and no password / init password
  -> password reset mail?

 */

message UpdateUserRequest{
  string user_id = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"69629026806489455\"";
    }
  ];
  SetUserProfile profile = 2;
  SetUserEmail email = 3;
}

message UpdateUserResponse{
  zitadel.context.v2alpha.ObjectDetails details = 1;
}

message SetEmailRequest{
  string user_id = 1;
  string email = 2;
  // if no verification is specified, an email is sent with the default url
  oneof verification {
    SendEmailVerificationCode send_code = 3;
    ReturnEmailVerificationCode return_code = 4;
    bool is_verified = 5 [(validate.rules).bool.const = true];
  }
}

message SetEmailResponse{
  zitadel.context.v2alpha.ObjectDetails details = 1;
}
