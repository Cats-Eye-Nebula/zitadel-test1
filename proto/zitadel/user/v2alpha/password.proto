syntax = "proto3";

package zitadel.user.v2alpha;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/user/v2alpha;user";

import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

message SetUserPassword {
  oneof type {
    Password password = 1;
    HashedPassword hashed_password = 2;
  }
}

message Password {
  string password = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"Secr3tP4ssw0rd!\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bool change_required = 2;
}

message HashedPassword {
  string hash = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"$2a$12$lJ08fqVr8bFJilRVnDT9QeULI7YW.nT3iwUv6dyg0aCrfm3UY8XR2\"";
      description: "\"hashed password\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  string algorithm = 2 [
    (validate.rules).string = {min_len: 1, max_len: 200, const: "bcrypt"},
    (google.api.field_behavior) = REQUIRED,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"bcrypt\"";
      description: "\"algorithm used for the hash. currently only bcrypt is supported\"";
      min_length: 1,
      max_length: 200;
    }
  ];
  bool change_required = 3;
}
