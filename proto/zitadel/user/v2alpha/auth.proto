syntax = "proto3";

package zitadel.user.v2alpha;

option go_package = "github.com/zitadel/zitadel/pkg/grpc/user/v2alpha;user";

import "google/api/field_behavior.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

enum PasskeyAuthenticator {
  PASSKEY_AUTHENTICATOR_UNSPECIFIED = 0;
  PASSKEY_AUTHENTICATOR_PLATFORM = 1;
  PASSKEY_AUTHENTICATOR_CROSS_PLATFORM = 2;
}

message SendPasskeyRegistrationLink {
  optional string url_template = 1 [
    (validate.rules).string = {min_len: 1, max_len: 200},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      min_length: 1;
      max_length: 200;
      example: "\"https://example.com/passkey/register?userID={{.UserID}}&code={{.Code}}&orgID={{.OrgID}}\"";
      description: "\"Optionally set a url_template, which will be used in the mail sent by ZITADEL to guide the user to your registration page. If no template is set, the default ZITADEL url will be used.\""
    }
  ];
}

message ReturnPasskeyRegistrationCode {}

