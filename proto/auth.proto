syntax = "proto3";

import "zitadel/idp.proto";
import "zitadel/user.proto";
import "zitadel/object.proto";
import "zitadel/options.proto";
import "zitadel/org.proto";
import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "protoc-gen-swagger/options/annotations.proto";
import "google/api/field_behavior.proto";

package zitadel.v1;

option go_package ="github.com/caos/zitadel/pkg/grpc/auth";

option (grpc.gateway.protoc_gen_swagger.options.openapiv2_swagger) = {
    info: {
        title: "auth service";
        version: "1.0";
        contact:{
            url: "https://github.com/caos/zitadel/api/auth" //TODO: should be swagger path
        };
    };

    schemes: HTTPS;

    consumes: "application/json";
    consumes: "application/grpc";

    produces: "application/json";
    produces: "application/grpc";
};


service AuthService {

    //User
    rpc GetMyUser(GetMyUserRequest) returns (GetMyUserResponse) {
        option (google.api.http) = {
            get: "/users/me"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyUserName(UpdateMyUserNameRequest) returns (UpdateMyUserNameResponse) {
        option (google.api.http) = {
            put: "/users/me/username"
            body: "*"
        };
    
        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyPassword(UpdateMyPasswordRequest) returns (UpdateMyPasswordResponse) {
        option (google.api.http) = {
            put: "/users/me/passwords/_change"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc GetMyProfile(GetMyProfileRequest) returns (GetMyProfileResponse) {
        option (google.api.http) = {
            get: "/users/me/profile"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyProfile(UpdateMyProfileRequest) returns (UpdateMyProfileResponse) {
        option (google.api.http) = {
            put: "/users/me/profile"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc GetMyEmail(GetMyEmailRequest) returns (GetMyEmailResponse) {
        option (google.api.http) = {
            get: "/users/me/email"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyEmail(UpdateMyEmailRequest) returns (UpdateMyEmailResponse) {
        option (google.api.http) = {
            put: "/users/me/email"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc VerifyMyEmail(VerifyMyEmailRequest) returns (VerifyMyEmailResponse) {
        option (google.api.http) = {
            post: "/users/me/email/_verify"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc ResendMyEmailVerification(ResendMyEmailVerificationRequest) returns (ResendMyEmailVerificationResponse) {
        option (google.api.http) = {
            post: "/users/me/email/_resendverification"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc GetMyPhone(GetMyPhoneRequest) returns (GetMyPhoneResponse) {
        option (google.api.http) = {
            get: "/users/me/phone"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyPhone(UpdateMyPhoneRequest) returns (UpdateMyPhoneResponse) {
        option (google.api.http) = {
            put: "/users/me/phone"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc VerifyMyPhone(VerifyMyPhoneRequest) returns (VerifyMyPhoneResponse) {
        option (google.api.http) = {
            post: "/users/me/phone/_verify"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc ResendMyPhoneVerification(ResendMyPhoneVerificationRequest) returns (ResendMyPhoneVerificationResponse) {
        option (google.api.http) = {
            post: "/users/me/phone/_resendverification"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc RemoveMyPhone(RemoveMyPhoneRequest) returns (RemoveMyPhoneResponse) {
        option (google.api.http) = {
            delete: "/users/me/phone"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc GetMyAddress(GetMyAddressRequest) returns (GetMyAddressResponse) {
        option (google.api.http) = {
            get: "/users/me/address"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc UpdateMyUserAddress(UpdateMyAddressRequest) returns (UpdateMyAddressResponse) {
        option (google.api.http) = {
            put: "/users/me/address"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc SearchMyLinkedIDPs(SearchMyLinkedIDPsRequest) returns (SearchMyLinkedIDPsResponse) {
        option (google.api.http) = {
            post: "/users/me/idps/_search"
            body: "*"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }

    rpc RemoveMyLinkedIDP(RemoveMyLinkedIDPRequest) returns (RemoveMyLinkedIDPResponse) {
        option (google.api.http) = {
            delete: "/users/me/idps/{idp_id}/{linked_user_id}"
        };

        option (zitadel.v1.auth_option) = {
            permission: "authenticated"
        };
    }
}

//GetMyUserRequest is an empty request
// the request parameters are read from the token-header
message GetMyUserRequest {}

message GetMyUserResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.User user = 2;
    google.protobuf.Timestamp last_login = 3;
}

message UpdateMyUserNameRequest {
    string user_name = 1;
}

message UpdateMyUserNameResponse {
    zitadel.v1.MetaData meta_data = 1;
    string user_name = 2;
}

message UpdateMyPasswordRequest {
    //TODO: current_password?
    string password = 1;
}

message UpdateMyPasswordResponse {
    zitadel.v1.MetaData meta_data = 1;
}

message GetMyProfileRequest {}

message GetMyProfileResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Profile profile = 2;
}

message UpdateMyProfileRequest {
    zitadel.user.v1.Profile profile = 1;
}

message UpdateMyProfileResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Profile profile = 2;
}

message GetMyEmailRequest {}

message GetMyEmailResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Email email = 2;
}

message UpdateMyEmailRequest {
    zitadel.user.v1.Email email = 1;
}

message UpdateMyEmailResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Email email = 2;
}

message VerifyMyEmailRequest {
    string code = 1;
}

message VerifyMyEmailResponse {}

message ResendMyEmailVerificationRequest {}

message ResendMyEmailVerificationResponse {}

message GetMyPhoneRequest {}

message GetMyPhoneResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Phone phone = 2;
}

message UpdateMyPhoneRequest {
    zitadel.user.v1.Email email = 1;
}

message UpdateMyPhoneResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Email email = 2;
}

message VerifyMyPhoneRequest {
    string code = 1;
}

message VerifyMyPhoneResponse {}

message ResendMyPhoneVerificationRequest {}

message ResendMyPhoneVerificationResponse {}

message RemoveMyPhoneRequest {}
message RemoveMyPhoneResponse {}

message GetMyAddressRequest {}

message GetMyAddressResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Address address = 2;
}

message UpdateMyAddressRequest {
    zitadel.user.v1.Address address = 1;
}

message UpdateMyAddressResponse {
    zitadel.v1.MetaData meta_data = 1;
    zitadel.user.v1.Address address = 2;
}

message SearchMyLinkedIDPsRequest {
    zitadel.v1.Search meta_data = 1;
    //TODO: maybe search for idp name and linked login name?
}

message SearchMyLinkedIDPsResponse {
    zitadel.v1.Search meta_data = 1;
    
}

message RemoveMyLinkedIDPRequest {
    string idp_id = 1;
    string linked_user_id = 2;
}

message RemoveMyLinkedIDPResponse {
    zitadel.v1.MetaData meta_data = 1;
}