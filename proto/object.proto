syntax = "proto3";

import "google/protobuf/timestamp.proto";

package zitadel.v1;

message MetaData {
    //sequence represents the order of events. It's always upcounting
    //
    // on read: the sequence of the last event reduced by the projection
    //
    // on manipulation: the timestamp of the event(s) added by the manipulation
    uint64 sequence = 1 [
        (google.api.field_behavior) = READ_ONLY
    ];
    //creation_date is the timestamp where the first operation on the object was made
    //
    // on read: the timestamp of the first event of the object
    //
    // on create: the timestamp of the event(s) added by the manipulation
    google.protobuf.Timestamp creation_date = 2 [
        (google.api.field_behavior) = READ_ONLY
    ];
    //change_date is the timestamp when the object was changed
    //
    // on read: the timestamp of the last event reduced by the projection
    //
    // on manipulation: the
    google.protobuf.Timestamp change_date = 2 [
        (google.api.field_behavior) = READ_ONLY
    ];
    //resource_owner is the organisation an object belongs to
    string resource_owner = 4 [
        (google.api.field_behavior) = READ_ONLY
    ];
}

message Search {
    uint64 offset = 1 [
        (google.api.field_behavior) = OPTIONAL
    ];
    uint32 limit = 2 [
        (google.api.field_behavior) = REQUIRED
    ];
    bool asc = 3 [
        (google.api.field_behavior) = OPTIONAL
    ];
    uint64 total_result = 4 [
        (google.api.field_behavior) = OUTPUT_ONLY
    ];
    uint64 processed_sequence = 5 [
        (google.api.field_behavior) = OUTPUT_ONLY
    ];
    google.protobuf.Timestamp view_timestamp = 6 [
        (google.api.field_behavior) = OUTPUT_ONLY
    ];
}

enum TextQueryMethod {//TODO: validate
    TEXTQUERYMETHOD_UNSPECIFIED = 0;
    TEXTQUERYMETHOD_EQUALS = 1;
    TEXTQUERYMETHOD_EQUALS_IGNORE_CASE = ;
    TEXTQUERYMETHOD_STARTS_WITH = 2;
    TEXTQUERYMETHOD_STARTS_WITH_IGNORE_CASE = ;
    TEXTQUERYMETHOD_CONTAINS = 3;
    TEXTQUERYMETHOD_CONTAINS_IGNORE_CASE = ;
    TEXTQUERYMETHOD_ENDS_WITH = 4;
    TEXTQUERYMETHOD_ENDS_WITH_IGNORE_CASE = ;
}

enum ListQueryMethod {
    LISTQUERYMETHOD_UNSPECIFIED = ;
    //TODO: better alternatives?
    // the list must contain at least ONE of the items
    LISTQUERYMETHOD_CONTAINS_ONE = ;
    // the list must contain ALL items
    LISTQUERYMETHOD_CONTAINS_ALL = ;
}
