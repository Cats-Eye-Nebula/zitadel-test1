// Code generated by protoc-gen-cli-client. DO NOT EDIT.

package authn

import (
	cli_client "github.com/adlerhurst/cli-client"
	pflag "github.com/spf13/pflag"
	object "github.com/zitadel/zitadel/pkg/grpc/object"
	os "os"
)

type KeyFlag struct {
	*Key

	changed bool
	set     *pflag.FlagSet

	idFlag             *cli_client.StringParser
	detailsFlag        *object.ObjectDetailsFlag
	typeFlag           *cli_client.EnumParser[KeyType]
	expirationDateFlag *cli_client.TimestampParser
}

func (x *KeyFlag) AddFlags(parent *pflag.FlagSet) {
	x.set = pflag.NewFlagSet("Key", pflag.ContinueOnError)

	x.idFlag = cli_client.NewStringParser(x.set, "id", "")
	x.typeFlag = cli_client.NewEnumParser[KeyType](x.set, "type", "")
	x.expirationDateFlag = cli_client.NewTimestampParser(x.set, "expiration-date", "")
	x.detailsFlag = &object.ObjectDetailsFlag{ObjectDetails: new(object.ObjectDetails)}
	x.detailsFlag.AddFlags(x.set)
	parent.AddFlagSet(x.set)
}

func (x *KeyFlag) ParseFlags(parent *pflag.FlagSet, args []string) {
	flagIndexes := cli_client.FieldIndexes(args, "details")

	if err := x.set.Parse(flagIndexes.Primitives().Args); err != nil {
		cli_client.Logger().Error("failed to parse flags", "cause", err)
		os.Exit(1)
	}

	if flagIdx := flagIndexes.LastByName("details"); flagIdx != nil {
		x.detailsFlag.ParseFlags(x.set, flagIdx.Args)
	}

	if x.idFlag.Changed() {
		x.changed = true
		x.Key.Id = *x.idFlag.Value
	}

	if x.detailsFlag.Changed() {
		x.changed = true
		x.Key.Details = x.detailsFlag.ObjectDetails
	}

	if x.typeFlag.Changed() {
		x.changed = true
		x.Key.Type = *x.typeFlag.Value
	}
	if x.expirationDateFlag.Changed() {
		x.changed = true
		x.Key.ExpirationDate = x.expirationDateFlag.Value
	}
}

func (x *KeyFlag) Changed() bool {
	return x.changed
}
