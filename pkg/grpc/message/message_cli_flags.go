// Code generated by protoc-gen-cli-client. DO NOT EDIT.

package message

import (
	cli_client "github.com/adlerhurst/cli-client"
	pflag "github.com/spf13/pflag"
	os "os"
)

type ErrorDetailFlag struct {
	*ErrorDetail

	changed bool
	set     *pflag.FlagSet

	idFlag      *cli_client.StringParser
	messageFlag *cli_client.StringParser
}

func (x *ErrorDetailFlag) AddFlags(parent *pflag.FlagSet) {
	x.set = pflag.NewFlagSet("ErrorDetail", pflag.ContinueOnError)

	x.idFlag = cli_client.NewStringParser(x.set, "id", "")
	x.messageFlag = cli_client.NewStringParser(x.set, "message", "")
	parent.AddFlagSet(x.set)
}

func (x *ErrorDetailFlag) ParseFlags(parent *pflag.FlagSet, args []string) {
	flagIndexes := cli_client.FieldIndexes(args)

	if err := x.set.Parse(flagIndexes.Primitives().Args); err != nil {
		cli_client.Logger().Error("failed to parse flags", "cause", err)
		os.Exit(1)
	}

	if x.idFlag.Changed() {
		x.changed = true
		x.ErrorDetail.Id = *x.idFlag.Value
	}
	if x.messageFlag.Changed() {
		x.changed = true
		x.ErrorDetail.Message = *x.messageFlag.Value
	}
}

func (x *ErrorDetailFlag) Changed() bool {
	return x.changed
}

type LocalizedMessageFlag struct {
	*LocalizedMessage

	changed bool
	set     *pflag.FlagSet

	keyFlag              *cli_client.StringParser
	localizedMessageFlag *cli_client.StringParser
}

func (x *LocalizedMessageFlag) AddFlags(parent *pflag.FlagSet) {
	x.set = pflag.NewFlagSet("LocalizedMessage", pflag.ContinueOnError)

	x.keyFlag = cli_client.NewStringParser(x.set, "key", "")
	x.localizedMessageFlag = cli_client.NewStringParser(x.set, "localized-message", "")
	parent.AddFlagSet(x.set)
}

func (x *LocalizedMessageFlag) ParseFlags(parent *pflag.FlagSet, args []string) {
	flagIndexes := cli_client.FieldIndexes(args)

	if err := x.set.Parse(flagIndexes.Primitives().Args); err != nil {
		cli_client.Logger().Error("failed to parse flags", "cause", err)
		os.Exit(1)
	}

	if x.keyFlag.Changed() {
		x.changed = true
		x.LocalizedMessage.Key = *x.keyFlag.Value
	}
	if x.localizedMessageFlag.Changed() {
		x.changed = true
		x.LocalizedMessage.LocalizedMessage = *x.localizedMessageFlag.Value
	}
}

func (x *LocalizedMessageFlag) Changed() bool {
	return x.changed
}
