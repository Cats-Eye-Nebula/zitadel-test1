// Code generated by protoc-gen-cli-client. DO NOT EDIT.

package settings

import (
	cli_client "github.com/adlerhurst/cli-client"
	pflag "github.com/spf13/pflag"
	os "os"
)

type LegalAndSupportSettingsFlag struct {
	*LegalAndSupportSettings

	changed bool
	set     *pflag.FlagSet

	tosLinkFlag           *cli_client.StringParser
	privacyPolicyLinkFlag *cli_client.StringParser
	helpLinkFlag          *cli_client.StringParser
	supportEmailFlag      *cli_client.StringParser
	resourceOwnerTypeFlag *cli_client.EnumParser[ResourceOwnerType]
}

func (x *LegalAndSupportSettingsFlag) AddFlags(parent *pflag.FlagSet) {
	x.set = pflag.NewFlagSet("LegalAndSupportSettings", pflag.ContinueOnError)

	x.tosLinkFlag = cli_client.NewStringParser(x.set, "tos-link", "")
	x.privacyPolicyLinkFlag = cli_client.NewStringParser(x.set, "privacy-policy-link", "")
	x.helpLinkFlag = cli_client.NewStringParser(x.set, "help-link", "")
	x.supportEmailFlag = cli_client.NewStringParser(x.set, "support-email", "")
	x.resourceOwnerTypeFlag = cli_client.NewEnumParser[ResourceOwnerType](x.set, "resource-owner-type", "")
	parent.AddFlagSet(x.set)
}

func (x *LegalAndSupportSettingsFlag) ParseFlags(parent *pflag.FlagSet, args []string) {
	flagIndexes := cli_client.FieldIndexes(args)

	if err := x.set.Parse(flagIndexes.Primitives().Args); err != nil {
		cli_client.Logger().Error("failed to parse flags", "cause", err)
		os.Exit(1)
	}

	if x.tosLinkFlag.Changed() {
		x.changed = true
		x.LegalAndSupportSettings.TosLink = *x.tosLinkFlag.Value
	}
	if x.privacyPolicyLinkFlag.Changed() {
		x.changed = true
		x.LegalAndSupportSettings.PrivacyPolicyLink = *x.privacyPolicyLinkFlag.Value
	}
	if x.helpLinkFlag.Changed() {
		x.changed = true
		x.LegalAndSupportSettings.HelpLink = *x.helpLinkFlag.Value
	}
	if x.supportEmailFlag.Changed() {
		x.changed = true
		x.LegalAndSupportSettings.SupportEmail = *x.supportEmailFlag.Value
	}
	if x.resourceOwnerTypeFlag.Changed() {
		x.changed = true
		x.LegalAndSupportSettings.ResourceOwnerType = *x.resourceOwnerTypeFlag.Value
	}
}

func (x *LegalAndSupportSettingsFlag) Changed() bool {
	return x.changed
}
