{
  "swagger": "2.0",
  "info": {
    "title": "admin service",
    "version": "0.1",
    "contact": {
      "url": "https://github.com/caos/zitadel/pkg/admin"
    }
  },
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json",
    "application/grpc"
  ],
  "produces": [
    "application/json",
    "application/grpc"
  ],
  "paths": {
    "/failedevents": {
      "get": {
        "operationId": "AdminService_GetFailedEvents",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1FailedEvents"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/failedevents/{database}/{view_name}/{failed_sequence}": {
      "delete": {
        "operationId": "AdminService_RemoveFailedEvent",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "database",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view_name",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "failed_sequence",
            "in": "path",
            "required": true,
            "type": "string",
            "format": "uint64"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/healthz": {
      "get": {
        "summary": "Healthz returns status OK as soon as the service started",
        "operationId": "AdminService_Healthz",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/_search": {
      "post": {
        "operationId": "AdminService_SearchIdps",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdpSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpSearchRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/oidc": {
      "post": {
        "operationId": "AdminService_CreateOidcIdp",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Idp"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OidcIdpConfigCreate"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/{idp_id}/oidcconfig": {
      "put": {
        "operationId": "AdminService_UpdateOidcIdpConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OidcIdpConfig"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "idp_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OidcIdpConfigUpdate"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/{id}": {
      "get": {
        "operationId": "AdminService_IdpByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdpView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "operationId": "AdminService_RemoveIdpConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateIdpConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Idp"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpUpdate"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/{id}/_deactivate": {
      "put": {
        "operationId": "AdminService_DeactivateIdpConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Idp"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpID"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/idps/{id}/_reactivate": {
      "put": {
        "operationId": "AdminService_ReactivateIdpConfig",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Idp"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpID"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/members": {
      "post": {
        "operationId": "AdminService_AddIamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IamMember"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AddIamMemberRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/members/_search": {
      "post": {
        "operationId": "AdminService_SearchIamMembers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IamMemberSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IamMemberSearchRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/members/roles": {
      "get": {
        "operationId": "AdminService_GetIamMemberRoles",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IamMemberRoles"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/members/{user_id}": {
      "delete": {
        "operationId": "AdminService_RemoveIamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_ChangeIamMember",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IamMember"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1ChangeIamMemberRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/_isunique": {
      "get": {
        "summary": "ORG",
        "operationId": "AdminService_IsOrgUnique",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UniqueOrgResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/_search": {
      "post": {
        "operationId": "AdminService_SearchOrgs",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrgSearchRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/_setup": {
      "post": {
        "operationId": "AdminService_SetUpOrg",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgSetUpResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrgSetUpRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/default/policies/orgiam": {
      "get": {
        "summary": "ORG_IAM_POLICY",
        "operationId": "AdminService_GetDefaultOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateDefaultOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/{id}": {
      "get": {
        "operationId": "AdminService_GetOrgByID",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Org"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/orgs/{org_id}/policies/orgiam": {
      "get": {
        "operationId": "AdminService_GetOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "delete": {
        "operationId": "AdminService_DeleteOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "post": {
        "operationId": "AdminService_CreateOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateOrgIamPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "org_id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1OrgIamPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/login": {
      "get": {
        "operationId": "AdminService_GetDefaultLoginPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultLoginPolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateDefaultLoginPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultLoginPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DefaultLoginPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/login/idpproviders": {
      "post": {
        "operationId": "AdminService_AddIdpProviderToDefaultLoginPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdpProviderID"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpProviderID"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/login/idpproviders/_search": {
      "post": {
        "operationId": "AdminService_GetDefaultLoginPolicyIdpProviders",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1IdpProviderSearchResponse"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1IdpProviderSearchRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/login/idpproviders/{idp_config_id}": {
      "delete": {
        "operationId": "AdminService_RemoveIdpProviderFromDefaultLoginPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "idp_config_id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/password/age": {
      "get": {
        "operationId": "AdminService_GetDefaultPasswordAgePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordAgePolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateDefaultPasswordAgePolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordAgePolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordAgePolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/password/complexity": {
      "get": {
        "operationId": "AdminService_GetDefaultPasswordComplexityPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordComplexityPolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateDefaultPasswordComplexityPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordComplexityPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordComplexityPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/policies/password/lockout": {
      "get": {
        "operationId": "AdminService_GetDefaultPasswordLockoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordLockoutPolicyView"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      },
      "put": {
        "operationId": "AdminService_UpdateDefaultPasswordLockoutPolicy",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordLockoutPolicy"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1DefaultPasswordLockoutPolicyRequest"
            }
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    },
    "/ready": {
      "get": {
        "summary": "Ready returns status OK as soon as all dependent services are available",
        "operationId": "AdminService_Ready",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/validate": {
      "get": {
        "operationId": "AdminService_Validate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "type": "object"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/views": {
      "get": {
        "operationId": "AdminService_GetViews",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1Views"
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "tags": [
          "AdminService"
        ]
      }
    },
    "/views/{database}/{view_name}": {
      "post": {
        "operationId": "AdminService_ClearView",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "properties": {}
            }
          },
          "default": {
            "description": "An unexpected error response",
            "schema": {
              "$ref": "#/definitions/runtimeError"
            }
          }
        },
        "parameters": [
          {
            "name": "database",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "view_name",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "AdminService"
        ]
      }
    }
  },
  "definitions": {
    "protobufAny": {
      "type": "object",
      "properties": {
        "type_url": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        },
        "value": {
          "type": "string",
          "format": "byte",
          "description": "Must be a valid serialized protocol buffer of the above specified type."
        }
      },
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := ptypes.MarshalAny(foo)\n     ...\n     foo := \u0026pb.Foo{}\n     if err := ptypes.UnmarshalAny(any, foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "protobufNullValue": {
      "type": "string",
      "enum": [
        "NULL_VALUE"
      ],
      "default": "NULL_VALUE",
      "description": "`NullValue` is a singleton enumeration to represent the null value for the\n`Value` type union.\n\n The JSON representation for `NullValue` is JSON `null`.\n\n - NULL_VALUE: Null value."
    },
    "runtimeError": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string"
        },
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AddIamMemberRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1ChangeIamMemberRequest": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1CreateHumanRequest": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "preferred_language": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "email": {
          "type": "string"
        },
        "is_email_verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "is_phone_verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "country": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "street_address": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1CreateMachineRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "v1CreateOrgRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "user_name": {
          "type": "string"
        },
        "human": {
          "$ref": "#/definitions/v1CreateHumanRequest"
        },
        "machine": {
          "$ref": "#/definitions/v1CreateMachineRequest"
        }
      }
    },
    "v1DefaultLoginPolicy": {
      "type": "object",
      "properties": {
        "allow_username_password": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_register": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_external_idp": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultLoginPolicyRequest": {
      "type": "object",
      "properties": {
        "allow_username_password": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_register": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_external_idp": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1DefaultLoginPolicyView": {
      "type": "object",
      "properties": {
        "allow_username_password": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_register": {
          "type": "boolean",
          "format": "boolean"
        },
        "allow_external_idp": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordAgePolicy": {
      "type": "object",
      "properties": {
        "max_age_days": {
          "type": "string",
          "format": "uint64"
        },
        "expire_warn_days": {
          "type": "string",
          "format": "uint64"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordAgePolicyRequest": {
      "type": "object",
      "properties": {
        "max_age_days": {
          "type": "string",
          "format": "uint64"
        },
        "expire_warn_days": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1DefaultPasswordAgePolicyView": {
      "type": "object",
      "properties": {
        "max_age_days": {
          "type": "string",
          "format": "uint64"
        },
        "expire_warn_days": {
          "type": "string",
          "format": "uint64"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordComplexityPolicy": {
      "type": "object",
      "properties": {
        "min_length": {
          "type": "string",
          "format": "uint64"
        },
        "has_uppercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_lowercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_number": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_symbol": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordComplexityPolicyRequest": {
      "type": "object",
      "properties": {
        "min_length": {
          "type": "string",
          "format": "uint64"
        },
        "has_uppercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_lowercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_number": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_symbol": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1DefaultPasswordComplexityPolicyView": {
      "type": "object",
      "properties": {
        "min_length": {
          "type": "string",
          "format": "uint64"
        },
        "has_uppercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_lowercase": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_number": {
          "type": "boolean",
          "format": "boolean"
        },
        "has_symbol": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordLockoutPolicy": {
      "type": "object",
      "properties": {
        "max_attempts": {
          "type": "string",
          "format": "uint64"
        },
        "show_lockout_failure": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1DefaultPasswordLockoutPolicyRequest": {
      "type": "object",
      "properties": {
        "max_attempts": {
          "type": "string",
          "format": "uint64"
        },
        "show_lockout_failure": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1DefaultPasswordLockoutPolicyView": {
      "type": "object",
      "properties": {
        "max_attempts": {
          "type": "string",
          "format": "uint64"
        },
        "show_lockout_failure": {
          "type": "boolean",
          "format": "boolean"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1FailedEvent": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "view_name": {
          "type": "string"
        },
        "failed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "failure_count": {
          "type": "string",
          "format": "uint64"
        },
        "error_message": {
          "type": "string"
        }
      }
    },
    "v1FailedEvents": {
      "type": "object",
      "properties": {
        "failed_events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1FailedEvent"
          }
        }
      }
    },
    "v1Gender": {
      "type": "string",
      "enum": [
        "GENDER_UNSPECIFIED",
        "GENDER_FEMALE",
        "GENDER_MALE",
        "GENDER_DIVERSE"
      ],
      "default": "GENDER_UNSPECIFIED"
    },
    "v1HumanResponse": {
      "type": "object",
      "properties": {
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "nick_name": {
          "type": "string"
        },
        "preferred_language": {
          "type": "string"
        },
        "gender": {
          "$ref": "#/definitions/v1Gender"
        },
        "email": {
          "type": "string"
        },
        "is_email_verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "phone": {
          "type": "string"
        },
        "is_phone_verified": {
          "type": "boolean",
          "format": "boolean"
        },
        "country": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "postal_code": {
          "type": "string"
        },
        "region": {
          "type": "string"
        },
        "street_address": {
          "type": "string"
        }
      }
    },
    "v1IamMember": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1IamMemberRoles": {
      "type": "object",
      "properties": {
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1IamMemberSearchKey": {
      "type": "string",
      "enum": [
        "IAMMEMBERSEARCHKEY_UNSPECIFIED",
        "IAMMEMBERSEARCHKEY_FIRST_NAME",
        "IAMMEMBERSEARCHKEY_LAST_NAME",
        "IAMMEMBERSEARCHKEY_EMAIL",
        "IAMMEMBERSEARCHKEY_USER_ID"
      ],
      "default": "IAMMEMBERSEARCHKEY_UNSPECIFIED"
    },
    "v1IamMemberSearchQuery": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v1IamMemberSearchKey"
        },
        "method": {
          "$ref": "#/definitions/v1SearchMethod"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1IamMemberSearchRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IamMemberSearchQuery"
          }
        }
      }
    },
    "v1IamMemberSearchResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "total_result": {
          "type": "string",
          "format": "uint64"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IamMemberView"
          }
        },
        "processed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "view_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IamMemberView": {
      "type": "object",
      "properties": {
        "user_id": {
          "type": "string"
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "user_name": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "first_name": {
          "type": "string"
        },
        "last_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        }
      }
    },
    "v1Idp": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1IdpState"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "logo_src": {
          "type": "string",
          "format": "byte"
        },
        "oidc_config": {
          "$ref": "#/definitions/v1OidcIdpConfig"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1IdpID": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        }
      }
    },
    "v1IdpProviderID": {
      "type": "object",
      "properties": {
        "idp_config_id": {
          "type": "string"
        }
      }
    },
    "v1IdpProviderSearchRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1IdpProviderSearchResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "total_result": {
          "type": "string",
          "format": "uint64"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IdpProviderView"
          }
        },
        "processed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "view_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IdpProviderView": {
      "type": "object",
      "properties": {
        "idp_config_id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1IdpType"
        }
      }
    },
    "v1IdpSearchKey": {
      "type": "string",
      "enum": [
        "IDPSEARCHKEY_UNSPECIFIED",
        "IDPSEARCHKEY_IDP_CONFIG_ID",
        "IDPSEARCHKEY_NAME"
      ],
      "default": "IDPSEARCHKEY_UNSPECIFIED"
    },
    "v1IdpSearchQuery": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v1IdpSearchKey"
        },
        "method": {
          "$ref": "#/definitions/v1SearchMethod"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1IdpSearchRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IdpSearchQuery"
          }
        }
      }
    },
    "v1IdpSearchResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "total_result": {
          "type": "string",
          "format": "uint64"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1IdpView"
          }
        },
        "processed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "view_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1IdpState": {
      "type": "string",
      "enum": [
        "IDPCONFIGSTATE_UNSPECIFIED",
        "IDPCONFIGSTATE_ACTIVE",
        "IDPCONFIGSTATE_INACTIVE"
      ],
      "default": "IDPCONFIGSTATE_UNSPECIFIED"
    },
    "v1IdpType": {
      "type": "string",
      "enum": [
        "IDPTYPE_UNSPECIFIED",
        "IDPTYPE_OIDC",
        "IDPTYPE_SAML"
      ],
      "default": "IDPTYPE_UNSPECIFIED"
    },
    "v1IdpUpdate": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "logo_src": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "v1IdpView": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1IdpState"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "logo_src": {
          "type": "string",
          "format": "byte"
        },
        "oidc_config": {
          "$ref": "#/definitions/v1OidcIdpConfigView"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        }
      }
    },
    "v1MachineKeyResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/v1MachineKeyType"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "expiration_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1MachineKeyType": {
      "type": "string",
      "enum": [
        "MACHINEKEY_UNSPECIFIED",
        "MACHINEKEY_JSON"
      ],
      "default": "MACHINEKEY_UNSPECIFIED"
    },
    "v1MachineResponse": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "keys": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1MachineKeyResponse"
          }
        }
      }
    },
    "v1OIDCMappingField": {
      "type": "string",
      "enum": [
        "OIDCMAPPINGFIELD_UNSPECIFIED",
        "OIDCMAPPINGFIELD_PREFERRED_USERNAME",
        "OIDCMAPPINGFIELD_EMAIL"
      ],
      "default": "OIDCMAPPINGFIELD_UNSPECIFIED"
    },
    "v1OidcIdpConfig": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "v1OidcIdpConfigCreate": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "logo_src": {
          "type": "string",
          "format": "byte"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idp_display_name_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        },
        "username_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        }
      }
    },
    "v1OidcIdpConfigUpdate": {
      "type": "object",
      "properties": {
        "idp_id": {
          "type": "string"
        },
        "client_id": {
          "type": "string"
        },
        "client_secret": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idp_display_name_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        },
        "username_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        }
      }
    },
    "v1OidcIdpConfigView": {
      "type": "object",
      "properties": {
        "client_id": {
          "type": "string"
        },
        "issuer": {
          "type": "string"
        },
        "scopes": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "idp_display_name_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        },
        "username_mapping": {
          "$ref": "#/definitions/v1OIDCMappingField"
        }
      }
    },
    "v1Org": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1OrgState"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "name": {
          "type": "string"
        },
        "domain": {
          "type": "string"
        }
      }
    },
    "v1OrgIamPolicy": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "user_login_must_be_domain": {
          "type": "boolean",
          "format": "boolean"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1OrgIamPolicyRequest": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "user_login_must_be_domain": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1OrgIamPolicyView": {
      "type": "object",
      "properties": {
        "org_id": {
          "type": "string"
        },
        "user_login_must_be_domain": {
          "type": "boolean",
          "format": "boolean"
        },
        "default": {
          "type": "boolean",
          "format": "boolean"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1OrgSearchKey": {
      "type": "string",
      "enum": [
        "ORGSEARCHKEY_UNSPECIFIED",
        "ORGSEARCHKEY_NAME",
        "ORGSEARCHKEY_DOMAIN",
        "ORGSEARCHKEY_STATE"
      ],
      "default": "ORGSEARCHKEY_UNSPECIFIED"
    },
    "v1OrgSearchMethod": {
      "type": "string",
      "enum": [
        "ORGSEARCHMETHOD_EQUALS",
        "ORGSEARCHMETHOD_STARTS_WITH",
        "ORGSEARCHMETHOD_CONTAINS"
      ],
      "default": "ORGSEARCHMETHOD_EQUALS"
    },
    "v1OrgSearchQuery": {
      "type": "object",
      "properties": {
        "key": {
          "$ref": "#/definitions/v1OrgSearchKey"
        },
        "method": {
          "$ref": "#/definitions/v1OrgSearchMethod"
        },
        "value": {
          "type": "string"
        }
      }
    },
    "v1OrgSearchRequest": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "sorting_column": {
          "$ref": "#/definitions/v1OrgSearchKey"
        },
        "asc": {
          "type": "boolean",
          "format": "boolean"
        },
        "queries": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1OrgSearchQuery"
          }
        }
      }
    },
    "v1OrgSearchResponse": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "uint64"
        },
        "limit": {
          "type": "string",
          "format": "uint64"
        },
        "total_result": {
          "type": "string",
          "format": "uint64"
        },
        "result": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1Org"
          }
        },
        "processed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "view_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1OrgSetUpRequest": {
      "type": "object",
      "properties": {
        "org": {
          "$ref": "#/definitions/v1CreateOrgRequest"
        },
        "user": {
          "$ref": "#/definitions/v1CreateUserRequest"
        }
      }
    },
    "v1OrgSetUpResponse": {
      "type": "object",
      "properties": {
        "org": {
          "$ref": "#/definitions/v1Org"
        },
        "user": {
          "$ref": "#/definitions/v1UserResponse"
        }
      }
    },
    "v1OrgState": {
      "type": "string",
      "enum": [
        "ORGSTATE_UNSPECIFIED",
        "ORGSTATE_ACTIVE",
        "ORGSTATE_INACTIVE"
      ],
      "default": "ORGSTATE_UNSPECIFIED"
    },
    "v1SearchMethod": {
      "type": "string",
      "enum": [
        "SEARCHMETHOD_EQUALS",
        "SEARCHMETHOD_STARTS_WITH",
        "SEARCHMETHOD_CONTAINS",
        "SEARCHMETHOD_EQUALS_IGNORE_CASE",
        "SEARCHMETHOD_STARTS_WITH_IGNORE_CASE",
        "SEARCHMETHOD_CONTAINS_IGNORE_CASE",
        "SEARCHMETHOD_NOT_EQUALS",
        "SEARCHMETHOD_GREATER_THAN",
        "SEARCHMETHOD_LESS_THAN",
        "SEARCHMETHOD_IS_ONE_OF",
        "SEARCHMETHOD_LIST_CONTAINS"
      ],
      "default": "SEARCHMETHOD_EQUALS"
    },
    "v1UniqueOrgResponse": {
      "type": "object",
      "properties": {
        "is_unique": {
          "type": "boolean",
          "format": "boolean"
        }
      }
    },
    "v1UserResponse": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "state": {
          "$ref": "#/definitions/v1UserState"
        },
        "creation_date": {
          "type": "string",
          "format": "date-time"
        },
        "change_date": {
          "type": "string",
          "format": "date-time"
        },
        "sequence": {
          "type": "string",
          "format": "uint64"
        },
        "user_name": {
          "type": "string"
        },
        "human": {
          "$ref": "#/definitions/v1HumanResponse"
        },
        "machine": {
          "$ref": "#/definitions/v1MachineResponse"
        }
      }
    },
    "v1UserState": {
      "type": "string",
      "enum": [
        "USERSTATE_UNSPECIFIED",
        "USERSTATE_ACTIVE",
        "USERSTATE_INACTIVE",
        "USERSTATE_DELETED",
        "USERSTATE_LOCKED",
        "USERSTATE_SUSPEND",
        "USERSTATE_INITIAL"
      ],
      "default": "USERSTATE_UNSPECIFIED"
    },
    "v1View": {
      "type": "object",
      "properties": {
        "database": {
          "type": "string"
        },
        "view_name": {
          "type": "string"
        },
        "processed_sequence": {
          "type": "string",
          "format": "uint64"
        },
        "view_timestamp": {
          "type": "string",
          "format": "date-time"
        }
      }
    },
    "v1Views": {
      "type": "object",
      "properties": {
        "views": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/v1View"
          }
        }
      }
    }
  }
}
