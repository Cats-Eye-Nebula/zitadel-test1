// Code generated by protoc-gen-authmethod. DO NOT EDIT.

package grpc

import (
	"google.golang.org/grpc"

	utils_auth "github.com/caos/zitadel/internal/api/auth"
	"github.com/caos/zitadel/internal/api/grpc/server/middleware"
)

/**
 * AdminService
 */

var AdminService_AuthMethods = utils_auth.MethodMapping{

	"/zitadel.admin.api.v1.AdminService/IsOrgUnique": utils_auth.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/zitadel.admin.api.v1.AdminService/GetOrgByID": utils_auth.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/zitadel.admin.api.v1.AdminService/SearchOrgs": utils_auth.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/zitadel.admin.api.v1.AdminService/SetUpOrg": utils_auth.Option{
		Permission: "iam.write",
		CheckParam: "",
	},
}

func AdminService_Authorization_Interceptor(verifier utils_auth.TokenVerifier, authConf *utils_auth.Config) grpc.UnaryServerInterceptor {
	return middleware.AuthorizationInterceptor(verifier, authConf, AdminService_AuthMethods)
}
