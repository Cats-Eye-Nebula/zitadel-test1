// Code generated by protoc-gen-authmethod. DO NOT EDIT.

package grpc

import (
	"google.golang.org/grpc"

	"github.com/caos/zitadel/internal/api/authz"
	"github.com/caos/zitadel/internal/api/grpc/server/middleware"
)

/**
 * AdminService
 */

var AdminService_AuthMethods = authz.MethodMapping{

	"/caos.zitadel.admin.api.v1.AdminService/IsOrgUnique": authz.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/GetOrgByID": authz.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/SearchOrgs": authz.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/SetUpOrg": authz.Option{
		Permission: "iam.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/GetOrgIamPolicy": authz.Option{
		Permission: "iam.policy.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/CreateOrgIamPolicy": authz.Option{
		Permission: "iam.policy.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/UpdateOrgIamPolicy": authz.Option{
		Permission: "iam.policy.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/DeleteOrgIamPolicy": authz.Option{
		Permission: "iam.policy.delete",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/GetIamMemberRoles": authz.Option{
		Permission: "iam.member.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/AddIamMember": authz.Option{
		Permission: "iam.member.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/ChangeIamMember": authz.Option{
		Permission: "iam.member.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/RemoveIamMember": authz.Option{
		Permission: "iam.member.delete",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/SearchIamMembers": authz.Option{
		Permission: "iam.member.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/GetViews": authz.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/ClearView": authz.Option{
		Permission: "iam.write",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/GetFailedEvents": authz.Option{
		Permission: "iam.read",
		CheckParam: "",
	},

	"/caos.zitadel.admin.api.v1.AdminService/RemoveFailedEvent": authz.Option{
		Permission: "iam.write",
		CheckParam: "",
	},
}

func AdminService_Authorization_Interceptor(verifier authz.TokenVerifier, authConf *authz.Config) grpc.UnaryServerInterceptor {
	return middleware.AuthorizationInterceptor(verifier, authConf, AdminService_AuthMethods)
}
